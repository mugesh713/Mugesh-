import { __esmMin as e } from "./rolldown-runtime.6X8PNUJl.mjs";
import {
  Y as t,
  ae as n,
  e as r,
  fe as i,
  init_jsx_runtime as a,
  init_npm_react_18_2 as o,
  init_ssg_sandbox_shims as s,
  j as c,
  npm_react_18_2_exports as l,
  p as u,
  pe as d,
  q as f,
  re as p,
  se as m,
  te as h,
  u as g,
  ue as _,
  window as v,
  x as y,
  ye as b,
} from "./react.B1HIfdOm.mjs";
import {
  LayoutGroup as x,
  MotionConfigContext as S,
  animate as C,
  cubicBezier as w,
  frame as T,
  init_framer_motion_B43RTWKU as E,
  motion as D,
  useInView as O,
  useMotionValue as k,
  useReducedMotion as A,
  useSpring as j,
  useTransform as M,
} from "./motion.Bt0WCZwK.mjs";
import {
  ComponentViewportProvider as N,
  Container as P,
  ControlType as F,
  GeneratedComponentContext as ee,
  Image3 as te,
  Link as I,
  PropertyOverrides2 as L,
  RenderTarget as ne,
  ResolveLinks as re,
  RichText as R,
  SVG as z,
  SmartComponentScopedContainer as ie,
  addFonts as B,
  addPropertyControls as V,
  cx as H,
  fontStore as ae,
  getFonts as U,
  getFontsFromSharedStyle as W,
  getLoadingLazyAtYPosition as G,
  getPropertyControls as oe,
  init_framer_6PNBS5CQ as se,
  useActiveVariantCallback as ce,
  useComponentViewport as le,
  useCustomCursors as ue,
  useHydratedBreakpointVariants as de,
  useIsOnFramerCanvas as fe,
  useLocaleInfo as pe,
  useMetadata as me,
  useOnVariantChange as he,
  useRouteElementId as ge,
  useRouter as _e,
  useVariantState as ve,
  withCSS as K,
  withFX as ye,
  withOptimizedAppearEffect as be,
  withVariantAppearEffect as xe,
} from "./framer.BuhMpsbc.mjs";
import {
  className as Se,
  css as Ce,
  fmV0Anf22_default as we,
  fonts as Te,
  h6OYnRfc4_default as Ee,
  init_DOWnf2wWb as De,
  init_augiA20Il as Oe,
  init_fmV0Anf22 as ke,
  init_h6OYnRfc4 as Ae,
  metadata$1 as je,
} from "./shared-lib.BN-A3uXX.mjs";
var Me,
  Ne,
  Pe,
  Fe = e(() => {
    se(),
      ae.loadFonts([
        `GF;DM Sans-500`,
        `GF;DM Sans-700`,
        `GF;DM Sans-700italic`,
        `GF;DM Sans-500italic`,
      ]),
      (Me = [
        {
          explicitInter: !0,
          fonts: [
            {
              family: `DM Sans`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/dmsans/v15/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwAkJxhS2f3ZGMZpg.woff2`,
              weight: `500`,
            },
            {
              family: `DM Sans`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/dmsans/v15/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwARZthS2f3ZGMZpg.woff2`,
              weight: `700`,
            },
            {
              family: `DM Sans`,
              source: `google`,
              style: `italic`,
              url: `https://fonts.gstatic.com/s/dmsans/v15/rP2rp2ywxg089UriCZaSExd86J3t9jz86Mvy4qCRAL19DksVat9uCm32RmYJpso5.woff2`,
              weight: `700`,
            },
            {
              family: `DM Sans`,
              source: `google`,
              style: `italic`,
              url: `https://fonts.gstatic.com/s/dmsans/v15/rP2rp2ywxg089UriCZaSExd86J3t9jz86Mvy4qCRAL19DksVat-7DW32RmYJpso5.woff2`,
              weight: `500`,
            },
          ],
        },
      ]),
      (Ne = [
        `.framer-u628B .framer-styles-preset-2mfvz6:not(.rich-text-wrapper), .framer-u628B .framer-styles-preset-2mfvz6.rich-text-wrapper p { --framer-font-family: "DM Sans", "DM Sans Placeholder", sans-serif; --framer-font-family-bold: "DM Sans", "DM Sans Placeholder", sans-serif; --framer-font-family-bold-italic: "DM Sans", "DM Sans Placeholder", sans-serif; --framer-font-family-italic: "DM Sans", "DM Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 16px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: -0.5px; --framer-line-height: 26px; --framer-paragraph-spacing: 0px; --framer-text-alignment: start; --framer-text-color: var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }`,
      ]),
      (Pe = `framer-u628B`);
  }),
  Ie,
  Le,
  Re,
  ze,
  Be,
  Ve,
  He,
  Ue,
  We,
  Ge,
  Ke,
  qe = e(() => {
    a(),
      se(),
      E(),
      o(),
      Fe(),
      (Ie = `framer-Pi4Tf`),
      (Le = { bE5o15lpBWNEulL9fn: `framer-v-13r6p43` }),
      (Re = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
      (ze = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (Be = D.create(y)),
      (Ve = ({
        background: e,
        height: t,
        id: n,
        title: r,
        width: i,
        ...a
      }) => ({
        ...a,
        eLJBf2lXN: r ?? a.eLJBf2lXN ?? `Problem Solved`,
        ttssQUkSZ:
          e ??
          a.ttssQUkSZ ??
          `var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214))`,
      })),
      (He = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (Ue = t(function (e, t) {
        let r = d(null),
          i = t ?? r,
          a = n(),
          { activeLocale: o, setLocale: s } = pe();
        le();
        let {
            style: c,
            className: l,
            layoutId: f,
            variant: p,
            eLJBf2lXN: m,
            ttssQUkSZ: h,
            ..._
          } = Ve(e),
          {
            baseVariant: v,
            classNames: b,
            clearLoadingGesture: S,
            gestureHandlers: C,
            gestureVariant: w,
            isLoading: T,
            setGestureState: E,
            setVariant: O,
            variants: k,
          } = ve({
            defaultVariant: `bE5o15lpBWNEulL9fn`,
            ref: i,
            variant: p,
            variantClassNames: Le,
          }),
          A = He(e, k),
          j = H(Ie, Pe);
        return u(x, {
          id: f ?? a,
          children: u(Be, {
            animate: k,
            initial: !1,
            children: u(ze, {
              value: Re,
              children: g(D.div, {
                ..._,
                ...C,
                className: H(j, `framer-13r6p43`, l, b),
                "data-framer-name": `Primary`,
                draggable: `false`,
                layoutDependency: A,
                layoutId: `bE5o15lpBWNEulL9fn`,
                ref: i,
                style: {
                  backgroundColor: h,
                  borderBottomLeftRadius: 15,
                  borderBottomRightRadius: 15,
                  borderTopLeftRadius: 15,
                  borderTopRightRadius: 15,
                  ...c,
                },
                children: [
                  u(R, {
                    __fromCanvasComponent: !0,
                    children: u(y, {
                      children: u(D.p, {
                        className: `framer-styles-preset-2mfvz6`,
                        "data-styles-preset": `VqRaec8fA`,
                        children: `Problem Solved`,
                      }),
                    }),
                    className: `framer-1dohs3y`,
                    "data-framer-name": `Text`,
                    fonts: [`Inter`],
                    layoutDependency: A,
                    layoutId: `bE5o15lpBJUe7GOhGh`,
                    style: {
                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                      "--framer-link-text-decoration": `underline`,
                    },
                    text: m,
                    verticalAlignment: `top`,
                    withExternalLayout: !0,
                  }),
                  u(D.div, {
                    className: `framer-zdhecl`,
                    "data-framer-name": `Diamond`,
                    layoutDependency: A,
                    layoutId: `bE5o15lpBrgwSSotHq`,
                    style: { backgroundColor: h, rotate: -45 },
                  }),
                ],
              }),
            }),
          }),
        });
      })),
      (We = [
        `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
        `.framer-Pi4Tf.framer-11alzfi, .framer-Pi4Tf .framer-11alzfi { display: block; }`,
        `.framer-Pi4Tf.framer-13r6p43 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 6px 10px 6px 10px; position: relative; width: min-content; }`,
        `.framer-Pi4Tf .framer-1dohs3y { flex: none; height: auto; position: relative; white-space: pre; width: auto; }`,
        `.framer-Pi4Tf .framer-zdhecl { bottom: -5px; flex: none; height: 10px; left: 23px; overflow: hidden; position: absolute; width: 10px; z-index: 1; }`,
        `@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-Pi4Tf.framer-13r6p43 { gap: 0px; } .framer-Pi4Tf.framer-13r6p43 > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-Pi4Tf.framer-13r6p43 > :first-child { margin-left: 0px; } .framer-Pi4Tf.framer-13r6p43 > :last-child { margin-right: 0px; } }`,
        ...Ne,
      ]),
      (Ge = K(Ue, We, `framer-Pi4Tf`)),
      (Ke = Ge),
      (Ge.displayName = `Pin`),
      (Ge.defaultProps = { height: 38, width: 130 }),
      V(Ge, {
        eLJBf2lXN: {
          defaultValue: `Problem Solved`,
          displayTextArea: !0,
          title: `Title`,
          type: F.String,
        },
        ttssQUkSZ: {
          defaultValue: `var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214)) /* {"name":"Purple"} */`,
          title: `Background`,
          type: F.Color,
        },
      }),
      B(
        Ge,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F`,
                url: `https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116`,
                url: `https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+1F00-1FFF`,
                url: `https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0370-03FF`,
                url: `https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF`,
                url: `https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD`,
                url: `https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2`,
                weight: `400`,
              },
              {
                family: `Inter`,
                source: `framer`,
                style: `normal`,
                unicodeRange: `U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB`,
                url: `https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2`,
                weight: `400`,
              },
            ],
          },
          ...W(Me),
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  }),
  Je,
  Ye,
  Xe = e(() => {
    (Je = (e) => e), (Ye = (e) => typeof e == `function`);
  }),
  Ze = e(() => {
    Xe();
  }),
  Qe = e(() => {
    Ze();
  });
function $e(e, t) {
  var n = {};
  for (var r in e)
    Object.prototype.hasOwnProperty.call(e, r) &&
      t.indexOf(r) < 0 &&
      (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == `function`) {
    var i = 0;
    for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
      t.indexOf(r[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
        (n[r[i]] = e[r[i]]);
  }
  return n;
}
var et = e(() => {}),
  tt,
  nt = e(() => {
    (tt = {}),
      Object.defineProperty(tt, `__esModule`, { value: !0 }),
      (tt.warning = function () {}),
      (tt.invariant = function () {}),
      tt.__esModule,
      tt.warning,
      tt.invariant;
  }),
  rt = e(() => {
    Xe();
  });
function it(e, t) {
  return (
    typeof e == `string`
      ? t
        ? (t[e] ?? (t[e] = document.querySelectorAll(e)), (e = t[e]))
        : (e = document.querySelectorAll(e))
      : e instanceof Element && (e = [e]),
    Array.from(e || [])
  );
}
function at(e, t, { root: n, margin: r, amount: i = `any` } = {}) {
  if (typeof IntersectionObserver > `u`) return () => {};
  let a = it(e),
    o = new WeakMap(),
    s = new IntersectionObserver(
      (e) => {
        e.forEach((e) => {
          let n = o.get(e.target);
          if (e.isIntersecting !== !!n)
            if (e.isIntersecting) {
              let n = t(e);
              Ye(n) ? o.set(e.target, n) : s.unobserve(e.target);
            } else n && (n(e), o.delete(e.target));
        });
      },
      { root: n, rootMargin: r, threshold: typeof i == `number` ? i : Dt[i] }
    );
  return a.forEach((e) => s.observe(e)), () => s.disconnect();
}
function ot(e, t) {
  if (t) {
    let { inlineSize: e, blockSize: n } = t[0];
    return { width: e, height: n };
  }
  return e instanceof SVGElement && `getBBox` in e
    ? e.getBBox()
    : { width: e.offsetWidth, height: e.offsetHeight };
}
function st({ target: e, contentRect: t, borderBoxSize: n }) {
  var r;
  (r = Ot.get(e)) == null ||
    r.forEach((r) => {
      r({
        target: e,
        contentSize: t,
        get size() {
          return ot(e, n);
        },
      });
    });
}
function ct(e) {
  e.forEach(st);
}
function lt() {
  typeof ResizeObserver < `u` && (kt = new ResizeObserver(ct));
}
function ut(e, t) {
  kt || lt();
  let n = it(e);
  return (
    n.forEach((e) => {
      let n = Ot.get(e);
      n || ((n = new Set()), Ot.set(e, n)), n.add(t), kt?.observe(e);
    }),
    () => {
      n.forEach((e) => {
        let n = Ot.get(e);
        n?.delete(t), (n != null && n.size) || kt == null || kt.unobserve(e);
      });
    }
  );
}
function dt() {
  (jt = () => {
    let e = { width: v.innerWidth, height: v.innerHeight },
      t = { target: v, size: e, contentSize: e };
    At.forEach((e) => e(t));
  }),
    v.addEventListener(`resize`, jt);
}
function ft(e) {
  return (
    At.add(e),
    jt || dt(),
    () => {
      At.delete(e), !At.size && jt && (jt = void 0);
    }
  );
}
function pt(e, t) {
  return Ye(e) ? ft(e) : ut(e, t);
}
function mt(e, t, n) {
  e.dispatchEvent(new CustomEvent(t, { detail: { originalEvent: n } }));
}
function ht(e, t, n) {
  e.dispatchEvent(new CustomEvent(t, { detail: { originalEntry: n } }));
}
var gt,
  _t,
  vt,
  yt,
  bt,
  xt,
  St,
  Ct,
  wt,
  Tt,
  Et,
  Dt,
  Ot,
  kt,
  At,
  jt,
  Mt,
  Nt,
  Pt,
  Ft = e(() => {
    for (let e in (s(),
    Xe(),
    Qe(),
    et(),
    nt(),
    rt(),
    (gt = [``, `X`, `Y`, `Z`]),
    (_t = [`translate`, `scale`, `rotate`, `skew`]),
    (vt = {
      syntax: `<angle>`,
      initialValue: `0deg`,
      toDefaultUnit: (e) => e + `deg`,
    }),
    (yt = {
      translate: {
        syntax: `<length-percentage>`,
        initialValue: `0px`,
        toDefaultUnit: (e) => e + `px`,
      },
      rotate: vt,
      scale: { syntax: `<number>`, initialValue: 1, toDefaultUnit: Je },
      skew: vt,
    }),
    (bt = new Map()),
    (xt = (e) => `--motion-${e}`),
    (St = [`x`, `y`, `z`]),
    _t.forEach((e) => {
      gt.forEach((t) => {
        St.push(e + t), bt.set(xt(e + t), yt[e]);
      });
    }),
    new Set(St),
    (Ct = (e, t) => document.createElement(`div`).animate(e, t)),
    (wt = {
      cssRegisterProperty: () =>
        typeof CSS < `u` && Object.hasOwnProperty.call(CSS, `registerProperty`),
      waapi: () => Object.hasOwnProperty.call(Element.prototype, `animate`),
      partialKeyframes: () => {
        try {
          Ct({ opacity: [1] });
        } catch {
          return !1;
        }
        return !0;
      },
      finished: () => !!Ct({ opacity: [0, 1] }, { duration: 0.001 }).finished,
      linearEasing: () => {
        try {
          Ct({ opacity: 0 }, { easing: `linear(0, 1)` });
        } catch {
          return !1;
        }
        return !0;
      },
    }),
    (Tt = {}),
    (Et = {}),
    wt))
      Et[e] = () => (Tt[e] === void 0 && (Tt[e] = wt[e]()), Tt[e]);
    (Dt = { any: 0, all: 1 }),
      (Ot = new WeakMap()),
      (At = new Set()),
      (Mt = {
        isActive: (e) => !!e.inView,
        subscribe: (
          e,
          { enable: t, disable: n },
          { inViewOptions: r = {} }
        ) => {
          let { once: i } = r,
            a = $e(r, [`once`]);
          return at(
            e,
            (r) => {
              if ((t(), ht(e, `viewenter`, r), !i))
                return (t) => {
                  n(), ht(e, `viewleave`, t);
                };
            },
            a
          );
        },
      }),
      (Nt = (e, t, n) => (r) => {
        (!r.pointerType || r.pointerType === `mouse`) && (n(), mt(e, t, r));
      }),
      (Pt = {
        inView: Mt,
        hover: {
          isActive: (e) => !!e.hover,
          subscribe: (e, { enable: t, disable: n }) => {
            let r = Nt(e, `hoverstart`, t),
              i = Nt(e, `hoverend`, n);
            return (
              e.addEventListener(`pointerenter`, r),
              e.addEventListener(`pointerleave`, i),
              () => {
                e.removeEventListener(`pointerenter`, r),
                  e.removeEventListener(`pointerleave`, i);
              }
            );
          },
        },
        press: {
          isActive: (e) => !!e.press,
          subscribe: (e, { enable: t, disable: n }) => {
            let r = (t) => {
                n(),
                  mt(e, `pressend`, t),
                  v.removeEventListener(`pointerup`, r);
              },
              i = (n) => {
                t(), mt(e, `pressstart`, n), v.addEventListener(`pointerup`, r);
              };
            return (
              e.addEventListener(`pointerdown`, i),
              () => {
                e.removeEventListener(`pointerdown`, i),
                  v.removeEventListener(`pointerup`, r);
              }
            );
          },
        },
      }),
      [...Object.keys(Pt)];
  });
function It(e) {
  let {
      slots: t = [],
      gap: n,
      padding: r,
      paddingPerSide: a,
      paddingTop: o,
      paddingRight: s,
      paddingBottom: l,
      paddingLeft: p,
      speed: v,
      hoverFactor: y,
      direction: S,
      alignment: C,
      sizingOptions: w,
      fadeOptions: E,
      style: j,
    } = e,
    {
      fadeContent: N,
      overflow: P,
      fadeWidth: F,
      fadeInset: ee,
      fadeAlpha: te,
    } = E,
    { widthType: I, heightType: L } = w,
    re = a ? `${o}px ${s}px ${l}px ${p}px` : `${r}px`,
    R = ne.current(),
    z = R === ne.canvas || R === ne.export,
    ie = t.filter(Boolean),
    B = c.count(ie),
    V = B > 0;
  S === !0 && (S = `left`);
  let H = S === `left` || S === `right`,
    ae = k(0),
    U = Rt[S];
  M(ae, U);
  let W = d(null),
    G = m(() => [{ current: null }, { current: null }], []),
    [oe, se] = b({ parent: null, children: null }),
    ce = null,
    le = [],
    ue = 0,
    de = 0;
  z && ((ue = B ? Math.floor(10 / B) : 0), (de = 1)),
    !z &&
      V &&
      oe.parent &&
      ((ue = Math.round((oe.parent / oe.children) * 2) + 1),
      (ue = Math.min(ue, Lt)),
      (de = 1));
  let fe = h(() => {
      if (V && W.current) {
        let e = H ? W.current.offsetWidth : W.current.offsetHeight,
          t = G[0].current
            ? H
              ? G[0].current.offsetLeft
              : G[0].current.offsetTop
            : 0,
          r =
            (G[1].current
              ? H
                ? G[1].current.offsetLeft + G[1].current.offsetWidth
                : G[1].current.offsetTop + G[1].current.offsetHeight
              : 0) -
            t +
            n;
        se({ parent: e, children: r });
      }
    }, []),
    pe = z ? { contentVisibility: `auto` } : {};
  if (V) {
    if (!z) {
      let e = d(!0);
      i(
        () => (
          T.read(fe, !1, !0),
          pt(W.current, ({ contentSize: t }) => {
            !e.current && (t.width || t.height) && T.read(fe, !1, !0),
              (e.current = !1);
          })
        ),
        []
      );
    }
    ce = c.map(ie, (e, t) => {
      let n;
      t === 0 && (n = G[0]), t === ie.length - 1 && (n = G[1]);
      let r = {
        width: I ? e.props?.width : `100%`,
        height: L ? e.props?.height : `100%`,
      };
      return u(x, {
        inherit: `id`,
        children: u(`li`, {
          ref: n,
          style: r,
          children: f(
            e,
            {
              style: { ...e.props?.style, ...r, flexShrink: 0, ...pe },
              layoutId: e.props.layoutId
                ? e.props.layoutId + `-original-` + t
                : void 0,
            },
            e.props?.children
          ),
        }),
      });
    });
  }
  let me = z ? !0 : O(W);
  if (!z)
    for (let e = 0; e < ue; e++)
      le = le.concat(
        c.map(ie, (t, n) => {
          let r = {
            width: I ? t.props?.width : `100%`,
            height: L ? t.props?.height : `100%`,
            willChange: me ? `transform` : void 0,
          };
          return u(
            x,
            {
              inherit: `id`,
              children: u(
                `li`,
                {
                  style: r,
                  "aria-hidden": !0,
                  children: f(
                    t,
                    {
                      key: e + ` ` + n,
                      style: {
                        ...t.props?.style,
                        width: I ? t.props?.width : `100%`,
                        height: L ? t.props?.height : `100%`,
                        flexShrink: 0,
                        ...pe,
                      },
                      layoutId: t.props.layoutId
                        ? t.props.layoutId + `-dupe-` + e
                        : void 0,
                    },
                    t.props?.children
                  ),
                },
                e + `li` + n
              ),
            },
            e + `lg` + n
          );
        })
      );
  let he = oe.children + oe.children * Math.round(oe.parent / oe.children);
  d(null), d(null), d(0);
  let ge = d(!1),
    _e = A(),
    ve = d(null),
    K = d(null);
  if (!z) {
    _(() => {
      if (!(_e || !he || !v))
        return (
          (K.current = ve.current.animate(
            { transform: [U(0), U(he)] },
            {
              duration: (Math.abs(he) / v) * 1e3,
              iterations: 1 / 0,
              easing: `linear`,
            }
          )),
          () => K.current.cancel()
        );
    }, [y, he, v]);
    let e = h(() => {
      if (!K.current) return;
      let e = document.hidden;
      me && !e && K.current.playState === `paused`
        ? K.current.play()
        : (!me || e) && K.current.playState === `running` && K.current.pause();
    }, [me]);
    _(() => {
      e();
    }, [me, y, he, v]),
      _(
        () => (
          document.addEventListener(`visibilitychange`, e),
          () => {
            document.removeEventListener(`visibilitychange`, e);
          }
        ),
        [e]
      );
  }
  let ye = H ? `to right` : `to bottom`,
    be = F / 2,
    xe = 100 - F / 2,
    Se = Wt(ee, 0, be),
    Ce = 100 - ee,
    we = `linear-gradient(${ye}, rgba(0, 0, 0, ${te}) ${Se}%, rgba(0, 0, 0, 1) ${be}%, rgba(0, 0, 0, 1) ${xe}%, rgba(0, 0, 0, ${te}) ${Ce}%)`;
  return V
    ? u(`section`, {
        style: {
          ...zt,
          opacity: de,
          WebkitMaskImage: N ? we : void 0,
          maskImage: N ? we : void 0,
          overflow: P ? `visible` : `hidden`,
          padding: re,
        },
        ref: W,
        children: g(D.ul, {
          ref: ve,
          style: {
            ...zt,
            gap: n,
            top: S === `bottom` && Gt(he) ? -he : void 0,
            left: S === `right` && Gt(he) ? -he : void 0,
            placeItems: C,
            position: `relative`,
            flexDirection: H ? `row` : `column`,
            ...j,
            willChange: z || !me ? `auto` : `transform`,
            transform: U(0),
          },
          onMouseEnter: () => {
            (ge.current = !0), K.current && (K.current.playbackRate = y);
          },
          onMouseLeave: () => {
            (ge.current = !1), K.current && (K.current.playbackRate = 1);
          },
          children: [ce, le],
        }),
      })
    : g(`section`, {
        style: Bt,
        children: [
          u(`div`, { style: Vt, children: `✨` }),
          u(`p`, { style: Ht, children: `Connect to Content` }),
          u(`p`, {
            style: Ut,
            children: `Add layers or components to infinitely loop on your page.`,
          }),
        ],
      });
}
var Lt,
  Rt,
  zt,
  Bt,
  Vt,
  Ht,
  Ut,
  Wt,
  Gt,
  Kt = e(() => {
    a(),
      o(),
      se(),
      E(),
      Ft(),
      (Lt = 100),
      (Rt = {
        left: (e) => `translateX(-${e}px)`,
        right: (e) => `translateX(${e}px)`,
        top: (e) => `translateY(-${e}px)`,
        bottom: (e) => `translateY(${e}px)`,
      }),
      (It.defaultProps = {
        gap: 10,
        padding: 10,
        sizingOptions: { widthType: !0, heightType: !0 },
        fadeOptions: {
          fadeContent: !0,
          overflow: !1,
          fadeWidth: 25,
          fadeAlpha: 0,
          fadeInset: 0,
        },
        direction: !0,
      }),
      V(It, {
        slots: {
          type: F.Array,
          title: `Children`,
          control: { type: F.ComponentInstance },
        },
        speed: {
          type: F.Number,
          title: `Speed`,
          min: 0,
          max: 1e3,
          defaultValue: 100,
          unit: `%`,
          displayStepper: !0,
          step: 5,
        },
        direction: {
          type: F.Enum,
          title: `Direction`,
          options: [`left`, `right`, `top`, `bottom`],
          optionIcons: [
            `direction-left`,
            `direction-right`,
            `direction-up`,
            `direction-down`,
          ],
          optionTitles: [`Left`, `Right`, `Top`, `Bottom`],
          defaultValue: `left`,
          displaySegmentedControl: !0,
        },
        alignment: {
          type: F.Enum,
          title: `Align`,
          options: [`flex-start`, `center`, `flex-end`],
          optionIcons: {
            direction: {
              right: [`align-top`, `align-middle`, `align-bottom`],
              left: [`align-top`, `align-middle`, `align-bottom`],
              top: [`align-left`, `align-center`, `align-right`],
              bottom: [`align-left`, `align-center`, `align-right`],
            },
          },
          defaultValue: `center`,
          displaySegmentedControl: !0,
        },
        gap: { type: F.Number, title: `Gap` },
        padding: {
          title: `Padding`,
          type: F.FusedNumber,
          toggleKey: `paddingPerSide`,
          toggleTitles: [`Padding`, `Padding per side`],
          valueKeys: [
            `paddingTop`,
            `paddingRight`,
            `paddingBottom`,
            `paddingLeft`,
          ],
          valueLabels: [`T`, `R`, `B`, `L`],
          min: 0,
        },
        sizingOptions: {
          type: F.Object,
          title: `Sizing`,
          controls: {
            widthType: {
              type: F.Boolean,
              title: `Width`,
              enabledTitle: `Auto`,
              disabledTitle: `Stretch`,
              defaultValue: !0,
            },
            heightType: {
              type: F.Boolean,
              title: `Height`,
              enabledTitle: `Auto`,
              disabledTitle: `Stretch`,
              defaultValue: !0,
            },
          },
        },
        fadeOptions: {
          type: F.Object,
          title: `Clipping`,
          controls: {
            fadeContent: { type: F.Boolean, title: `Fade`, defaultValue: !0 },
            overflow: {
              type: F.Boolean,
              title: `Overflow`,
              enabledTitle: `Show`,
              disabledTitle: `Hide`,
              defaultValue: !1,
              hidden(e) {
                return e.fadeContent === !0;
              },
            },
            fadeWidth: {
              type: F.Number,
              title: `Width`,
              defaultValue: 25,
              min: 0,
              max: 100,
              unit: `%`,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
            fadeInset: {
              type: F.Number,
              title: `Inset`,
              defaultValue: 0,
              min: 0,
              max: 100,
              unit: `%`,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
            fadeAlpha: {
              type: F.Number,
              title: `Opacity`,
              defaultValue: 0,
              min: 0,
              max: 1,
              step: 0.05,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
          },
        },
        hoverFactor: {
          type: F.Number,
          title: `Hover`,
          min: 0,
          max: 1,
          unit: `x`,
          defaultValue: 1,
          step: 0.1,
          displayStepper: !0,
          description: `Slows down the speed while you are hovering.`,
        },
      }),
      (zt = {
        display: `flex`,
        width: `100%`,
        height: `100%`,
        maxWidth: `100%`,
        maxHeight: `100%`,
        placeItems: `center`,
        margin: 0,
        padding: 0,
        listStyleType: `none`,
        textIndent: `none`,
      }),
      (Bt = {
        display: `flex`,
        width: `100%`,
        height: `100%`,
        placeContent: `center`,
        placeItems: `center`,
        flexDirection: `column`,
        color: `#96F`,
        background: `rgba(136, 85, 255, 0.1)`,
        fontSize: 11,
        overflow: `hidden`,
        padding: `20px 20px 30px 20px`,
      }),
      (Vt = { fontSize: 32, marginBottom: 10 }),
      (Ht = {
        margin: 0,
        marginBottom: 10,
        fontWeight: 600,
        textAlign: `center`,
      }),
      (Ut = {
        margin: 0,
        opacity: 0.7,
        maxWidth: 150,
        lineHeight: 1.5,
        textAlign: `center`,
      }),
      (Wt = (e, t, n) => Math.min(Math.max(e, t), n)),
      (Gt = (e) => typeof e == `number` && !isNaN(e));
  }),
  qt,
  Jt,
  Yt,
  Xt,
  Zt,
  Qt,
  $t,
  en,
  tn,
  nn,
  rn = e(() => {
    a(),
      se(),
      E(),
      o(),
      (qt = `framer-xc7mg`),
      (Jt = { eDukm1aHd: `framer-v-vq54n6` }),
      (Yt = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
      (Xt = (e) =>
        typeof e == `object` && e && typeof e.src == `string`
          ? e
          : typeof e == `string`
          ? { src: e }
          : void 0),
      (Zt = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (Qt = D.create(y)),
      ($t = ({ height: e, id: t, image: n, width: r, ...i }) => ({
        ...i,
        Or6fUaHBj: n ??
          i.Or6fUaHBj ?? {
            alt: ``,
            pixelHeight: 1280,
            pixelWidth: 896,
            src: `https://framerusercontent.com/images/kaI0Lz0RW30Awo1Y289wwm2NWJU.png?scale-down-to=512`,
            srcSet: `https://framerusercontent.com/images/kaI0Lz0RW30Awo1Y289wwm2NWJU.png?scale-down-to=1024 716w,https://framerusercontent.com/images/kaI0Lz0RW30Awo1Y289wwm2NWJU.png 896w`,
          },
      })),
      (en = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (tn = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe(),
            c = le(),
            {
              style: l,
              className: f,
              layoutId: p,
              variant: m,
              Or6fUaHBj: h,
              ...g
            } = $t(e),
            {
              baseVariant: _,
              classNames: v,
              clearLoadingGesture: y,
              gestureHandlers: b,
              gestureVariant: S,
              isLoading: C,
              setGestureState: w,
              setVariant: T,
              variants: E,
            } = ve({
              defaultVariant: `eDukm1aHd`,
              ref: i,
              variant: m,
              variantClassNames: Jt,
            }),
            O = en(e, E),
            k = H(qt);
          return u(x, {
            id: p ?? a,
            children: u(Qt, {
              animate: E,
              initial: !1,
              children: u(Zt, {
                value: Yt,
                children: u(D.div, {
                  ...g,
                  ...b,
                  className: H(k, `framer-vq54n6`, f, v),
                  "data-border": !0,
                  "data-framer-name": `Primary`,
                  layoutDependency: O,
                  layoutId: `eDukm1aHd`,
                  ref: i,
                  style: {
                    "--border-bottom-width": `1px`,
                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                    "--border-left-width": `1px`,
                    "--border-right-width": `1px`,
                    "--border-style": `solid`,
                    "--border-top-width": `1px`,
                    backgroundColor: `var(--token-74f48371-76c0-476a-a319-1331b3a438c2, rgb(8, 8, 8))`,
                    borderBottomLeftRadius: 26,
                    borderBottomRightRadius: 26,
                    borderTopLeftRadius: 26,
                    borderTopRightRadius: 26,
                    ...l,
                  },
                  children: u(te, {
                    background: {
                      alt: ``,
                      fit: `fill`,
                      loading: G(
                        (c?.y || 0) +
                          5 +
                          (((c?.height || 184) -
                            10 -
                            (Math.max(0, ((c?.height || 184) - 10 - 0) / 1) *
                              1 +
                              0)) /
                            2 +
                            0 +
                            0)
                      ),
                      pixelHeight: 1280,
                      pixelWidth: 896,
                      sizes: `calc(${c?.width || `100vw`} - 10px)`,
                      ...Xt(h),
                    },
                    className: `framer-1lfbj3d`,
                    "data-framer-name": `Image`,
                    draggable: `false`,
                    layoutDependency: O,
                    layoutId: `bE5o15lpBME8uUTrbz`,
                    style: {
                      borderBottomLeftRadius: 20,
                      borderBottomRightRadius: 20,
                      borderTopLeftRadius: 20,
                      borderTopRightRadius: 20,
                    },
                    children: u(D.div, {
                      className: `framer-lchchb`,
                      "data-border": !0,
                      "data-framer-name": `Overlay`,
                      layoutDependency: O,
                      layoutId: `uCaI8bywx`,
                      style: {
                        "--border-bottom-width": `1px`,
                        "--border-color": `var(--token-d86f1591-0c16-44cd-be10-19334dfa9293, rgba(255, 255, 255, 0.1))`,
                        "--border-left-width": `1px`,
                        "--border-right-width": `1px`,
                        "--border-style": `solid`,
                        "--border-top-width": `1px`,
                        background: `linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(255, 255, 255, 0.15) 100%)`,
                        borderBottomLeftRadius: 23,
                        borderBottomRightRadius: 23,
                        borderTopLeftRadius: 23,
                        borderTopRightRadius: 23,
                      },
                    }),
                  }),
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-xc7mg.framer-mwt96a, .framer-xc7mg .framer-mwt96a { display: block; }`,
          `.framer-xc7mg.framer-vq54n6 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 184px; justify-content: center; overflow: hidden; padding: 5px; position: relative; width: 184px; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-xc7mg .framer-1lfbj3d { flex: 1 0 0px; height: 1px; overflow: hidden; position: relative; width: 100%; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-xc7mg .framer-lchchb { -webkit-user-select: none; bottom: 0px; flex: none; left: 0px; overflow: visible; pointer-events: none; position: absolute; right: 0px; top: 0px; user-select: none; z-index: 1; }`,
          `@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-xc7mg.framer-vq54n6 { gap: 0px; } .framer-xc7mg.framer-vq54n6 > * { margin: 0px; margin-bottom: calc(10px / 2); margin-top: calc(10px / 2); } .framer-xc7mg.framer-vq54n6 > :first-child { margin-top: 0px; } .framer-xc7mg.framer-vq54n6 > :last-child { margin-bottom: 0px; } }`,
          `.framer-xc7mg[data-border="true"]::after, .framer-xc7mg [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
        ],
        `framer-xc7mg`
      )),
      (nn = tn),
      (tn.displayName = `Image Card 2`),
      (tn.defaultProps = { height: 184, width: 184 }),
      V(tn, {
        Or6fUaHBj: {
          __defaultAssetReference: `data:framer/asset-reference,kaI0Lz0RW30Awo1Y289wwm2NWJU.png?originalFilename=visualelectric-1740465438901.png&preferredSize=auto`,
          __vekterDefault: {
            alt: ``,
            assetReference: `data:framer/asset-reference,kaI0Lz0RW30Awo1Y289wwm2NWJU.png?originalFilename=visualelectric-1740465438901.png&preferredSize=auto`,
          },
          title: `Image`,
          type: F.ResponsiveImage,
        },
      }),
      B(tn, [{ explicitInter: !0, fonts: [] }], {
        supportsExplicitInterCodegen: !0,
      });
  });
function an() {
  let e = (4294967295 * Math.random()) | 0,
    t = (4294967295 * Math.random()) | 0,
    n = (4294967295 * Math.random()) | 0,
    r = (4294967295 * Math.random()) | 0;
  return (
    Vc[255 & e] +
    Vc[(e >> 8) & 255] +
    Vc[(e >> 16) & 255] +
    Vc[(e >> 24) & 255] +
    `-` +
    Vc[255 & t] +
    Vc[(t >> 8) & 255] +
    `-` +
    Vc[((t >> 16) & 15) | 64] +
    Vc[(t >> 24) & 255] +
    `-` +
    Vc[(63 & n) | 128] +
    Vc[(n >> 8) & 255] +
    `-` +
    Vc[(n >> 16) & 255] +
    Vc[(n >> 24) & 255] +
    Vc[255 & r] +
    Vc[(r >> 8) & 255] +
    Vc[(r >> 16) & 255] +
    Vc[(r >> 24) & 255]
  ).toUpperCase();
}
function on(e, t, n) {
  return Math.max(t, Math.min(n, e));
}
function sn(e, t) {
  return ((e % t) + t) % t;
}
function cn(e, t, n, r, i) {
  return r + ((e - t) * (i - r)) / (n - t);
}
function ln(e, t, n) {
  return e === t ? 0 : (n - e) / (t - e);
}
function un(e, t, n) {
  return (1 - n) * e + n * t;
}
function dn(e, t, n, r) {
  return un(e, t, 1 - Math.exp(-n * r));
}
function fn(e, t = 1) {
  return t - Math.abs(sn(e, 2 * t) - t);
}
function pn(e, t, n) {
  return e <= t
    ? 0
    : e >= n
    ? 1
    : ((e = (e - t) / (n - t)), e * e * (3 - 2 * e));
}
function mn(e, t, n) {
  return e <= t
    ? 0
    : e >= n
    ? 1
    : ((e = (e - t) / (n - t)), e * e * e * (e * (6 * e - 15) + 10));
}
function hn(e, t) {
  return e + Math.floor(Math.random() * (t - e + 1));
}
function gn(e, t) {
  return e + Math.random() * (t - e);
}
function _n(e) {
  return e * (0.5 - Math.random());
}
function vn(e) {
  return (
    e !== void 0 && (Hc = e % 2147483647),
    (Hc = (16807 * Hc) % 2147483647),
    (Hc - 1) / 2147483646
  );
}
function yn(e) {
  return e * Uc;
}
function bn(e) {
  return e * Wc;
}
function xn(e) {
  return (e & (e - 1)) == 0 && e !== 0;
}
function Sn(e) {
  return 2 ** Math.ceil(Math.log(e) / Math.LN2);
}
function Cn(e) {
  return 2 ** Math.floor(Math.log(e) / Math.LN2);
}
function wn(e, t, n, r, i) {
  let a = Math.cos,
    o = Math.sin,
    s = a(n / 2),
    c = o(n / 2),
    l = a((t + r) / 2),
    u = o((t + r) / 2),
    d = a((t - r) / 2),
    f = o((t - r) / 2),
    p = a((r - t) / 2),
    m = o((r - t) / 2);
  switch (i) {
    case `XYX`:
      e.set(s * u, c * d, c * f, s * l);
      break;
    case `YZY`:
      e.set(c * f, s * u, c * d, s * l);
      break;
    case `ZXZ`:
      e.set(c * d, c * f, s * u, s * l);
      break;
    case `XZX`:
      e.set(s * u, c * m, c * p, s * l);
      break;
    case `YXY`:
      e.set(c * p, s * u, c * m, s * l);
      break;
    case `ZYZ`:
      e.set(c * m, c * p, s * u, s * l);
      break;
    default:
      console.warn(
        `THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ` +
          i
      );
  }
}
function Tn(e) {
  if (e.length === 0) return -1 / 0;
  let t = e[0];
  for (let n = 1, r = e.length; n < r; ++n) e[n] > t && (t = e[n]);
  return t;
}
function En(e) {
  return document.createElementNS(`http://www.w3.org/1999/xhtml`, e);
}
function Dn(e) {
  return (typeof HTMLImageElement < `u` && e instanceof HTMLImageElement) ||
    (typeof HTMLCanvasElement < `u` && e instanceof HTMLCanvasElement) ||
    (typeof ImageBitmap < `u` && e instanceof ImageBitmap)
    ? qc.getDataURL(e)
    : e.data
    ? {
        data: Array.prototype.slice.call(e.data),
        width: e.width,
        height: e.height,
        type: e.data.constructor.name,
      }
    : (console.warn(`THREE.Texture: Unable to serialize Texture.`), {});
}
function On(e, t, n, r, i) {
  for (let a = 0, o = e.length - 3; a <= o; a += 3) {
    gl.fromArray(e, a);
    let o = i.x * Math.abs(gl.x) + i.y * Math.abs(gl.y) + i.z * Math.abs(gl.z),
      s = t.dot(gl),
      c = n.dot(gl),
      l = r.dot(gl);
    if (Math.max(-Math.max(s, c, l), Math.min(s, c, l)) > o) return !1;
  }
  return !0;
}
function kn(e, t, n) {
  return (
    n < 0 && (n += 1),
    n > 1 && --n,
    n < 1 / 6
      ? e + 6 * (t - e) * n
      : n < 0.5
      ? t
      : n < 2 / 3
      ? e + 6 * (t - e) * (2 / 3 - n)
      : e
  );
}
function An(e) {
  return e < 0.04045
    ? 0.0773993808 * e
    : (0.9478672986 * e + 0.0521327014) ** 2.4;
}
function jn(e) {
  return e < 0.0031308 ? 12.92 * e : 1.055 * e ** 0.41666 - 0.055;
}
function Mn(e, t, n, r, i, a, o, s) {
  let c;
  if (
    ((c =
      t.side === $a
        ? r.intersectTriangle(o, a, i, !0, s)
        : r.intersectTriangle(i, a, o, t.side !== eo, s)),
    c === null)
  )
    return null;
  Ju.copy(s), Ju.applyMatrix4(e.matrixWorld);
  let l = n.ray.origin.distanceTo(Ju);
  return l < n.near || l > n.far
    ? null
    : { distance: l, point: Ju.clone(), object: e };
}
function Nn(e, t, n, r, i, a, o, s, c, l, u, d) {
  Fu.fromBufferAttribute(i, l),
    Iu.fromBufferAttribute(i, u),
    Lu.fromBufferAttribute(i, d);
  let f = e.morphTargetInfluences;
  if (a && f) {
    Vu.set(0, 0, 0), Hu.set(0, 0, 0), Uu.set(0, 0, 0);
    for (let e = 0, t = a.length; e < t; e++) {
      let t = f[e],
        n = a[e];
      t !== 0 &&
        (Ru.fromBufferAttribute(n, l),
        zu.fromBufferAttribute(n, u),
        Bu.fromBufferAttribute(n, d),
        o
          ? (Vu.addScaledVector(Ru, t),
            Hu.addScaledVector(zu, t),
            Uu.addScaledVector(Bu, t))
          : (Vu.addScaledVector(Ru.sub(Fu), t),
            Hu.addScaledVector(zu.sub(Iu), t),
            Uu.addScaledVector(Bu.sub(Lu), t)));
    }
    Fu.add(Vu), Iu.add(Hu), Lu.add(Uu);
  }
  e.isSkinnedMesh &&
    (e.boneTransform(l, Fu), e.boneTransform(u, Iu), e.boneTransform(d, Lu));
  let p = Mn(e, t, n, r, Fu, Iu, Lu, qu);
  if (p) {
    s &&
      (Wu.fromBufferAttribute(s, l),
      Gu.fromBufferAttribute(s, u),
      Ku.fromBufferAttribute(s, d),
      (p.uv = du.getUV(qu, Fu, Iu, Lu, Wu, Gu, Ku, new q()))),
      c &&
        (Wu.fromBufferAttribute(c, l),
        Gu.fromBufferAttribute(c, u),
        Ku.fromBufferAttribute(c, d),
        (p.uv2 = du.getUV(qu, Fu, Iu, Lu, Wu, Gu, Ku, new q())));
    let e = { a: l, b: u, c: d, normal: new J(), materialIndex: 0 };
    du.getNormal(Fu, Iu, Lu, e.normal), (p.face = e);
  }
  return p;
}
function Pn(e) {
  let t = {};
  for (let n in e)
    for (let r in ((t[n] = {}), e[n])) {
      let i = e[n][r];
      i &&
      (i.isColor ||
        i.isMatrix3 ||
        i.isMatrix4 ||
        i.isVector2 ||
        i.isVector3 ||
        i.isVector4 ||
        i.isTexture ||
        i.isQuaternion)
        ? (t[n][r] = i.clone())
        : Array.isArray(i)
        ? (t[n][r] = i.slice())
        : (t[n][r] = i);
    }
  return t;
}
function Fn(e) {
  let t = {};
  for (let n = 0; n < e.length; n++) {
    let r = Pn(e[n]);
    for (let e in r) t[e] = r[e];
  }
  return t;
}
function In() {
  let e = null,
    t = !1,
    n = null,
    r = null;
  function i(t, a) {
    n(t, a), (r = e.requestAnimationFrame(i));
  }
  return {
    start: function () {
      !0 !== t && n !== null && ((r = e.requestAnimationFrame(i)), (t = !0));
    },
    stop: function () {
      e.cancelAnimationFrame(r), (t = !1);
    },
    setAnimationLoop: function (e) {
      n = e;
    },
    setContext: function (t) {
      e = t;
    },
  };
}
function Ln(e, t) {
  let n = t.isWebGL2,
    r = new WeakMap();
  function i(t, r) {
    let i = t.array,
      a = t.usage,
      o = e.createBuffer();
    e.bindBuffer(r, o), e.bufferData(r, i, a), t.onUploadCallback();
    let s = 5126;
    return (
      i instanceof Float32Array
        ? (s = 5126)
        : i instanceof Float64Array
        ? console.warn(
            `THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.`
          )
        : i instanceof Uint16Array
        ? t.isFloat16BufferAttribute
          ? n
            ? (s = 5131)
            : console.warn(
                `THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.`
              )
          : (s = 5123)
        : i instanceof Int16Array
        ? (s = 5122)
        : i instanceof Uint32Array
        ? (s = 5125)
        : i instanceof Int32Array
        ? (s = 5124)
        : i instanceof Int8Array
        ? (s = 5120)
        : (i instanceof Uint8Array || i instanceof Uint8ClampedArray) &&
          (s = 5121),
      {
        buffer: o,
        type: s,
        bytesPerElement: i.BYTES_PER_ELEMENT,
        version: t.version,
      }
    );
  }
  function a(t, r, i) {
    let a = r.array,
      o = r.updateRange;
    e.bindBuffer(i, t),
      o.count === -1
        ? e.bufferSubData(i, 0, a)
        : (n
            ? e.bufferSubData(
                i,
                o.offset * a.BYTES_PER_ELEMENT,
                a,
                o.offset,
                o.count
              )
            : e.bufferSubData(
                i,
                o.offset * a.BYTES_PER_ELEMENT,
                a.subarray(o.offset, o.offset + o.count)
              ),
          (o.count = -1));
  }
  function o(e) {
    return e.isInterleavedBufferAttribute && (e = e.data), r.get(e);
  }
  function s(t) {
    t.isInterleavedBufferAttribute && (t = t.data);
    let n = r.get(t);
    n && (e.deleteBuffer(n.buffer), r.delete(t));
  }
  function c(e, t) {
    if (e.isGLBufferAttribute) {
      let t = r.get(e);
      (!t || t.version < e.version) &&
        r.set(e, {
          buffer: e.buffer,
          type: e.type,
          bytesPerElement: e.elementSize,
          version: e.version,
        });
      return;
    }
    e.isInterleavedBufferAttribute && (e = e.data);
    let n = r.get(e);
    n === void 0
      ? r.set(e, i(e, t))
      : n.version < e.version && (a(n.buffer, e, t), (n.version = e.version));
  }
  return { get: o, remove: s, update: c };
}
function Rn(e, t, n, r, i) {
  let a = new X(0),
    o = 0,
    s,
    c,
    l = null,
    u = 0,
    d = null;
  function f(n, i) {
    let f = !1,
      m = !0 === i.isScene ? i.background : null;
    m && m.isTexture && (m = t.get(m));
    let h = e.xr,
      g = h.getSession && h.getSession();
    g && g.environmentBlendMode === `additive` && (m = null),
      m === null ? p(a, o) : m && m.isColor && (p(m, 1), (f = !0)),
      (e.autoClear || f) &&
        e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
      m && (m.isCubeTexture || m.mapping === qo)
        ? (c === void 0 &&
            ((c = new Yu(
              new Xu(1, 1, 1),
              new ed({
                name: `BackgroundCubeMaterial`,
                uniforms: Pn(gd.cube.uniforms),
                vertexShader: gd.cube.vertexShader,
                fragmentShader: gd.cube.fragmentShader,
                side: $a,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            c.geometry.deleteAttribute(`normal`),
            c.geometry.deleteAttribute(`uv`),
            (c.onBeforeRender = function (e, t, n) {
              this.matrixWorld.copyPosition(n.matrixWorld);
            }),
            Object.defineProperty(c.material, `envMap`, {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            r.update(c)),
          (c.material.uniforms.envMap.value = m),
          (c.material.uniforms.flipEnvMap.value =
            m.isCubeTexture && !1 === m.isRenderTargetTexture ? -1 : 1),
          (l !== m || u !== m.version || d !== e.toneMapping) &&
            ((c.material.needsUpdate = !0),
            (l = m),
            (u = m.version),
            (d = e.toneMapping)),
          n.unshift(c, c.geometry, c.material, 0, 0, null))
        : m &&
          m.isTexture &&
          (s === void 0 &&
            ((s = new Yu(
              new hd(2, 2),
              new ed({
                name: `BackgroundMaterial`,
                uniforms: Pn(gd.background.uniforms),
                vertexShader: gd.background.vertexShader,
                fragmentShader: gd.background.fragmentShader,
                side: Qa,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            s.geometry.deleteAttribute(`normal`),
            Object.defineProperty(s.material, `map`, {
              get: function () {
                return this.uniforms.t2D.value;
              },
            }),
            r.update(s)),
          (s.material.uniforms.t2D.value = m),
          !0 === m.matrixAutoUpdate && m.updateMatrix(),
          s.material.uniforms.uvTransform.value.copy(m.matrix),
          (l !== m || u !== m.version || d !== e.toneMapping) &&
            ((s.material.needsUpdate = !0),
            (l = m),
            (u = m.version),
            (d = e.toneMapping)),
          n.unshift(s, s.geometry, s.material, 0, 0, null));
  }
  function p(e, t) {
    n.buffers.color.setClear(e.r, e.g, e.b, t, i);
  }
  return {
    getClearColor: function () {
      return a;
    },
    setClearColor: function (e, t = 1) {
      a.set(e), (o = t), p(a, o);
    },
    getClearAlpha: function () {
      return o;
    },
    setClearAlpha: function (e) {
      (o = e), p(a, o);
    },
    render: f,
  };
}
function zn(e, t, n, r) {
  let i = e.getParameter(34921),
    a = r.isWebGL2 ? null : t.get(`OES_vertex_array_object`),
    o = r.isWebGL2 || a !== null,
    s = {},
    c = h(null),
    l = c;
  function u(t, r, i, a, s) {
    let c = !1;
    if (o) {
      let e = m(a, i, r);
      l !== e && ((l = e), f(l.object)), (c = g(a, s)), c && _(a, s);
    } else {
      let e = !0 === r.wireframe;
      (l.geometry !== a.id || l.program !== i.id || l.wireframe !== e) &&
        ((l.geometry = a.id), (l.program = i.id), (l.wireframe = e), (c = !0));
    }
    !0 === t.isInstancedMesh && (c = !0),
      s !== null && n.update(s, 34963),
      c && (C(t, r, i, a), s !== null && e.bindBuffer(34963, n.get(s).buffer));
  }
  function d() {
    return r.isWebGL2 ? e.createVertexArray() : a.createVertexArrayOES();
  }
  function f(t) {
    return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t);
  }
  function p(t) {
    return r.isWebGL2 ? e.deleteVertexArray(t) : a.deleteVertexArrayOES(t);
  }
  function m(e, t, n) {
    let r = !0 === n.wireframe,
      i = s[e.id];
    i === void 0 && ((i = {}), (s[e.id] = i));
    let a = i[t.id];
    a === void 0 && ((a = {}), (i[t.id] = a));
    let o = a[r];
    return o === void 0 && ((o = h(d())), (a[r] = o)), o;
  }
  function h(e) {
    let t = [],
      n = [],
      r = [];
    for (let e = 0; e < i; e++) (t[e] = 0), (n[e] = 0), (r[e] = 0);
    return {
      geometry: null,
      program: null,
      wireframe: !1,
      newAttributes: t,
      enabledAttributes: n,
      attributeDivisors: r,
      object: e,
      attributes: {},
      index: null,
    };
  }
  function g(e, t) {
    let n = l.attributes,
      r = e.attributes,
      i = 0;
    for (let e in r) {
      let t = n[e],
        a = r[e];
      if (t === void 0 || t.attribute !== a || t.data !== a.data) return !0;
      i++;
    }
    return l.attributesNum !== i || l.index !== t;
  }
  function _(e, t) {
    let n = {},
      r = e.attributes,
      i = 0;
    for (let e in r) {
      let t = r[e],
        a = {};
      (a.attribute = t), t.data && (a.data = t.data), (n[e] = a), i++;
    }
    (l.attributes = n), (l.attributesNum = i), (l.index = t);
  }
  function v() {
    let e = l.newAttributes;
    for (let t = 0, n = e.length; t < n; t++) e[t] = 0;
  }
  function y(e) {
    b(e, 0);
  }
  function b(n, i) {
    let a = l.newAttributes,
      o = l.enabledAttributes,
      s = l.attributeDivisors;
    (a[n] = 1),
      o[n] === 0 && (e.enableVertexAttribArray(n), (o[n] = 1)),
      s[n] !== i &&
        ((r.isWebGL2 ? e : t.get(`ANGLE_instanced_arrays`))[
          r.isWebGL2 ? `vertexAttribDivisor` : `vertexAttribDivisorANGLE`
        ](n, i),
        (s[n] = i));
  }
  function x() {
    let t = l.newAttributes,
      n = l.enabledAttributes;
    for (let r = 0, i = n.length; r < i; r++)
      n[r] !== t[r] && (e.disableVertexAttribArray(r), (n[r] = 0));
  }
  function S(t, n, i, a, o, s) {
    !0 !== r.isWebGL2 || (i !== 5124 && i !== 5125)
      ? e.vertexAttribPointer(t, n, i, a, o, s)
      : e.vertexAttribIPointer(t, n, i, o, s);
  }
  function C(i, a, o, s) {
    if (
      !1 === r.isWebGL2 &&
      (i.isInstancedMesh || s.isInstancedBufferGeometry) &&
      t.get(`ANGLE_instanced_arrays`) === null
    )
      return;
    v();
    let c = s.attributes,
      l = o.getAttributes(),
      u = a.defaultAttributeValues;
    for (let t in l) {
      let r = l[t];
      if (r.location >= 0) {
        let a = c[t];
        if (
          (a === void 0 &&
            (t === `instanceMatrix` &&
              i.instanceMatrix &&
              (a = i.instanceMatrix),
            t === `instanceColor` && i.instanceColor && (a = i.instanceColor)),
          a !== void 0)
        ) {
          let t = a.normalized,
            o = a.itemSize,
            c = n.get(a);
          if (c === void 0) continue;
          let l = c.buffer,
            u = c.type,
            d = c.bytesPerElement;
          if (a.isInterleavedBufferAttribute) {
            let n = a.data,
              c = n.stride,
              f = a.offset;
            if (n && n.isInstancedInterleavedBuffer) {
              for (let e = 0; e < r.locationSize; e++)
                b(r.location + e, n.meshPerAttribute);
              !0 !== i.isInstancedMesh &&
                s._maxInstanceCount === void 0 &&
                (s._maxInstanceCount = n.meshPerAttribute * n.count);
            } else for (let e = 0; e < r.locationSize; e++) y(r.location + e);
            e.bindBuffer(34962, l);
            for (let e = 0; e < r.locationSize; e++)
              S(
                r.location + e,
                o / r.locationSize,
                u,
                t,
                c * d,
                (f + (o / r.locationSize) * e) * d
              );
          } else {
            if (a.isInstancedBufferAttribute) {
              for (let e = 0; e < r.locationSize; e++)
                b(r.location + e, a.meshPerAttribute);
              !0 !== i.isInstancedMesh &&
                s._maxInstanceCount === void 0 &&
                (s._maxInstanceCount = a.meshPerAttribute * a.count);
            } else for (let e = 0; e < r.locationSize; e++) y(r.location + e);
            e.bindBuffer(34962, l);
            for (let e = 0; e < r.locationSize; e++)
              S(
                r.location + e,
                o / r.locationSize,
                u,
                t,
                o * d,
                (o / r.locationSize) * e * d
              );
          }
        } else if (u !== void 0) {
          let n = u[t];
          if (n !== void 0)
            switch (n.length) {
              case 2:
                e.vertexAttrib2fv(r.location, n);
                break;
              case 3:
                e.vertexAttrib3fv(r.location, n);
                break;
              case 4:
                e.vertexAttrib4fv(r.location, n);
                break;
              default:
                e.vertexAttrib1fv(r.location, n);
            }
        }
      }
    }
    x();
  }
  function w() {
    for (let e in (D(), s)) {
      let t = s[e];
      for (let e in t) {
        let n = t[e];
        for (let e in n) p(n[e].object), delete n[e];
        delete t[e];
      }
      delete s[e];
    }
  }
  function T(e) {
    if (s[e.id] === void 0) return;
    let t = s[e.id];
    for (let e in t) {
      let n = t[e];
      for (let e in n) p(n[e].object), delete n[e];
      delete t[e];
    }
    delete s[e.id];
  }
  function E(e) {
    for (let t in s) {
      let n = s[t];
      if (n[e.id] === void 0) continue;
      let r = n[e.id];
      for (let e in r) p(r[e].object), delete r[e];
      delete n[e.id];
    }
  }
  function D() {
    O(), l !== c && ((l = c), f(l.object));
  }
  function O() {
    (c.geometry = null), (c.program = null), (c.wireframe = !1);
  }
  return {
    setup: u,
    reset: D,
    resetDefaultState: O,
    dispose: w,
    releaseStatesOfGeometry: T,
    releaseStatesOfProgram: E,
    initAttributes: v,
    enableAttribute: y,
    disableUnusedAttributes: x,
  };
}
function Bn(e, t, n, r) {
  let i = r.isWebGL2,
    a;
  function o(e) {
    a = e;
  }
  function s(t, r) {
    e.drawArrays(a, t, r), n.update(r, a, 1);
  }
  function c(r, o, s) {
    if (s === 0) return;
    let c, l;
    if (i) (c = e), (l = `drawArraysInstanced`);
    else if (
      ((c = t.get(`ANGLE_instanced_arrays`)),
      (l = `drawArraysInstancedANGLE`),
      c === null)
    ) {
      console.error(
        `THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.`
      );
      return;
    }
    c[l](a, r, o, s), n.update(o, a, s);
  }
  (this.setMode = o), (this.render = s), (this.renderInstances = c);
}
function Vn(e, t, n) {
  let r;
  function i() {
    if (r !== void 0) return r;
    if (!0 === t.has(`EXT_texture_filter_anisotropic`)) {
      let n = t.get(`EXT_texture_filter_anisotropic`);
      r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else r = 0;
    return r;
  }
  function a(t) {
    if (t === `highp`) {
      if (
        e.getShaderPrecisionFormat(35633, 36338).precision > 0 &&
        e.getShaderPrecisionFormat(35632, 36338).precision > 0
      )
        return `highp`;
      t = `mediump`;
    }
    return t === `mediump` &&
      e.getShaderPrecisionFormat(35633, 36337).precision > 0 &&
      e.getShaderPrecisionFormat(35632, 36337).precision > 0
      ? `mediump`
      : `lowp`;
  }
  let o =
      (typeof WebGL2RenderingContext < `u` &&
        e instanceof WebGL2RenderingContext) ||
      (typeof WebGL2ComputeRenderingContext < `u` &&
        e instanceof WebGL2ComputeRenderingContext),
    s = n.precision === void 0 ? `highp` : n.precision,
    c = a(s);
  c !== s &&
    (console.warn(
      `THREE.WebGLRenderer:`,
      s,
      `not supported, using`,
      c,
      `instead.`
    ),
    (s = c));
  let l = o || t.has(`WEBGL_draw_buffers`),
    u = !0 === n.logarithmicDepthBuffer,
    d = e.getParameter(34930),
    f = e.getParameter(35660),
    p = e.getParameter(3379),
    m = e.getParameter(34076),
    h = e.getParameter(34921),
    g = e.getParameter(36347),
    _ = e.getParameter(36348),
    v = e.getParameter(36349),
    y = f > 0,
    b = o || t.has(`OES_texture_float`),
    x = y && b,
    S = o ? e.getParameter(36183) : 0;
  return {
    isWebGL2: o,
    drawBuffers: l,
    getMaxAnisotropy: i,
    getMaxPrecision: a,
    precision: s,
    logarithmicDepthBuffer: u,
    maxTextures: d,
    maxVertexTextures: f,
    maxTextureSize: p,
    maxCubemapSize: m,
    maxAttributes: h,
    maxVertexUniforms: g,
    maxVaryings: _,
    maxFragmentUniforms: v,
    vertexTextures: y,
    floatFragmentTextures: b,
    floatVertexTextures: x,
    maxSamples: S,
  };
}
function Hn(e) {
  let t = this,
    n = null,
    r = 0,
    i = !1,
    a = !1,
    o = new dd(),
    s = new Gc(),
    c = { value: null, needsUpdate: !1 };
  (this.uniform = c),
    (this.numPlanes = 0),
    (this.numIntersection = 0),
    (this.init = function (e, t, a) {
      let o = e.length !== 0 || t || r !== 0 || i;
      return (i = t), (n = u(e, a, 0)), (r = e.length), o;
    }),
    (this.beginShadows = function () {
      (a = !0), u(null);
    }),
    (this.endShadows = function () {
      (a = !1), l();
    }),
    (this.setState = function (t, o, s) {
      let d = t.clippingPlanes,
        f = t.clipIntersection,
        p = t.clipShadows,
        m = e.get(t);
      if (!i || d === null || d.length === 0 || (a && !p)) a ? u(null) : l();
      else {
        let e = a ? 0 : r,
          t = 4 * e,
          i = m.clippingState || null;
        (c.value = i), (i = u(d, o, t, s));
        for (let e = 0; e !== t; ++e) i[e] = n[e];
        (m.clippingState = i),
          (this.numIntersection = f ? this.numPlanes : 0),
          (this.numPlanes += e);
      }
    });
  function l() {
    c.value !== n && ((c.value = n), (c.needsUpdate = r > 0)),
      (t.numPlanes = r),
      (t.numIntersection = 0);
  }
  function u(e, n, r, i) {
    let a = e === null ? 0 : e.length,
      l = null;
    if (a !== 0) {
      if (((l = c.value), !0 !== i || l === null)) {
        let t = r + 4 * a,
          i = n.matrixWorldInverse;
        s.getNormalMatrix(i),
          (l === null || l.length < t) && (l = new Float32Array(t));
        for (let t = 0, n = r; t !== a; ++t, n += 4)
          o.copy(e[t]).applyMatrix4(i, s),
            o.normal.toArray(l, n),
            (l[n + 3] = o.constant);
      }
      (c.value = l), (c.needsUpdate = !0);
    }
    return (t.numPlanes = a), (t.numIntersection = 0), l;
  }
}
function Un(e) {
  let t = new WeakMap();
  function n(e, t) {
    return t === Go ? (e.mapping = Uo) : t === Ko && (e.mapping = Wo), e;
  }
  function r(r) {
    if (r && r.isTexture && !1 === r.isRenderTargetTexture) {
      let a = r.mapping;
      if (a === Go || a === Ko) {
        if (t.has(r)) {
          let e = t.get(r).texture;
          return n(e, r.mapping);
        }
        {
          let a = r.image;
          if (a && a.height > 0) {
            let o = e.getRenderTarget(),
              s = new sd(a.height / 2);
            return (
              s.fromEquirectangularTexture(e, r),
              t.set(r, s),
              e.setRenderTarget(o),
              r.addEventListener(`dispose`, i),
              n(s.texture, r.mapping)
            );
          }
          return null;
        }
      }
    }
    return r;
  }
  function i(e) {
    let n = e.target;
    n.removeEventListener(`dispose`, i);
    let r = t.get(n);
    r !== void 0 && (t.delete(n), r.dispose());
  }
  function a() {
    t = new WeakMap();
  }
  return { get: r, dispose: a };
}
function Wn() {
  let e = [],
    t = [],
    n = [],
    r = bd;
  for (let i = 0; i < Cd; i++) {
    let a = 2 ** r;
    t.push(a);
    let o = 1 / a;
    i > bd - yd ? (o = Sd[i - bd + yd - 1]) : i == 0 && (o = 0), n.push(o);
    let s = 1 / (a - 1),
      c = -s / 2,
      l = 1 + s / 2,
      u = [c, c, l, c, l, l, c, c, l, l, c, l],
      d = new Float32Array(108),
      f = new Float32Array(72),
      p = new Float32Array(36);
    for (let e = 0; e < 6; e++) {
      let t = ((e % 3) * 2) / 3 - 1,
        n = e > 2 ? 0 : -1,
        r = [
          t,
          n,
          0,
          t + 2 / 3,
          n,
          0,
          t + 2 / 3,
          n + 1,
          0,
          t,
          n,
          0,
          t + 2 / 3,
          n + 1,
          0,
          t,
          n + 1,
          0,
        ];
      d.set(r, 18 * e), f.set(u, 12 * e);
      let i = [e, e, e, e, e, e];
      p.set(i, 6 * e);
    }
    let m = new ju();
    m.setAttribute(`position`, new bu(d, 3)),
      m.setAttribute(`uv`, new bu(f, 2)),
      m.setAttribute(`faceIndex`, new bu(p, 1)),
      e.push(m),
      r > yd && r--;
  }
  return { _lodPlanes: e, _sizeLods: t, _sigmas: n };
}
function Gn(e) {
  let t = new Zc(3 * xd, 3 * xd, e);
  return (
    (t.texture.mapping = qo),
    (t.texture.name = `PMREM.cubeUv`),
    (t.scissorTest = !0),
    t
  );
}
function Kn(e, t, n, r, i) {
  e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i);
}
function qn(e) {
  let t = new Float32Array(e),
    n = new J(0, 1, 0);
  return new vd({
    name: `SphericalGaussianBlur`,
    defines: { n: e },
    uniforms: {
      envMap: { value: null },
      samples: { value: 1 },
      weights: { value: t },
      latitudinal: { value: !1 },
      dTheta: { value: 0 },
      mipInt: { value: 0 },
      poleAxis: { value: n },
    },
    vertexShader: Xn(),
    fragmentShader: `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${Zn()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,
    blending: no,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Jn() {
  let e = new q(1, 1);
  return new vd({
    name: `EquirectangularToCubeUV`,
    uniforms: {
      envMap: { value: null },
      texelSize: { value: e },
      inputEncoding: { value: Td[kc] },
    },
    vertexShader: Xn(),
    fragmentShader: `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${Zn()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t}\n\t\t`,
    blending: no,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Yn() {
  return new vd({
    name: `CubemapToCubeUV`,
    uniforms: { envMap: { value: null }, inputEncoding: { value: Td[kc] } },
    vertexShader: Xn(),
    fragmentShader: `\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${Zn()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );\n\n\t\t\t}\n\t\t`,
    blending: no,
    depthTest: !1,
    depthWrite: !1,
  });
}
function Xn() {
  return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function Zn() {
  return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function Qn(e) {
  let t = new WeakMap(),
    n = null;
  function r(r) {
    if (r && r.isTexture && !1 === r.isRenderTargetTexture) {
      let o = r.mapping,
        s = o === Go || o === Ko,
        c = o === Uo || o === Wo;
      if (s || c) {
        if (t.has(r)) return t.get(r).texture;
        {
          let o = r.image;
          if ((s && o && o.height > 0) || (c && o && i(o))) {
            let i = e.getRenderTarget();
            n === null && (n = new Fd(e));
            let o = s ? n.fromEquirectangular(r) : n.fromCubemap(r);
            return (
              t.set(r, o),
              e.setRenderTarget(i),
              r.addEventListener(`dispose`, a),
              o.texture
            );
          }
          return null;
        }
      }
    }
    return r;
  }
  function i(e) {
    let t = 0;
    for (let n = 0; n < 6; n++) e[n] !== void 0 && t++;
    return t === 6;
  }
  function a(e) {
    let n = e.target;
    n.removeEventListener(`dispose`, a);
    let r = t.get(n);
    r !== void 0 && (t.delete(n), r.dispose());
  }
  function o() {
    (t = new WeakMap()), n !== null && (n.dispose(), (n = null));
  }
  return { get: r, dispose: o };
}
function $n(e) {
  let t = {};
  function n(n) {
    if (t[n] !== void 0) return t[n];
    let r;
    switch (n) {
      case `WEBGL_depth_texture`:
        r =
          e.getExtension(`WEBGL_depth_texture`) ||
          e.getExtension(`MOZ_WEBGL_depth_texture`) ||
          e.getExtension(`WEBKIT_WEBGL_depth_texture`);
        break;
      case `EXT_texture_filter_anisotropic`:
        r =
          e.getExtension(`EXT_texture_filter_anisotropic`) ||
          e.getExtension(`MOZ_EXT_texture_filter_anisotropic`) ||
          e.getExtension(`WEBKIT_EXT_texture_filter_anisotropic`);
        break;
      case `WEBGL_compressed_texture_s3tc`:
        r =
          e.getExtension(`WEBGL_compressed_texture_s3tc`) ||
          e.getExtension(`MOZ_WEBGL_compressed_texture_s3tc`) ||
          e.getExtension(`WEBKIT_WEBGL_compressed_texture_s3tc`);
        break;
      case `WEBGL_compressed_texture_pvrtc`:
        r =
          e.getExtension(`WEBGL_compressed_texture_pvrtc`) ||
          e.getExtension(`WEBKIT_WEBGL_compressed_texture_pvrtc`);
        break;
      default:
        r = e.getExtension(n);
    }
    return (t[n] = r), r;
  }
  return {
    has: function (e) {
      return n(e) !== null;
    },
    init: function (e) {
      e.isWebGL2
        ? n(`EXT_color_buffer_float`)
        : (n(`WEBGL_depth_texture`),
          n(`OES_texture_float`),
          n(`OES_texture_half_float`),
          n(`OES_texture_half_float_linear`),
          n(`OES_standard_derivatives`),
          n(`OES_element_index_uint`),
          n(`OES_vertex_array_object`),
          n(`ANGLE_instanced_arrays`)),
        n(`OES_texture_float_linear`),
        n(`EXT_color_buffer_half_float`),
        n(`WEBGL_multisampled_render_to_texture`);
    },
    get: function (e) {
      let t = n(e);
      return (
        t === null &&
          console.warn(
            `THREE.WebGLRenderer: ` + e + ` extension not supported.`
          ),
        t
      );
    },
  };
}
function er(e, t, n, r) {
  let i = {},
    a = new WeakMap();
  function o(e) {
    let s = e.target;
    for (let e in (s.index !== null && t.remove(s.index), s.attributes))
      t.remove(s.attributes[e]);
    s.removeEventListener(`dispose`, o), delete i[s.id];
    let c = a.get(s);
    c && (t.remove(c), a.delete(s)),
      r.releaseStatesOfGeometry(s),
      !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
      n.memory.geometries--;
  }
  function s(e, t) {
    return !0 === i[t.id]
      ? t
      : (t.addEventListener(`dispose`, o),
        (i[t.id] = !0),
        n.memory.geometries++,
        t);
  }
  function c(e) {
    let n = e.attributes;
    for (let e in n) t.update(n[e], 34962);
    let r = e.morphAttributes;
    for (let e in r) {
      let n = r[e];
      for (let e = 0, r = n.length; e < r; e++) t.update(n[e], 34962);
    }
  }
  function l(e) {
    let n = [],
      r = e.index,
      i = e.attributes.position,
      o = 0;
    if (r !== null) {
      let e = r.array;
      o = r.version;
      for (let t = 0, r = e.length; t < r; t += 3) {
        let r = e[t + 0],
          i = e[t + 1],
          a = e[t + 2];
        n.push(r, i, i, a, a, r);
      }
    } else {
      let e = i.array;
      o = i.version;
      for (let t = 0, r = e.length / 3 - 1; t < r; t += 3) {
        let e = t + 0,
          r = t + 1,
          i = t + 2;
        n.push(e, r, r, i, i, e);
      }
    }
    let s = new (Tn(n) > 65535 ? Su : xu)(n, 1);
    s.version = o;
    let c = a.get(e);
    c && t.remove(c), a.set(e, s);
  }
  function u(e) {
    let t = a.get(e);
    if (t) {
      let n = e.index;
      n !== null && t.version < n.version && l(e);
    } else l(e);
    return a.get(e);
  }
  return { get: s, update: c, getWireframeAttribute: u };
}
function tr(e, t, n, r) {
  let i = r.isWebGL2,
    a;
  function o(e) {
    a = e;
  }
  let s, c;
  function l(e) {
    (s = e.type), (c = e.bytesPerElement);
  }
  function u(t, r) {
    e.drawElements(a, r, s, t * c), n.update(r, a, 1);
  }
  function d(r, o, l) {
    if (l === 0) return;
    let u, d;
    if (i) (u = e), (d = `drawElementsInstanced`);
    else if (
      ((u = t.get(`ANGLE_instanced_arrays`)),
      (d = `drawElementsInstancedANGLE`),
      u === null)
    ) {
      console.error(
        `THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.`
      );
      return;
    }
    u[d](a, o, s, r * c, l), n.update(o, a, l);
  }
  (this.setMode = o),
    (this.setIndex = l),
    (this.render = u),
    (this.renderInstances = d);
}
function nr(e) {
  let t = { geometries: 0, textures: 0 },
    n = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function r(e, t, r) {
    switch ((n.calls++, t)) {
      case 4:
        n.triangles += r * (e / 3);
        break;
      case 1:
        n.lines += r * (e / 2);
        break;
      case 3:
        n.lines += r * (e - 1);
        break;
      case 2:
        n.lines += r * e;
        break;
      case 0:
        n.points += r * e;
        break;
      default:
        console.error(`THREE.WebGLInfo: Unknown draw mode:`, t);
        break;
    }
  }
  function i() {
    n.frame++, (n.calls = 0), (n.triangles = 0), (n.points = 0), (n.lines = 0);
  }
  return {
    memory: t,
    render: n,
    programs: null,
    autoReset: !0,
    reset: i,
    update: r,
  };
}
function rr(e, t) {
  return e[0] - t[0];
}
function ir(e, t) {
  return Math.abs(t[1]) - Math.abs(e[1]);
}
function ar(e, t) {
  let n = 1,
    r = t.isInterleavedBufferAttribute ? t.data.array : t.array;
  r instanceof Int8Array
    ? (n = 127)
    : r instanceof Int16Array
    ? (n = 32767)
    : r instanceof Int32Array
    ? (n = 2147483647)
    : console.error(
        `THREE.WebGLMorphtargets: Unsupported morph attribute data type: `,
        r
      ),
    e.divideScalar(n);
}
function or(e, t, n) {
  let r = {},
    i = new Float32Array(8),
    a = new WeakMap(),
    o = new J(),
    s = [];
  for (let e = 0; e < 8; e++) s[e] = [e, 0];
  function c(c, l, u, d) {
    let f = c.morphTargetInfluences;
    if (!0 === t.isWebGL2) {
      let r = l.morphAttributes.position.length,
        i = a.get(l);
      if (i === void 0 || i.count !== r) {
        i !== void 0 && i.texture.dispose();
        let e = l.morphAttributes.normal !== void 0,
          n = l.morphAttributes.position,
          s = l.morphAttributes.normal || [],
          c = l.attributes.position.count,
          u = !0 === e ? 2 : 1,
          d = c * u,
          f = 1;
        d > t.maxTextureSize &&
          ((f = Math.ceil(d / t.maxTextureSize)), (d = t.maxTextureSize));
        let p = new Float32Array(d * f * 4 * r),
          m = new Id(p, d, f, r);
        (m.format = bs), (m.type = fs), (m.needsUpdate = !0);
        let h = 4 * u;
        for (let t = 0; t < r; t++) {
          let r = n[t],
            i = s[t],
            a = d * f * 4 * t;
          for (let t = 0; t < r.count; t++) {
            o.fromBufferAttribute(r, t), !0 === r.normalized && ar(o, r);
            let n = t * h;
            (p[a + n + 0] = o.x),
              (p[a + n + 1] = o.y),
              (p[a + n + 2] = o.z),
              (p[a + n + 3] = 0),
              !0 === e &&
                (o.fromBufferAttribute(i, t),
                !0 === i.normalized && ar(o, i),
                (p[a + n + 4] = o.x),
                (p[a + n + 5] = o.y),
                (p[a + n + 6] = o.z),
                (p[a + n + 7] = 0));
          }
        }
        (i = { count: r, texture: m, size: new q(d, f) }), a.set(l, i);
      }
      let s = 0;
      for (let e = 0; e < f.length; e++) s += f[e];
      let c = l.morphTargetsRelative ? 1 : 1 - s;
      d.getUniforms().setValue(e, `morphTargetBaseInfluence`, c),
        d.getUniforms().setValue(e, `morphTargetInfluences`, f),
        d.getUniforms().setValue(e, `morphTargetsTexture`, i.texture, n),
        d.getUniforms().setValue(e, `morphTargetsTextureSize`, i.size);
    } else {
      let t = f === void 0 ? 0 : f.length,
        n = r[l.id];
      if (n === void 0 || n.length !== t) {
        n = [];
        for (let e = 0; e < t; e++) n[e] = [e, 0];
        r[l.id] = n;
      }
      for (let e = 0; e < t; e++) {
        let t = n[e];
        (t[0] = e), (t[1] = f[e]);
      }
      n.sort(ir);
      for (let e = 0; e < 8; e++)
        e < t && n[e][1]
          ? ((s[e][0] = n[e][0]), (s[e][1] = n[e][1]))
          : ((s[e][0] = 2 ** 53 - 1), (s[e][1] = 0));
      s.sort(rr);
      let a = l.morphAttributes.position,
        o = l.morphAttributes.normal,
        c = 0;
      for (let e = 0; e < 8; e++) {
        let t = s[e],
          n = t[0],
          r = t[1];
        n !== 2 ** 53 - 1 && r
          ? (a &&
              l.getAttribute(`morphTarget` + e) !== a[n] &&
              l.setAttribute(`morphTarget` + e, a[n]),
            o &&
              l.getAttribute(`morphNormal` + e) !== o[n] &&
              l.setAttribute(`morphNormal` + e, o[n]),
            (i[e] = r),
            (c += r))
          : (a &&
              !0 === l.hasAttribute(`morphTarget` + e) &&
              l.deleteAttribute(`morphTarget` + e),
            o &&
              !0 === l.hasAttribute(`morphNormal` + e) &&
              l.deleteAttribute(`morphNormal` + e),
            (i[e] = 0));
      }
      let u = l.morphTargetsRelative ? 1 : 1 - c;
      d.getUniforms().setValue(e, `morphTargetBaseInfluence`, u),
        d.getUniforms().setValue(e, `morphTargetInfluences`, i);
    }
  }
  return { update: c };
}
function sr(e, t, n, r) {
  let i = new WeakMap();
  function a(e) {
    let a = r.render.frame,
      o = e.geometry,
      c = t.get(e, o);
    return (
      i.get(c) !== a && (t.update(c), i.set(c, a)),
      e.isInstancedMesh &&
        (!1 === e.hasEventListener(`dispose`, s) &&
          e.addEventListener(`dispose`, s),
        n.update(e.instanceMatrix, 34962),
        e.instanceColor !== null && n.update(e.instanceColor, 34962)),
      c
    );
  }
  function o() {
    i = new WeakMap();
  }
  function s(e) {
    let t = e.target;
    t.removeEventListener(`dispose`, s),
      n.remove(t.instanceMatrix),
      t.instanceColor !== null && n.remove(t.instanceColor);
  }
  return { update: a, dispose: o };
}
function cr(e, t, n) {
  let r = e[0];
  if (r <= 0 || r > 0) return e;
  let i = t * n,
    a = Hd[i];
  if ((a === void 0 && ((a = new Float32Array(i)), (Hd[i] = a)), t !== 0)) {
    r.toArray(a, 0);
    for (let r = 1, i = 0; r !== t; ++r) (i += n), e[r].toArray(a, i);
  }
  return a;
}
function lr(e, t) {
  if (e.length !== t.length) return !1;
  for (let n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return !1;
  return !0;
}
function ur(e, t) {
  for (let n = 0, r = t.length; n < r; n++) e[n] = t[n];
}
function dr(e, t) {
  let n = Ud[t];
  n === void 0 && ((n = new Int32Array(t)), (Ud[t] = n));
  for (let r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
  return n;
}
function fr(e, t) {
  let n = this.cache;
  n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
}
function pr(e, t) {
  let n = this.cache;
  if (t.x !== void 0)
    (n[0] !== t.x || n[1] !== t.y) &&
      (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
  else {
    if (lr(n, t)) return;
    e.uniform2fv(this.addr, t), ur(n, t);
  }
}
function mr(e, t) {
  let n = this.cache;
  if (t.x !== void 0)
    (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z) &&
      (e.uniform3f(this.addr, t.x, t.y, t.z),
      (n[0] = t.x),
      (n[1] = t.y),
      (n[2] = t.z));
  else if (t.r !== void 0)
    (n[0] !== t.r || n[1] !== t.g || n[2] !== t.b) &&
      (e.uniform3f(this.addr, t.r, t.g, t.b),
      (n[0] = t.r),
      (n[1] = t.g),
      (n[2] = t.b));
  else {
    if (lr(n, t)) return;
    e.uniform3fv(this.addr, t), ur(n, t);
  }
}
function hr(e, t) {
  let n = this.cache;
  if (t.x !== void 0)
    (n[0] !== t.x || n[1] !== t.y || n[2] !== t.z || n[3] !== t.w) &&
      (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
      (n[0] = t.x),
      (n[1] = t.y),
      (n[2] = t.z),
      (n[3] = t.w));
  else {
    if (lr(n, t)) return;
    e.uniform4fv(this.addr, t), ur(n, t);
  }
}
function gr(e, t) {
  let n = this.cache,
    r = t.elements;
  if (r === void 0) {
    if (lr(n, t)) return;
    e.uniformMatrix2fv(this.addr, !1, t), ur(n, t);
  } else {
    if (lr(n, r)) return;
    Kd.set(r), e.uniformMatrix2fv(this.addr, !1, Kd), ur(n, r);
  }
}
function _r(e, t) {
  let n = this.cache,
    r = t.elements;
  if (r === void 0) {
    if (lr(n, t)) return;
    e.uniformMatrix3fv(this.addr, !1, t), ur(n, t);
  } else {
    if (lr(n, r)) return;
    Gd.set(r), e.uniformMatrix3fv(this.addr, !1, Gd), ur(n, r);
  }
}
function vr(e, t) {
  let n = this.cache,
    r = t.elements;
  if (r === void 0) {
    if (lr(n, t)) return;
    e.uniformMatrix4fv(this.addr, !1, t), ur(n, t);
  } else {
    if (lr(n, r)) return;
    Wd.set(r), e.uniformMatrix4fv(this.addr, !1, Wd), ur(n, r);
  }
}
function yr(e, t) {
  let n = this.cache;
  n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
}
function br(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform2iv(this.addr, t), ur(n, t));
}
function xr(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform3iv(this.addr, t), ur(n, t));
}
function Sr(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform4iv(this.addr, t), ur(n, t));
}
function Cr(e, t) {
  let n = this.cache;
  n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
}
function wr(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform2uiv(this.addr, t), ur(n, t));
}
function Tr(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform3uiv(this.addr, t), ur(n, t));
}
function Er(e, t) {
  let n = this.cache;
  lr(n, t) || (e.uniform4uiv(this.addr, t), ur(n, t));
}
function Dr(e, t, n) {
  let r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
    n.safeSetTexture2D(t || Rd, i);
}
function Or(e, t, n) {
  let r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture3D(t || Bd, i);
}
function kr(e, t, n) {
  let r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
    n.safeSetTextureCube(t || Vd, i);
}
function Ar(e, t, n) {
  let r = this.cache,
    i = n.allocateTextureUnit();
  r[0] !== i && (e.uniform1i(this.addr, i), (r[0] = i)),
    n.setTexture2DArray(t || zd, i);
}
function jr(e) {
  switch (e) {
    case 5126:
      return fr;
    case 35664:
      return pr;
    case 35665:
      return mr;
    case 35666:
      return hr;
    case 35674:
      return gr;
    case 35675:
      return _r;
    case 35676:
      return vr;
    case 5124:
    case 35670:
      return yr;
    case 35667:
    case 35671:
      return br;
    case 35668:
    case 35672:
      return xr;
    case 35669:
    case 35673:
      return Sr;
    case 5125:
      return Cr;
    case 36294:
      return wr;
    case 36295:
      return Tr;
    case 36296:
      return Er;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return Dr;
    case 35679:
    case 36299:
    case 36307:
      return Or;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return kr;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return Ar;
  }
}
function Mr(e, t) {
  e.uniform1fv(this.addr, t);
}
function Nr(e, t) {
  let n = cr(t, this.size, 2);
  e.uniform2fv(this.addr, n);
}
function Pr(e, t) {
  let n = cr(t, this.size, 3);
  e.uniform3fv(this.addr, n);
}
function Fr(e, t) {
  let n = cr(t, this.size, 4);
  e.uniform4fv(this.addr, n);
}
function Ir(e, t) {
  let n = cr(t, this.size, 4);
  e.uniformMatrix2fv(this.addr, !1, n);
}
function Lr(e, t) {
  let n = cr(t, this.size, 9);
  e.uniformMatrix3fv(this.addr, !1, n);
}
function Rr(e, t) {
  let n = cr(t, this.size, 16);
  e.uniformMatrix4fv(this.addr, !1, n);
}
function zr(e, t) {
  e.uniform1iv(this.addr, t);
}
function Br(e, t) {
  e.uniform2iv(this.addr, t);
}
function Vr(e, t) {
  e.uniform3iv(this.addr, t);
}
function Hr(e, t) {
  e.uniform4iv(this.addr, t);
}
function Ur(e, t) {
  e.uniform1uiv(this.addr, t);
}
function Wr(e, t) {
  e.uniform2uiv(this.addr, t);
}
function Gr(e, t) {
  e.uniform3uiv(this.addr, t);
}
function Kr(e, t) {
  e.uniform4uiv(this.addr, t);
}
function qr(e, t, n) {
  let r = t.length,
    i = dr(n, r);
  e.uniform1iv(this.addr, i);
  for (let e = 0; e !== r; ++e) n.safeSetTexture2D(t[e] || Rd, i[e]);
}
function Jr(e, t, n) {
  let r = t.length,
    i = dr(n, r);
  e.uniform1iv(this.addr, i);
  for (let e = 0; e !== r; ++e) n.setTexture3D(t[e] || Bd, i[e]);
}
function Yr(e, t, n) {
  let r = t.length,
    i = dr(n, r);
  e.uniform1iv(this.addr, i);
  for (let e = 0; e !== r; ++e) n.safeSetTextureCube(t[e] || Vd, i[e]);
}
function Xr(e, t, n) {
  let r = t.length,
    i = dr(n, r);
  e.uniform1iv(this.addr, i);
  for (let e = 0; e !== r; ++e) n.setTexture2DArray(t[e] || zd, i[e]);
}
function Zr(e) {
  switch (e) {
    case 5126:
      return Mr;
    case 35664:
      return Nr;
    case 35665:
      return Pr;
    case 35666:
      return Fr;
    case 35674:
      return Ir;
    case 35675:
      return Lr;
    case 35676:
      return Rr;
    case 5124:
    case 35670:
      return zr;
    case 35667:
    case 35671:
      return Br;
    case 35668:
    case 35672:
      return Vr;
    case 35669:
    case 35673:
      return Hr;
    case 5125:
      return Ur;
    case 36294:
      return Wr;
    case 36295:
      return Gr;
    case 36296:
      return Kr;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return qr;
    case 35679:
    case 36299:
    case 36307:
      return Jr;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return Yr;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return Xr;
  }
}
function Qr(e, t, n) {
  (this.id = e),
    (this.addr = n),
    (this.cache = []),
    (this.setValue = jr(t.type));
}
function $r(e, t, n) {
  (this.id = e),
    (this.addr = n),
    (this.cache = []),
    (this.size = t.size),
    (this.setValue = Zr(t.type));
}
function ei(e) {
  (this.id = e), (this.seq = []), (this.map = {});
}
function ti(e, t) {
  e.seq.push(t), (e.map[t.id] = t);
}
function ni(e, t, n) {
  let r = e.name,
    i = r.length;
  for (qd.lastIndex = 0; ; ) {
    let a = qd.exec(r),
      o = qd.lastIndex,
      s = a[1],
      c = a[2] === `]`,
      l = a[3];
    if ((c && (s |= 0), l === void 0 || (l === `[` && o + 2 === i))) {
      ti(n, l === void 0 ? new Qr(s, e, t) : new $r(s, e, t));
      break;
    }
    {
      let e = n.map[s];
      e === void 0 && ((e = new ei(s)), ti(n, e)), (n = e);
    }
  }
}
function ri(e, t) {
  (this.seq = []), (this.map = {});
  let n = e.getProgramParameter(t, 35718);
  for (let r = 0; r < n; ++r) {
    let n = e.getActiveUniform(t, r),
      i = e.getUniformLocation(t, n.name);
    ni(n, i, this);
  }
}
function ii(e, t, n) {
  let r = e.createShader(t);
  return e.shaderSource(r, n), e.compileShader(r), r;
}
function ai(e) {
  let t = e.split(`
`);
  for (let e = 0; e < t.length; e++) t[e] = e + 1 + `: ` + t[e];
  return t.join(`
`);
}
function oi(e) {
  switch (e) {
    case kc:
      return [`Linear`, `( value )`];
    case Ac:
      return [`sRGB`, `( value )`];
    default:
      return (
        console.warn(`THREE.WebGLProgram: Unsupported encoding:`, e),
        [`Linear`, `( value )`]
      );
  }
}
function si(e, t, n) {
  let r = e.getShaderParameter(t, 35713),
    i = e.getShaderInfoLog(t).trim();
  return r && i === ``
    ? ``
    : n.toUpperCase() +
        `

` +
        i +
        `

` +
        ai(e.getShaderSource(t));
}
function ci(e, t) {
  let n = oi(t);
  return (
    `vec4 ` + e + `( vec4 value ) { return ` + n[0] + `ToLinear` + n[1] + `; }`
  );
}
function li(e, t) {
  let n = oi(t);
  return `vec4 ` + e + `( vec4 value ) { return LinearTo` + n[0] + n[1] + `; }`;
}
function ui(e, t) {
  let n;
  switch (t) {
    case Lo:
      n = `Linear`;
      break;
    case Ro:
      n = `Reinhard`;
      break;
    case zo:
      n = `OptimizedCineon`;
      break;
    case Bo:
      n = `ACESFilmic`;
      break;
    case Vo:
      n = `Custom`;
      break;
    default:
      console.warn(`THREE.WebGLProgram: Unsupported toneMapping:`, t),
        (n = `Linear`);
  }
  return (
    `vec3 ` + e + `( vec3 color ) { return ` + n + `ToneMapping( color ); }`
  );
}
function di(e) {
  return [
    e.extensionDerivatives ||
    e.envMapCubeUV ||
    e.bumpMap ||
    e.tangentSpaceNormalMap ||
    e.clearcoatNormalMap ||
    e.flatShading ||
    e.shaderID === `physical`
      ? `#extension GL_OES_standard_derivatives : enable`
      : ``,
    (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
    e.rendererExtensionFragDepth
      ? `#extension GL_EXT_frag_depth : enable`
      : ``,
    e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
      ? `#extension GL_EXT_draw_buffers : require`
      : ``,
    (e.extensionShaderTextureLOD || e.envMap || e.transmission) &&
    e.rendererExtensionShaderTextureLod
      ? `#extension GL_EXT_shader_texture_lod : enable`
      : ``,
  ].filter(mi).join(`
`);
}
function fi(e) {
  let t = [];
  for (let n in e) {
    let r = e[n];
    !1 !== r && t.push(`#define ` + n + ` ` + r);
  }
  return t.join(`
`);
}
function pi(e, t) {
  let n = {},
    r = e.getProgramParameter(t, 35721);
  for (let i = 0; i < r; i++) {
    let r = e.getActiveAttrib(t, i),
      a = r.name,
      o = 1;
    r.type === 35674 && (o = 2),
      r.type === 35675 && (o = 3),
      r.type === 35676 && (o = 4),
      (n[a] = {
        type: r.type,
        location: e.getAttribLocation(t, a),
        locationSize: o,
      });
  }
  return n;
}
function mi(e) {
  return e !== ``;
}
function hi(e, t) {
  return e
    .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
    .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
    .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
    .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
    .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
    .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
    .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
    .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
}
function gi(e, t) {
  return e
    .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
    .replace(
      /UNION_CLIPPING_PLANES/g,
      t.numClippingPlanes - t.numClipIntersection
    );
}
function _i(e) {
  return e.replace(Yd, vi);
}
function vi(e, t) {
  let n = Q[t];
  if (n === void 0) throw Error(`Can not resolve #include <` + t + `>`);
  return _i(n);
}
function yi(e) {
  return e.replace(Zd, xi).replace(Xd, bi);
}
function bi(e, t, n, r) {
  return (
    console.warn(
      `WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.`
    ),
    xi(e, t, n, r)
  );
}
function xi(e, t, n, r) {
  let i = ``;
  for (let e = parseInt(t); e < parseInt(n); e++)
    i += r
      .replace(/\[\s*i\s*\]/g, `[ ` + e + ` ]`)
      .replace(/UNROLLED_LOOP_INDEX/g, e);
  return i;
}
function Si(e) {
  let t =
    `precision ` +
    e.precision +
    ` float;
precision ` +
    e.precision +
    ` int;`;
  return (
    e.precision === `highp`
      ? (t += `
#define HIGH_PRECISION`)
      : e.precision === `mediump`
      ? (t += `
#define MEDIUM_PRECISION`)
      : e.precision === `lowp` &&
        (t += `
#define LOW_PRECISION`),
    t
  );
}
function Ci(e) {
  let t = `SHADOWMAP_TYPE_BASIC`;
  return (
    e.shadowMapType === Ya
      ? (t = `SHADOWMAP_TYPE_PCF`)
      : e.shadowMapType === Xa
      ? (t = `SHADOWMAP_TYPE_PCF_SOFT`)
      : e.shadowMapType === Za && (t = `SHADOWMAP_TYPE_VSM`),
    t
  );
}
function wi(e) {
  let t = `ENVMAP_TYPE_CUBE`;
  if (e.envMap)
    switch (e.envMapMode) {
      case Uo:
      case Wo:
        t = `ENVMAP_TYPE_CUBE`;
        break;
      case qo:
      case Jo:
        t = `ENVMAP_TYPE_CUBE_UV`;
        break;
    }
  return t;
}
function Ti(e) {
  let t = `ENVMAP_MODE_REFLECTION`;
  if (e.envMap)
    switch (e.envMapMode) {
      case Wo:
      case Jo:
        t = `ENVMAP_MODE_REFRACTION`;
        break;
    }
  return t;
}
function Ei(e) {
  let t = `ENVMAP_BLENDING_NONE`;
  if (e.envMap)
    switch (e.combine) {
      case No:
        t = `ENVMAP_BLENDING_MULTIPLY`;
        break;
      case Po:
        t = `ENVMAP_BLENDING_MIX`;
        break;
      case Fo:
        t = `ENVMAP_BLENDING_ADD`;
        break;
    }
  return t;
}
function Di(e, t, n, r) {
  let i = e.getContext(),
    a = n.defines,
    o = n.vertexShader,
    s = n.fragmentShader,
    c = Ci(n),
    l = wi(n),
    u = Ti(n),
    d = Ei(n),
    f = n.isWebGL2 ? `` : di(n),
    p = fi(a),
    m = i.createProgram(),
    h,
    g,
    _ = n.glslVersion
      ? `#version ` +
        n.glslVersion +
        `
`
      : ``;
  n.isRawShaderMaterial
    ? ((h = [p].filter(mi).join(`
`)),
      h.length > 0 &&
        (h += `
`),
      (g = [f, p].filter(mi).join(`
`)),
      g.length > 0 &&
        (g += `
`))
    : ((h = [
        Si(n),
        `#define SHADER_NAME ` + n.shaderName,
        p,
        n.instancing ? `#define USE_INSTANCING` : ``,
        n.instancingColor ? `#define USE_INSTANCING_COLOR` : ``,
        n.supportsVertexTextures ? `#define VERTEX_TEXTURES` : ``,
        `#define MAX_BONES ` + n.maxBones,
        n.useFog && n.fog ? `#define USE_FOG` : ``,
        n.useFog && n.fogExp2 ? `#define FOG_EXP2` : ``,
        n.map ? `#define USE_MAP` : ``,
        n.envMap ? `#define USE_ENVMAP` : ``,
        n.envMap ? `#define ` + u : ``,
        n.lightMap ? `#define USE_LIGHTMAP` : ``,
        n.aoMap ? `#define USE_AOMAP` : ``,
        n.emissiveMap ? `#define USE_EMISSIVEMAP` : ``,
        n.bumpMap ? `#define USE_BUMPMAP` : ``,
        n.normalMap ? `#define USE_NORMALMAP` : ``,
        n.normalMap && n.objectSpaceNormalMap
          ? `#define OBJECTSPACE_NORMALMAP`
          : ``,
        n.normalMap && n.tangentSpaceNormalMap
          ? `#define TANGENTSPACE_NORMALMAP`
          : ``,
        n.clearcoatMap ? `#define USE_CLEARCOATMAP` : ``,
        n.clearcoatRoughnessMap ? `#define USE_CLEARCOAT_ROUGHNESSMAP` : ``,
        n.clearcoatNormalMap ? `#define USE_CLEARCOAT_NORMALMAP` : ``,
        n.displacementMap && n.supportsVertexTextures
          ? `#define USE_DISPLACEMENTMAP`
          : ``,
        n.specularMap ? `#define USE_SPECULARMAP` : ``,
        n.specularIntensityMap ? `#define USE_SPECULARINTENSITYMAP` : ``,
        n.specularColorMap ? `#define USE_SPECULARCOLORMAP` : ``,
        n.roughnessMap ? `#define USE_ROUGHNESSMAP` : ``,
        n.metalnessMap ? `#define USE_METALNESSMAP` : ``,
        n.alphaMap ? `#define USE_ALPHAMAP` : ``,
        n.transmission ? `#define USE_TRANSMISSION` : ``,
        n.transmissionMap ? `#define USE_TRANSMISSIONMAP` : ``,
        n.thicknessMap ? `#define USE_THICKNESSMAP` : ``,
        n.sheenColorMap ? `#define USE_SHEENCOLORMAP` : ``,
        n.sheenRoughnessMap ? `#define USE_SHEENROUGHNESSMAP` : ``,
        n.vertexTangents ? `#define USE_TANGENT` : ``,
        n.vertexColors ? `#define USE_COLOR` : ``,
        n.vertexAlphas ? `#define USE_COLOR_ALPHA` : ``,
        n.vertexUvs ? `#define USE_UV` : ``,
        n.uvsVertexOnly ? `#define UVS_VERTEX_ONLY` : ``,
        n.flatShading ? `#define FLAT_SHADED` : ``,
        n.skinning ? `#define USE_SKINNING` : ``,
        n.useVertexTexture ? `#define BONE_TEXTURE` : ``,
        n.morphTargets ? `#define USE_MORPHTARGETS` : ``,
        n.morphNormals && !1 === n.flatShading
          ? `#define USE_MORPHNORMALS`
          : ``,
        n.morphTargets && n.isWebGL2 ? `#define MORPHTARGETS_TEXTURE` : ``,
        n.morphTargets && n.isWebGL2
          ? `#define MORPHTARGETS_COUNT ` + n.morphTargetsCount
          : ``,
        n.doubleSided ? `#define DOUBLE_SIDED` : ``,
        n.flipSided ? `#define FLIP_SIDED` : ``,
        n.shadowMapEnabled ? `#define USE_SHADOWMAP` : ``,
        n.shadowMapEnabled ? `#define ` + c : ``,
        n.sizeAttenuation ? `#define USE_SIZEATTENUATION` : ``,
        n.logarithmicDepthBuffer ? `#define USE_LOGDEPTHBUF` : ``,
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? `#define USE_LOGDEPTHBUF_EXT`
          : ``,
        `uniform mat4 modelMatrix;`,
        `uniform mat4 modelViewMatrix;`,
        `uniform mat4 projectionMatrix;`,
        `uniform mat4 viewMatrix;`,
        `uniform mat3 normalMatrix;`,
        `uniform vec3 cameraPosition;`,
        `uniform bool isOrthographic;`,
        `#ifdef USE_INSTANCING`,
        `	attribute mat4 instanceMatrix;`,
        `#endif`,
        `#ifdef USE_INSTANCING_COLOR`,
        `	attribute vec3 instanceColor;`,
        `#endif`,
        `attribute vec3 position;`,
        `attribute vec3 normal;`,
        `attribute vec2 uv;`,
        `#ifdef USE_TANGENT`,
        `	attribute vec4 tangent;`,
        `#endif`,
        `#if defined( USE_COLOR_ALPHA )`,
        `	attribute vec4 color;`,
        `#elif defined( USE_COLOR )`,
        `	attribute vec3 color;`,
        `#endif`,
        `#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )`,
        `	attribute vec3 morphTarget0;`,
        `	attribute vec3 morphTarget1;`,
        `	attribute vec3 morphTarget2;`,
        `	attribute vec3 morphTarget3;`,
        `	#ifdef USE_MORPHNORMALS`,
        `		attribute vec3 morphNormal0;`,
        `		attribute vec3 morphNormal1;`,
        `		attribute vec3 morphNormal2;`,
        `		attribute vec3 morphNormal3;`,
        `	#else`,
        `		attribute vec3 morphTarget4;`,
        `		attribute vec3 morphTarget5;`,
        `		attribute vec3 morphTarget6;`,
        `		attribute vec3 morphTarget7;`,
        `	#endif`,
        `#endif`,
        `#ifdef USE_SKINNING`,
        `	attribute vec4 skinIndex;`,
        `	attribute vec4 skinWeight;`,
        `#endif`,
        `
`,
      ].filter(mi).join(`
`)),
      (g = [
        f,
        Si(n),
        `#define SHADER_NAME ` + n.shaderName,
        p,
        n.useFog && n.fog ? `#define USE_FOG` : ``,
        n.useFog && n.fogExp2 ? `#define FOG_EXP2` : ``,
        n.map ? `#define USE_MAP` : ``,
        n.matcap ? `#define USE_MATCAP` : ``,
        n.envMap ? `#define USE_ENVMAP` : ``,
        n.envMap ? `#define ` + l : ``,
        n.envMap ? `#define ` + u : ``,
        n.envMap ? `#define ` + d : ``,
        n.lightMap ? `#define USE_LIGHTMAP` : ``,
        n.aoMap ? `#define USE_AOMAP` : ``,
        n.emissiveMap ? `#define USE_EMISSIVEMAP` : ``,
        n.bumpMap ? `#define USE_BUMPMAP` : ``,
        n.normalMap ? `#define USE_NORMALMAP` : ``,
        n.normalMap && n.objectSpaceNormalMap
          ? `#define OBJECTSPACE_NORMALMAP`
          : ``,
        n.normalMap && n.tangentSpaceNormalMap
          ? `#define TANGENTSPACE_NORMALMAP`
          : ``,
        n.clearcoat ? `#define USE_CLEARCOAT` : ``,
        n.clearcoatMap ? `#define USE_CLEARCOATMAP` : ``,
        n.clearcoatRoughnessMap ? `#define USE_CLEARCOAT_ROUGHNESSMAP` : ``,
        n.clearcoatNormalMap ? `#define USE_CLEARCOAT_NORMALMAP` : ``,
        n.specularMap ? `#define USE_SPECULARMAP` : ``,
        n.specularIntensityMap ? `#define USE_SPECULARINTENSITYMAP` : ``,
        n.specularColorMap ? `#define USE_SPECULARCOLORMAP` : ``,
        n.roughnessMap ? `#define USE_ROUGHNESSMAP` : ``,
        n.metalnessMap ? `#define USE_METALNESSMAP` : ``,
        n.alphaMap ? `#define USE_ALPHAMAP` : ``,
        n.alphaTest ? `#define USE_ALPHATEST` : ``,
        n.sheen ? `#define USE_SHEEN` : ``,
        n.sheenColorMap ? `#define USE_SHEENCOLORMAP` : ``,
        n.sheenRoughnessMap ? `#define USE_SHEENROUGHNESSMAP` : ``,
        n.transmission ? `#define USE_TRANSMISSION` : ``,
        n.transmissionMap ? `#define USE_TRANSMISSIONMAP` : ``,
        n.thicknessMap ? `#define USE_THICKNESSMAP` : ``,
        n.vertexTangents ? `#define USE_TANGENT` : ``,
        n.vertexColors || n.instancingColor ? `#define USE_COLOR` : ``,
        n.vertexAlphas ? `#define USE_COLOR_ALPHA` : ``,
        n.vertexUvs ? `#define USE_UV` : ``,
        n.uvsVertexOnly ? `#define UVS_VERTEX_ONLY` : ``,
        n.gradientMap ? `#define USE_GRADIENTMAP` : ``,
        n.flatShading ? `#define FLAT_SHADED` : ``,
        n.doubleSided ? `#define DOUBLE_SIDED` : ``,
        n.flipSided ? `#define FLIP_SIDED` : ``,
        n.shadowMapEnabled ? `#define USE_SHADOWMAP` : ``,
        n.shadowMapEnabled ? `#define ` + c : ``,
        n.premultipliedAlpha ? `#define PREMULTIPLIED_ALPHA` : ``,
        n.physicallyCorrectLights ? `#define PHYSICALLY_CORRECT_LIGHTS` : ``,
        n.logarithmicDepthBuffer ? `#define USE_LOGDEPTHBUF` : ``,
        n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
          ? `#define USE_LOGDEPTHBUF_EXT`
          : ``,
        (n.extensionShaderTextureLOD || n.envMap) &&
        n.rendererExtensionShaderTextureLod
          ? `#define TEXTURE_LOD_EXT`
          : ``,
        `uniform mat4 viewMatrix;`,
        `uniform vec3 cameraPosition;`,
        `uniform bool isOrthographic;`,
        n.toneMapping === Io ? `` : `#define TONE_MAPPING`,
        n.toneMapping === Io ? `` : Q.tonemapping_pars_fragment,
        n.toneMapping === Io ? `` : ui(`toneMapping`, n.toneMapping),
        n.dithering ? `#define DITHERING` : ``,
        n.format === ys ? `#define OPAQUE` : ``,
        Q.encodings_pars_fragment,
        n.map ? ci(`mapTexelToLinear`, n.mapEncoding) : ``,
        n.matcap ? ci(`matcapTexelToLinear`, n.matcapEncoding) : ``,
        n.envMap ? ci(`envMapTexelToLinear`, n.envMapEncoding) : ``,
        n.emissiveMap
          ? ci(`emissiveMapTexelToLinear`, n.emissiveMapEncoding)
          : ``,
        n.specularColorMap
          ? ci(`specularColorMapTexelToLinear`, n.specularColorMapEncoding)
          : ``,
        n.sheenColorMap
          ? ci(`sheenColorMapTexelToLinear`, n.sheenColorMapEncoding)
          : ``,
        n.lightMap ? ci(`lightMapTexelToLinear`, n.lightMapEncoding) : ``,
        li(`linearToOutputTexel`, n.outputEncoding),
        n.depthPacking ? `#define DEPTH_PACKING ` + n.depthPacking : ``,
        `
`,
      ].filter(mi).join(`
`))),
    (o = _i(o)),
    (o = hi(o, n)),
    (o = gi(o, n)),
    (s = _i(s)),
    (s = hi(s, n)),
    (s = gi(s, n)),
    (o = yi(o)),
    (s = yi(s)),
    n.isWebGL2 &&
      !0 !== n.isRawShaderMaterial &&
      ((_ = `#version 300 es
`),
      (h =
        [
          `precision mediump sampler2DArray;`,
          `#define attribute in`,
          `#define varying out`,
          `#define texture2D texture`,
        ].join(`
`) +
        `
` +
        h),
      (g =
        [
          `#define varying in`,
          n.glslVersion === zc
            ? ``
            : `layout(location = 0) out highp vec4 pc_fragColor;`,
          n.glslVersion === zc ? `` : `#define gl_FragColor pc_fragColor`,
          `#define gl_FragDepthEXT gl_FragDepth`,
          `#define texture2D texture`,
          `#define textureCube texture`,
          `#define texture2DProj textureProj`,
          `#define texture2DLodEXT textureLod`,
          `#define texture2DProjLodEXT textureProjLod`,
          `#define textureCubeLodEXT textureLod`,
          `#define texture2DGradEXT textureGrad`,
          `#define texture2DProjGradEXT textureProjGrad`,
          `#define textureCubeGradEXT textureGrad`,
        ].join(`
`) +
        `
` +
        g));
  let v = _ + h + o,
    y = _ + g + s,
    b = ii(i, 35633, v),
    x = ii(i, 35632, y);
  if (
    (i.attachShader(m, b),
    i.attachShader(m, x),
    n.index0AttributeName === void 0
      ? !0 === n.morphTargets && i.bindAttribLocation(m, 0, `position`)
      : i.bindAttribLocation(m, 0, n.index0AttributeName),
    i.linkProgram(m),
    e.debug.checkShaderErrors)
  ) {
    let e = i.getProgramInfoLog(m).trim(),
      t = i.getShaderInfoLog(b).trim(),
      n = i.getShaderInfoLog(x).trim(),
      r = !0,
      a = !0;
    if (!1 === i.getProgramParameter(m, 35714)) {
      r = !1;
      let t = si(i, b, `vertex`),
        n = si(i, x, `fragment`);
      console.error(
        `THREE.WebGLProgram: Shader Error ` +
          i.getError() +
          ` - VALIDATE_STATUS ` +
          i.getProgramParameter(m, 35715) +
          `

Program Info Log: ` +
          e +
          `
` +
          t +
          `
` +
          n
      );
    } else
      e === ``
        ? (t !== `` && n !== ``) || (a = !1)
        : console.warn(`THREE.WebGLProgram: Program Info Log:`, e);
    a &&
      (this.diagnostics = {
        runnable: r,
        programLog: e,
        vertexShader: { log: t, prefix: h },
        fragmentShader: { log: n, prefix: g },
      });
  }
  i.deleteShader(b), i.deleteShader(x);
  let S;
  this.getUniforms = function () {
    return S === void 0 && (S = new ri(i, m)), S;
  };
  let C;
  return (
    (this.getAttributes = function () {
      return C === void 0 && (C = pi(i, m)), C;
    }),
    (this.destroy = function () {
      r.releaseStatesOfProgram(this),
        i.deleteProgram(m),
        (this.program = void 0);
    }),
    (this.name = n.shaderName),
    (this.id = Jd++),
    (this.cacheKey = t),
    (this.usedTimes = 1),
    (this.program = m),
    (this.vertexShader = b),
    (this.fragmentShader = x),
    this
  );
}
function Oi(e, t, n, r, i, a, o) {
  let s = new Bl(),
    c = new $d(),
    l = [],
    u = i.isWebGL2,
    d = i.logarithmicDepthBuffer,
    f = i.floatVertexTextures,
    p = i.maxVertexUniforms,
    m = i.vertexTextures,
    h = i.precision,
    g = {
      MeshDepthMaterial: `depth`,
      MeshDistanceMaterial: `distanceRGBA`,
      MeshNormalMaterial: `normal`,
      MeshBasicMaterial: `basic`,
      MeshLambertMaterial: `lambert`,
      MeshPhongMaterial: `phong`,
      MeshToonMaterial: `toon`,
      MeshStandardMaterial: `physical`,
      MeshPhysicalMaterial: `physical`,
      MeshMatcapMaterial: `matcap`,
      LineBasicMaterial: `basic`,
      LineDashedMaterial: `dashed`,
      PointsMaterial: `points`,
      ShadowMaterial: `shadow`,
      SpriteMaterial: `sprite`,
    };
  function _(e) {
    let t = e.skeleton.bones;
    if (f) return 1024;
    {
      let e = p,
        n = Math.floor((e - 20) / 4),
        r = Math.min(n, t.length);
      return r < t.length
        ? (console.warn(
            `THREE.WebGLRenderer: Skeleton has ` +
              t.length +
              ` bones. This GPU supports ` +
              r +
              `.`
          ),
          0)
        : r;
    }
  }
  function v(e) {
    let t;
    return (
      e && e.isTexture
        ? (t = e.encoding)
        : e && e.isWebGLRenderTarget
        ? (console.warn(
            `THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.`
          ),
          (t = e.texture.encoding))
        : (t = kc),
      u &&
        e &&
        e.isTexture &&
        e.format === bs &&
        e.type === os &&
        e.encoding === Ac &&
        (t = kc),
      t
    );
  }
  function y(a, s, l, p, y) {
    let b = p.fog,
      x = a.isMeshStandardMaterial ? p.environment : null,
      S = (a.isMeshStandardMaterial ? n : t).get(a.envMap || x),
      C = g[a.type],
      w = y.isSkinnedMesh ? _(y) : 0;
    a.precision !== null &&
      ((h = i.getMaxPrecision(a.precision)),
      h !== a.precision &&
        console.warn(
          `THREE.WebGLProgram.getParameters:`,
          a.precision,
          `not supported, using`,
          h,
          `instead.`
        ));
    let T, E, D, O;
    if (C) {
      let e = gd[C];
      (T = e.vertexShader), (E = e.fragmentShader);
    } else
      (T = a.vertexShader),
        (E = a.fragmentShader),
        c.update(a),
        (D = c.getVertexShaderID(a)),
        (O = c.getFragmentShaderID(a));
    let k = e.getRenderTarget(),
      A = a.alphaTest > 0,
      j = a.clearcoat > 0;
    return {
      isWebGL2: u,
      shaderID: C,
      shaderName: a.type,
      vertexShader: T,
      fragmentShader: E,
      defines: a.defines,
      customVertexShaderID: D,
      customFragmentShaderID: O,
      isRawShaderMaterial: !0 === a.isRawShaderMaterial,
      glslVersion: a.glslVersion,
      precision: h,
      instancing: !0 === y.isInstancedMesh,
      instancingColor: !0 === y.isInstancedMesh && y.instanceColor !== null,
      supportsVertexTextures: m,
      outputEncoding: k === null ? e.outputEncoding : v(k.texture),
      map: !!a.map,
      mapEncoding: v(a.map),
      matcap: !!a.matcap,
      matcapEncoding: v(a.matcap),
      envMap: !!S,
      envMapMode: S && S.mapping,
      envMapEncoding: v(S),
      envMapCubeUV: !!S && (S.mapping === qo || S.mapping === Jo),
      lightMap: !!a.lightMap,
      lightMapEncoding: v(a.lightMap),
      aoMap: !!a.aoMap,
      emissiveMap: !!a.emissiveMap,
      emissiveMapEncoding: v(a.emissiveMap),
      bumpMap: !!a.bumpMap,
      normalMap: !!a.normalMap,
      objectSpaceNormalMap: a.normalMapType === Pc,
      tangentSpaceNormalMap: a.normalMapType === Nc,
      clearcoat: j,
      clearcoatMap: j && !!a.clearcoatMap,
      clearcoatRoughnessMap: j && !!a.clearcoatRoughnessMap,
      clearcoatNormalMap: j && !!a.clearcoatNormalMap,
      displacementMap: !!a.displacementMap,
      roughnessMap: !!a.roughnessMap,
      metalnessMap: !!a.metalnessMap,
      specularMap: !!a.specularMap,
      specularIntensityMap: !!a.specularIntensityMap,
      specularColorMap: !!a.specularColorMap,
      specularColorMapEncoding: v(a.specularColorMap),
      alphaMap: !!a.alphaMap,
      alphaTest: A,
      gradientMap: !!a.gradientMap,
      sheen: a.sheen > 0,
      sheenColorMap: !!a.sheenColorMap,
      sheenColorMapEncoding: v(a.sheenColorMap),
      sheenRoughnessMap: !!a.sheenRoughnessMap,
      transmission: a.transmission > 0,
      transmissionMap: !!a.transmissionMap,
      thicknessMap: !!a.thicknessMap,
      combine: a.combine,
      vertexTangents:
        !!a.normalMap && !!y.geometry && !!y.geometry.attributes.tangent,
      vertexColors: a.vertexColors,
      vertexAlphas:
        !0 === a.vertexColors &&
        !!y.geometry &&
        !!y.geometry.attributes.color &&
        y.geometry.attributes.color.itemSize === 4,
      vertexUvs:
        !!a.map ||
        !!a.bumpMap ||
        !!a.normalMap ||
        !!a.specularMap ||
        !!a.alphaMap ||
        !!a.emissiveMap ||
        !!a.roughnessMap ||
        !!a.metalnessMap ||
        !!a.clearcoatMap ||
        !!a.clearcoatRoughnessMap ||
        !!a.clearcoatNormalMap ||
        !!a.displacementMap ||
        !!a.transmissionMap ||
        !!a.thicknessMap ||
        !!a.specularIntensityMap ||
        !!a.specularColorMap ||
        !!a.sheenColorMap ||
        !!a.sheenRoughnessMap,
      uvsVertexOnly:
        !(
          a.map ||
          a.bumpMap ||
          a.normalMap ||
          a.specularMap ||
          a.alphaMap ||
          a.emissiveMap ||
          a.roughnessMap ||
          a.metalnessMap ||
          a.clearcoatNormalMap ||
          a.transmission > 0 ||
          a.transmissionMap ||
          a.thicknessMap ||
          a.specularIntensityMap ||
          a.specularColorMap ||
          a.sheen > 0 ||
          a.sheenColorMap ||
          a.sheenRoughnessMap
        ) && !!a.displacementMap,
      fog: !!b,
      useFog: a.fog,
      fogExp2: b && b.isFogExp2,
      flatShading: !!a.flatShading,
      sizeAttenuation: a.sizeAttenuation,
      logarithmicDepthBuffer: d,
      skinning: !0 === y.isSkinnedMesh && w > 0,
      maxBones: w,
      useVertexTexture: f,
      morphTargets: !!y.geometry && !!y.geometry.morphAttributes.position,
      morphNormals: !!y.geometry && !!y.geometry.morphAttributes.normal,
      morphTargetsCount:
        !y.geometry || !y.geometry.morphAttributes.position
          ? 0
          : y.geometry.morphAttributes.position.length,
      numDirLights: s.directional.length,
      numPointLights: s.point.length,
      numSpotLights: s.spot.length,
      numRectAreaLights: s.rectArea.length,
      numHemiLights: s.hemi.length,
      numDirLightShadows: s.directionalShadowMap.length,
      numPointLightShadows: s.pointShadowMap.length,
      numSpotLightShadows: s.spotShadowMap.length,
      numClippingPlanes: o.numPlanes,
      numClipIntersection: o.numIntersection,
      format: a.format,
      dithering: a.dithering,
      shadowMapEnabled: e.shadowMap.enabled && l.length > 0,
      shadowMapType: e.shadowMap.type,
      toneMapping: a.toneMapped ? e.toneMapping : Io,
      physicallyCorrectLights: e.physicallyCorrectLights,
      premultipliedAlpha: a.premultipliedAlpha,
      doubleSided: a.side === eo,
      flipSided: a.side === $a,
      depthPacking: a.depthPacking !== void 0 && a.depthPacking,
      index0AttributeName: a.index0AttributeName,
      extensionDerivatives: a.extensions && a.extensions.derivatives,
      extensionFragDepth: a.extensions && a.extensions.fragDepth,
      extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
      extensionShaderTextureLOD: a.extensions && a.extensions.shaderTextureLOD,
      rendererExtensionFragDepth: u || r.has(`EXT_frag_depth`),
      rendererExtensionDrawBuffers: u || r.has(`WEBGL_draw_buffers`),
      rendererExtensionShaderTextureLod: u || r.has(`EXT_shader_texture_lod`),
      customProgramCacheKey: a.customProgramCacheKey(),
    };
  }
  function b(t) {
    let n = [];
    if (
      (t.shaderID
        ? n.push(t.shaderID)
        : (n.push(t.customVertexShaderID), n.push(t.customFragmentShaderID)),
      t.defines !== void 0)
    )
      for (let e in t.defines) n.push(e), n.push(t.defines[e]);
    return (
      !1 === t.isRawShaderMaterial &&
        (x(n, t), S(n, t), n.push(e.outputEncoding)),
      n.push(t.customProgramCacheKey),
      n.join()
    );
  }
  function x(e, t) {
    e.push(t.precision),
      e.push(t.outputEncoding),
      e.push(t.mapEncoding),
      e.push(t.matcapEncoding),
      e.push(t.envMapMode),
      e.push(t.envMapEncoding),
      e.push(t.lightMapEncoding),
      e.push(t.emissiveMapEncoding),
      e.push(t.combine),
      e.push(t.vertexUvs),
      e.push(t.fogExp2),
      e.push(t.sizeAttenuation),
      e.push(t.maxBones),
      e.push(t.morphTargetsCount),
      e.push(t.numDirLights),
      e.push(t.numPointLights),
      e.push(t.numSpotLights),
      e.push(t.numHemiLights),
      e.push(t.numRectAreaLights),
      e.push(t.numDirLightShadows),
      e.push(t.numPointLightShadows),
      e.push(t.numSpotLightShadows),
      e.push(t.shadowMapType),
      e.push(t.toneMapping),
      e.push(t.numClippingPlanes),
      e.push(t.numClipIntersection),
      e.push(t.format),
      e.push(t.specularColorMapEncoding),
      e.push(t.sheenColorMapEncoding);
  }
  function S(e, t) {
    s.disableAll(),
      t.isWebGL2 && s.enable(0),
      t.supportsVertexTextures && s.enable(1),
      t.instancing && s.enable(2),
      t.instancingColor && s.enable(3),
      t.map && s.enable(4),
      t.matcap && s.enable(5),
      t.envMap && s.enable(6),
      t.envMapCubeUV && s.enable(7),
      t.lightMap && s.enable(8),
      t.aoMap && s.enable(9),
      t.emissiveMap && s.enable(10),
      t.bumpMap && s.enable(11),
      t.normalMap && s.enable(12),
      t.objectSpaceNormalMap && s.enable(13),
      t.tangentSpaceNormalMap && s.enable(14),
      t.clearcoat && s.enable(15),
      t.clearcoatMap && s.enable(16),
      t.clearcoatRoughnessMap && s.enable(17),
      t.clearcoatNormalMap && s.enable(18),
      t.displacementMap && s.enable(19),
      t.specularMap && s.enable(20),
      t.roughnessMap && s.enable(21),
      t.metalnessMap && s.enable(22),
      t.gradientMap && s.enable(23),
      t.alphaMap && s.enable(24),
      t.alphaTest && s.enable(25),
      t.vertexColors && s.enable(26),
      t.vertexAlphas && s.enable(27),
      t.vertexUvs && s.enable(28),
      t.vertexTangents && s.enable(29),
      t.uvsVertexOnly && s.enable(30),
      t.fog && s.enable(31),
      e.push(s.mask),
      s.disableAll(),
      t.useFog && s.enable(0),
      t.flatShading && s.enable(1),
      t.logarithmicDepthBuffer && s.enable(2),
      t.skinning && s.enable(3),
      t.useVertexTexture && s.enable(4),
      t.morphTargets && s.enable(5),
      t.morphNormals && s.enable(6),
      t.premultipliedAlpha && s.enable(7),
      t.shadowMapEnabled && s.enable(8),
      t.physicallyCorrectLights && s.enable(9),
      t.doubleSided && s.enable(10),
      t.flipSided && s.enable(11),
      t.depthPacking && s.enable(12),
      t.dithering && s.enable(13),
      t.specularIntensityMap && s.enable(14),
      t.specularColorMap && s.enable(15),
      t.transmission && s.enable(16),
      t.transmissionMap && s.enable(17),
      t.thicknessMap && s.enable(18),
      t.sheen && s.enable(19),
      t.sheenColorMap && s.enable(20),
      t.sheenRoughnessMap && s.enable(21),
      e.push(s.mask);
  }
  function C(e) {
    let t = g[e.type],
      n;
    if (t) {
      let e = gd[t];
      n = Zu.clone(e.uniforms);
    } else n = e.uniforms;
    return n;
  }
  function w(t, n) {
    let r;
    for (let e = 0, t = l.length; e < t; e++) {
      let t = l[e];
      if (t.cacheKey === n) {
        (r = t), ++r.usedTimes;
        break;
      }
    }
    return r === void 0 && ((r = new Di(e, n, t, a)), l.push(r)), r;
  }
  function T(e) {
    if (--e.usedTimes === 0) {
      let t = l.indexOf(e);
      (l[t] = l[l.length - 1]), l.pop(), e.destroy();
    }
  }
  function E(e) {
    c.remove(e);
  }
  function D() {
    c.dispose();
  }
  return {
    getParameters: y,
    getProgramCacheKey: b,
    getUniforms: C,
    acquireProgram: w,
    releaseProgram: T,
    releaseShaderCache: E,
    programs: l,
    dispose: D,
  };
}
function ki() {
  let e = new WeakMap();
  function t(t) {
    let n = e.get(t);
    return n === void 0 && ((n = {}), e.set(t, n)), n;
  }
  function n(t) {
    e.delete(t);
  }
  function r(t, n, r) {
    e.get(t)[n] = r;
  }
  function i() {
    e = new WeakMap();
  }
  return { get: t, remove: n, update: r, dispose: i };
}
function Ai(e, t) {
  return e.groupOrder === t.groupOrder
    ? e.renderOrder === t.renderOrder
      ? e.material.id === t.material.id
        ? e.z === t.z
          ? e.id - t.id
          : e.z - t.z
        : e.material.id - t.material.id
      : e.renderOrder - t.renderOrder
    : e.groupOrder - t.groupOrder;
}
function ji(e, t) {
  return e.groupOrder === t.groupOrder
    ? e.renderOrder === t.renderOrder
      ? e.z === t.z
        ? e.id - t.id
        : t.z - e.z
      : e.renderOrder - t.renderOrder
    : e.groupOrder - t.groupOrder;
}
function Mi() {
  let e = [],
    t = 0,
    n = [],
    r = [],
    i = [];
  function a() {
    (t = 0), (n.length = 0), (r.length = 0), (i.length = 0);
  }
  function o(n, r, i, a, o, s) {
    let c = e[t];
    return (
      c === void 0
        ? ((c = {
            id: n.id,
            object: n,
            geometry: r,
            material: i,
            groupOrder: a,
            renderOrder: n.renderOrder,
            z: o,
            group: s,
          }),
          (e[t] = c))
        : ((c.id = n.id),
          (c.object = n),
          (c.geometry = r),
          (c.material = i),
          (c.groupOrder = a),
          (c.renderOrder = n.renderOrder),
          (c.z = o),
          (c.group = s)),
      t++,
      c
    );
  }
  function s(e, t, a, s, c, l) {
    let u = o(e, t, a, s, c, l);
    a.transmission > 0
      ? r.push(u)
      : !0 === a.transparent
      ? i.push(u)
      : n.push(u);
  }
  function c(e, t, a, s, c, l) {
    let u = o(e, t, a, s, c, l);
    a.transmission > 0
      ? r.unshift(u)
      : !0 === a.transparent
      ? i.unshift(u)
      : n.unshift(u);
  }
  function l(e, t) {
    n.length > 1 && n.sort(e || Ai),
      r.length > 1 && r.sort(t || ji),
      i.length > 1 && i.sort(t || ji);
  }
  function u() {
    for (let n = t, r = e.length; n < r; n++) {
      let t = e[n];
      if (t.id === null) break;
      (t.id = null),
        (t.object = null),
        (t.geometry = null),
        (t.material = null),
        (t.group = null);
    }
  }
  return {
    opaque: n,
    transmissive: r,
    transparent: i,
    init: a,
    push: s,
    unshift: c,
    finish: u,
    sort: l,
  };
}
function Ni() {
  let e = new WeakMap();
  function t(t, n) {
    let r;
    return (
      !1 === e.has(t)
        ? ((r = new Mi()), e.set(t, [r]))
        : n >= e.get(t).length
        ? ((r = new Mi()), e.get(t).push(r))
        : (r = e.get(t)[n]),
      r
    );
  }
  function n() {
    e = new WeakMap();
  }
  return { get: t, dispose: n };
}
function Pi() {
  let e = {};
  return {
    get: function (t) {
      if (e[t.id] !== void 0) return e[t.id];
      let n;
      switch (t.type) {
        case `DirectionalLight`:
          n = { direction: new J(), color: new X() };
          break;
        case `SpotLight`:
          n = {
            position: new J(),
            direction: new J(),
            color: new X(),
            distance: 0,
            coneCos: 0,
            penumbraCos: 0,
            decay: 0,
          };
          break;
        case `PointLight`:
          n = { position: new J(), color: new X(), distance: 0, decay: 0 };
          break;
        case `HemisphereLight`:
          n = { direction: new J(), skyColor: new X(), groundColor: new X() };
          break;
        case `RectAreaLight`:
          n = {
            color: new X(),
            position: new J(),
            halfWidth: new J(),
            halfHeight: new J(),
          };
          break;
      }
      return (e[t.id] = n), n;
    },
  };
}
function Fi() {
  let e = {};
  return {
    get: function (t) {
      if (e[t.id] !== void 0) return e[t.id];
      let n;
      switch (t.type) {
        case `DirectionalLight`:
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new q(),
          };
          break;
        case `SpotLight`:
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new q(),
          };
          break;
        case `PointLight`:
          n = {
            shadowBias: 0,
            shadowNormalBias: 0,
            shadowRadius: 1,
            shadowMapSize: new q(),
            shadowCameraNear: 1,
            shadowCameraFar: 1e3,
          };
          break;
      }
      return (e[t.id] = n), n;
    },
  };
}
function Ii(e, t) {
  return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0);
}
function Li(e, t) {
  let n = new Pi(),
    r = Fi(),
    i = {
      version: 0,
      hash: {
        directionalLength: -1,
        pointLength: -1,
        spotLength: -1,
        rectAreaLength: -1,
        hemiLength: -1,
        numDirectionalShadows: -1,
        numPointShadows: -1,
        numSpotShadows: -1,
      },
      ambient: [0, 0, 0],
      probe: [],
      directional: [],
      directionalShadow: [],
      directionalShadowMap: [],
      directionalShadowMatrix: [],
      spot: [],
      spotShadow: [],
      spotShadowMap: [],
      spotShadowMatrix: [],
      rectArea: [],
      rectAreaLTC1: null,
      rectAreaLTC2: null,
      point: [],
      pointShadow: [],
      pointShadowMap: [],
      pointShadowMatrix: [],
      hemi: [],
    };
  for (let e = 0; e < 9; e++) i.probe.push(new J());
  let a = new J(),
    o = new Y(),
    s = new Y();
  function c(a, o) {
    let s = 0,
      c = 0,
      l = 0;
    for (let e = 0; e < 9; e++) i.probe[e].set(0, 0, 0);
    let u = 0,
      d = 0,
      f = 0,
      p = 0,
      m = 0,
      h = 0,
      g = 0,
      _ = 0;
    a.sort(Ii);
    let v = !0 === o ? 1 : Math.PI;
    for (let e = 0, t = a.length; e < t; e++) {
      let t = a[e],
        o = t.color,
        y = t.intensity,
        b = t.distance,
        x = t.shadow && t.shadow.map ? t.shadow.map.texture : null;
      if (t.isAmbientLight)
        (s += o.r * y * v), (c += o.g * y * v), (l += o.b * y * v);
      else if (t.isLightProbe)
        for (let e = 0; e < 9; e++)
          i.probe[e].addScaledVector(t.sh.coefficients[e], y);
      else if (t.isDirectionalLight) {
        let e = n.get(t);
        if (
          (e.color.copy(t.color).multiplyScalar(t.intensity * v), t.castShadow)
        ) {
          let e = t.shadow,
            n = r.get(t);
          (n.shadowBias = e.bias),
            (n.shadowNormalBias = e.normalBias),
            (n.shadowRadius = e.radius),
            (n.shadowMapSize = e.mapSize),
            (i.directionalShadow[u] = n),
            (i.directionalShadowMap[u] = x),
            (i.directionalShadowMatrix[u] = t.shadow.matrix),
            h++;
        }
        (i.directional[u] = e), u++;
      } else if (t.isSpotLight) {
        let e = n.get(t);
        if (
          (e.position.setFromMatrixPosition(t.matrixWorld),
          e.color.copy(o).multiplyScalar(y * v),
          (e.distance = b),
          (e.coneCos = Math.cos(t.angle)),
          (e.penumbraCos = Math.cos(t.angle * (1 - t.penumbra))),
          (e.decay = t.decay),
          t.castShadow)
        ) {
          let e = t.shadow,
            n = r.get(t);
          (n.shadowBias = e.bias),
            (n.shadowNormalBias = e.normalBias),
            (n.shadowRadius = e.radius),
            (n.shadowMapSize = e.mapSize),
            (i.spotShadow[f] = n),
            (i.spotShadowMap[f] = x),
            (i.spotShadowMatrix[f] = t.shadow.matrix),
            _++;
        }
        (i.spot[f] = e), f++;
      } else if (t.isRectAreaLight) {
        let e = n.get(t);
        e.color.copy(o).multiplyScalar(y),
          e.halfWidth.set(0.5 * t.width, 0, 0),
          e.halfHeight.set(0, 0.5 * t.height, 0),
          (i.rectArea[p] = e),
          p++;
      } else if (t.isPointLight) {
        let e = n.get(t);
        if (
          (e.color.copy(t.color).multiplyScalar(t.intensity * v),
          (e.distance = t.distance),
          (e.decay = t.decay),
          t.castShadow)
        ) {
          let e = t.shadow,
            n = r.get(t);
          (n.shadowBias = e.bias),
            (n.shadowNormalBias = e.normalBias),
            (n.shadowRadius = e.radius),
            (n.shadowMapSize = e.mapSize),
            (n.shadowCameraNear = e.camera.near),
            (n.shadowCameraFar = e.camera.far),
            (i.pointShadow[d] = n),
            (i.pointShadowMap[d] = x),
            (i.pointShadowMatrix[d] = t.shadow.matrix),
            g++;
        }
        (i.point[d] = e), d++;
      } else if (t.isHemisphereLight) {
        let e = n.get(t);
        e.skyColor.copy(t.color).multiplyScalar(y * v),
          e.groundColor.copy(t.groundColor).multiplyScalar(y * v),
          (i.hemi[m] = e),
          m++;
      }
    }
    p > 0 &&
      (t.isWebGL2 || !0 === e.has(`OES_texture_float_linear`)
        ? ((i.rectAreaLTC1 = $.LTC_FLOAT_1), (i.rectAreaLTC2 = $.LTC_FLOAT_2))
        : !0 === e.has(`OES_texture_half_float_linear`)
        ? ((i.rectAreaLTC1 = $.LTC_HALF_1), (i.rectAreaLTC2 = $.LTC_HALF_2))
        : console.error(
            `THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.`
          )),
      (i.ambient[0] = s),
      (i.ambient[1] = c),
      (i.ambient[2] = l);
    let y = i.hash;
    (y.directionalLength !== u ||
      y.pointLength !== d ||
      y.spotLength !== f ||
      y.rectAreaLength !== p ||
      y.hemiLength !== m ||
      y.numDirectionalShadows !== h ||
      y.numPointShadows !== g ||
      y.numSpotShadows !== _) &&
      ((i.directional.length = u),
      (i.spot.length = f),
      (i.rectArea.length = p),
      (i.point.length = d),
      (i.hemi.length = m),
      (i.directionalShadow.length = h),
      (i.directionalShadowMap.length = h),
      (i.pointShadow.length = g),
      (i.pointShadowMap.length = g),
      (i.spotShadow.length = _),
      (i.spotShadowMap.length = _),
      (i.directionalShadowMatrix.length = h),
      (i.pointShadowMatrix.length = g),
      (i.spotShadowMatrix.length = _),
      (y.directionalLength = u),
      (y.pointLength = d),
      (y.spotLength = f),
      (y.rectAreaLength = p),
      (y.hemiLength = m),
      (y.numDirectionalShadows = h),
      (y.numPointShadows = g),
      (y.numSpotShadows = _),
      (i.version = tf++));
  }
  function l(e, t) {
    let n = 0,
      r = 0,
      c = 0,
      l = 0,
      u = 0,
      d = t.matrixWorldInverse;
    for (let t = 0, f = e.length; t < f; t++) {
      let f = e[t];
      if (f.isDirectionalLight) {
        let e = i.directional[n];
        e.direction.setFromMatrixPosition(f.matrixWorld),
          a.setFromMatrixPosition(f.target.matrixWorld),
          e.direction.sub(a),
          e.direction.transformDirection(d),
          n++;
      } else if (f.isSpotLight) {
        let e = i.spot[c];
        e.position.setFromMatrixPosition(f.matrixWorld),
          e.position.applyMatrix4(d),
          e.direction.setFromMatrixPosition(f.matrixWorld),
          a.setFromMatrixPosition(f.target.matrixWorld),
          e.direction.sub(a),
          e.direction.transformDirection(d),
          c++;
      } else if (f.isRectAreaLight) {
        let e = i.rectArea[l];
        e.position.setFromMatrixPosition(f.matrixWorld),
          e.position.applyMatrix4(d),
          s.identity(),
          o.copy(f.matrixWorld),
          o.premultiply(d),
          s.extractRotation(o),
          e.halfWidth.set(0.5 * f.width, 0, 0),
          e.halfHeight.set(0, 0.5 * f.height, 0),
          e.halfWidth.applyMatrix4(s),
          e.halfHeight.applyMatrix4(s),
          l++;
      } else if (f.isPointLight) {
        let e = i.point[r];
        e.position.setFromMatrixPosition(f.matrixWorld),
          e.position.applyMatrix4(d),
          r++;
      } else if (f.isHemisphereLight) {
        let e = i.hemi[u];
        e.direction.setFromMatrixPosition(f.matrixWorld),
          e.direction.transformDirection(d),
          e.direction.normalize(),
          u++;
      }
    }
  }
  return { setup: c, setupView: l, state: i };
}
function Ri(e, t) {
  let n = new Li(e, t),
    r = [],
    i = [];
  function a() {
    (r.length = 0), (i.length = 0);
  }
  function o(e) {
    r.push(e);
  }
  function s(e) {
    i.push(e);
  }
  function c(e) {
    n.setup(r, e);
  }
  function l(e) {
    n.setupView(r, e);
  }
  return {
    init: a,
    state: { lightsArray: r, shadowsArray: i, lights: n },
    setupLights: c,
    setupLightsView: l,
    pushLight: o,
    pushShadow: s,
  };
}
function zi(e, t) {
  let n = new WeakMap();
  function r(r, i = 0) {
    let a;
    return (
      !1 === n.has(r)
        ? ((a = new Ri(e, t)), n.set(r, [a]))
        : i >= n.get(r).length
        ? ((a = new Ri(e, t)), n.get(r).push(a))
        : (a = n.get(r)[i]),
      a
    );
  }
  function i() {
    n = new WeakMap();
  }
  return { get: r, dispose: i };
}
function Bi(e, t, n) {
  let r = new md(),
    i = new q(),
    a = new q(),
    o = new Xc(),
    s = new nf({ depthPacking: Mc }),
    c = new rf(),
    l = {},
    u = n.maxTextureSize,
    d = { 0: $a, 1: Qa, 2: eo },
    f = new ed({
      defines: { VSM_SAMPLES: 8 },
      uniforms: {
        shadow_pass: { value: null },
        resolution: { value: new q() },
        radius: { value: 4 },
      },
      vertexShader: af,
      fragmentShader: sf,
    }),
    p = f.clone();
  p.defines.HORIZONTAL_PASS = 1;
  let m = new ju();
  m.setAttribute(
    `position`,
    new bu(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
  );
  let h = new Yu(m, f),
    g = this;
  (this.enabled = !1),
    (this.autoUpdate = !0),
    (this.needsUpdate = !1),
    (this.type = Ya),
    (this.render = function (t, n, s) {
      if (
        !1 === g.enabled ||
        (!1 === g.autoUpdate && !1 === g.needsUpdate) ||
        t.length === 0
      )
        return;
      let c = e.getRenderTarget(),
        l = e.getActiveCubeFace(),
        d = e.getActiveMipmapLevel(),
        f = e.state;
      f.setBlending(no),
        f.buffers.color.setClear(1, 1, 1, 1),
        f.buffers.depth.setTest(!0),
        f.setScissorTest(!1);
      for (let c = 0, l = t.length; c < l; c++) {
        let l = t[c],
          d = l.shadow;
        if (d === void 0) {
          console.warn(`THREE.WebGLShadowMap:`, l, `has no shadow.`);
          continue;
        }
        if (!1 === d.autoUpdate && !1 === d.needsUpdate) continue;
        i.copy(d.mapSize);
        let p = d.getFrameExtents();
        if (
          (i.multiply(p),
          a.copy(d.mapSize),
          (i.x > u || i.y > u) &&
            (i.x > u &&
              ((a.x = Math.floor(u / p.x)),
              (i.x = a.x * p.x),
              (d.mapSize.x = a.x)),
            i.y > u &&
              ((a.y = Math.floor(u / p.y)),
              (i.y = a.y * p.y),
              (d.mapSize.y = a.y))),
          d.map === null && !d.isPointLightShadow && this.type === Za)
        ) {
          let e = { minFilter: ts, magFilter: ts, format: bs };
          (d.map = new Zc(i.x, i.y, e)),
            (d.map.texture.name = l.name + `.shadowMap`),
            (d.mapPass = new Zc(i.x, i.y, e)),
            d.camera.updateProjectionMatrix();
        }
        if (d.map === null) {
          let e = { minFilter: Qo, magFilter: Qo, format: bs };
          (d.map = new Zc(i.x, i.y, e)),
            (d.map.texture.name = l.name + `.shadowMap`),
            d.camera.updateProjectionMatrix();
        }
        e.setRenderTarget(d.map), e.clear();
        let m = d.getViewportCount();
        for (let e = 0; e < m; e++) {
          let t = d.getViewport(e);
          o.set(a.x * t.x, a.y * t.y, a.x * t.z, a.y * t.w),
            f.viewport(o),
            d.updateMatrices(l, e),
            (r = d.getFrustum()),
            y(n, s, d.camera, l, this.type);
        }
        d.isPointLightShadow || this.type !== Za || _(d, s),
          (d.needsUpdate = !1);
      }
      (g.needsUpdate = !1), e.setRenderTarget(c, l, d);
    });
  function _(n, r) {
    let i = t.update(h);
    f.defines.VSM_SAMPLES !== n.blurSamples &&
      ((f.defines.VSM_SAMPLES = n.blurSamples),
      (p.defines.VSM_SAMPLES = n.blurSamples),
      (f.needsUpdate = !0),
      (p.needsUpdate = !0)),
      (f.uniforms.shadow_pass.value = n.map.texture),
      (f.uniforms.resolution.value = n.mapSize),
      (f.uniforms.radius.value = n.radius),
      e.setRenderTarget(n.mapPass),
      e.clear(),
      e.renderBufferDirect(r, null, i, f, h, null),
      (p.uniforms.shadow_pass.value = n.mapPass.texture),
      (p.uniforms.resolution.value = n.mapSize),
      (p.uniforms.radius.value = n.radius),
      e.setRenderTarget(n.map),
      e.clear(),
      e.renderBufferDirect(r, null, i, p, h, null);
  }
  function v(t, n, r, i, a, o, u) {
    let f = null,
      p =
        !0 === i.isPointLight
          ? t.customDistanceMaterial
          : t.customDepthMaterial;
    if (
      ((f = p === void 0 ? (!0 === i.isPointLight ? c : s) : p),
      (e.localClippingEnabled &&
        !0 === r.clipShadows &&
        r.clippingPlanes.length !== 0) ||
        (r.displacementMap && r.displacementScale !== 0) ||
        (r.alphaMap && r.alphaTest > 0))
    ) {
      let e = f.uuid,
        t = r.uuid,
        n = l[e];
      n === void 0 && ((n = {}), (l[e] = n));
      let i = n[t];
      i === void 0 && ((i = f.clone()), (n[t] = i)), (f = i);
    }
    return (
      (f.visible = r.visible),
      (f.wireframe = r.wireframe),
      (f.side =
        u === Za
          ? r.shadowSide === null
            ? r.side
            : r.shadowSide
          : r.shadowSide === null
          ? d[r.side]
          : r.shadowSide),
      (f.alphaMap = r.alphaMap),
      (f.alphaTest = r.alphaTest),
      (f.clipShadows = r.clipShadows),
      (f.clippingPlanes = r.clippingPlanes),
      (f.clipIntersection = r.clipIntersection),
      (f.displacementMap = r.displacementMap),
      (f.displacementScale = r.displacementScale),
      (f.displacementBias = r.displacementBias),
      (f.wireframeLinewidth = r.wireframeLinewidth),
      (f.linewidth = r.linewidth),
      !0 === i.isPointLight &&
        !0 === f.isMeshDistanceMaterial &&
        (f.referencePosition.setFromMatrixPosition(i.matrixWorld),
        (f.nearDistance = a),
        (f.farDistance = o)),
      f
    );
  }
  function y(n, i, a, o, s) {
    if (!1 === n.visible) return;
    if (
      n.layers.test(i.layers) &&
      (n.isMesh || n.isLine || n.isPoints) &&
      (n.castShadow || (n.receiveShadow && s === Za)) &&
      (!n.frustumCulled || r.intersectsObject(n))
    ) {
      n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
      let r = t.update(n),
        i = n.material;
      if (Array.isArray(i)) {
        let t = r.groups;
        for (let c = 0, l = t.length; c < l; c++) {
          let l = t[c],
            u = i[l.materialIndex];
          if (u && u.visible) {
            let t = v(n, r, u, o, a.near, a.far, s);
            e.renderBufferDirect(a, null, r, t, n, l);
          }
        }
      } else if (i.visible) {
        let t = v(n, r, i, o, a.near, a.far, s);
        e.renderBufferDirect(a, null, r, t, n, null);
      }
    }
    let c = n.children;
    for (let e = 0, t = c.length; e < t; e++) y(c[e], i, a, o, s);
  }
}
function Vi(e, t, n) {
  let r = n.isWebGL2;
  function i() {
    let t = !1,
      n = new Xc(),
      r = null,
      i = new Xc(0, 0, 0, 0);
    return {
      setMask: function (n) {
        r !== n && !t && (e.colorMask(n, n, n, n), (r = n));
      },
      setLocked: function (e) {
        t = e;
      },
      setClear: function (t, r, a, o, s) {
        !0 === s && ((t *= o), (r *= o), (a *= o)),
          n.set(t, r, a, o),
          !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n));
      },
      reset: function () {
        (t = !1), (r = null), i.set(-1, 0, 0, 0);
      },
    };
  }
  function a() {
    let t = !1,
      n = null,
      r = null,
      i = null;
    return {
      setTest: function (e) {
        e ? L(2929) : ne(2929);
      },
      setMask: function (r) {
        n !== r && !t && (e.depthMask(r), (n = r));
      },
      setFunc: function (t) {
        if (r !== t) {
          if (t)
            switch (t) {
              case To:
                e.depthFunc(512);
                break;
              case Eo:
                e.depthFunc(519);
                break;
              case Do:
                e.depthFunc(513);
                break;
              case Oo:
                e.depthFunc(515);
                break;
              case ko:
                e.depthFunc(514);
                break;
              case Ao:
                e.depthFunc(518);
                break;
              case jo:
                e.depthFunc(516);
                break;
              case Mo:
                e.depthFunc(517);
                break;
              default:
                e.depthFunc(515);
            }
          else e.depthFunc(515);
          r = t;
        }
      },
      setLocked: function (e) {
        t = e;
      },
      setClear: function (t) {
        i !== t && (e.clearDepth(t), (i = t));
      },
      reset: function () {
        (t = !1), (n = null), (r = null), (i = null);
      },
    };
  }
  function o() {
    let t = !1,
      n = null,
      r = null,
      i = null,
      a = null,
      o = null,
      s = null,
      c = null,
      l = null;
    return {
      setTest: function (e) {
        t || (e ? L(2960) : ne(2960));
      },
      setMask: function (r) {
        n !== r && !t && (e.stencilMask(r), (n = r));
      },
      setFunc: function (t, n, o) {
        (r !== t || i !== n || a !== o) &&
          (e.stencilFunc(t, n, o), (r = t), (i = n), (a = o));
      },
      setOp: function (t, n, r) {
        (o !== t || s !== n || c !== r) &&
          (e.stencilOp(t, n, r), (o = t), (s = n), (c = r));
      },
      setLocked: function (e) {
        t = e;
      },
      setClear: function (t) {
        l !== t && (e.clearStencil(t), (l = t));
      },
      reset: function () {
        (t = !1),
          (n = null),
          (r = null),
          (i = null),
          (a = null),
          (o = null),
          (s = null),
          (c = null),
          (l = null);
      },
    };
  }
  let s = new i(),
    c = new a(),
    l = new o(),
    u = {},
    d = {},
    f = null,
    p = !1,
    m = null,
    h = null,
    g = null,
    _ = null,
    v = null,
    y = null,
    b = null,
    x = !1,
    S = null,
    C = null,
    w = null,
    T = null,
    E = null,
    D = e.getParameter(35661),
    O = !1,
    k = 0,
    A = e.getParameter(7938);
  A.indexOf(`WebGL`) === -1
    ? A.indexOf(`OpenGL ES`) !== -1 &&
      ((k = parseFloat(/^OpenGL ES (\d)/.exec(A)[1])), (O = k >= 2))
    : ((k = parseFloat(/^WebGL (\d)/.exec(A)[1])), (O = k >= 1));
  let j = null,
    M = {},
    N = e.getParameter(3088),
    P = e.getParameter(2978),
    F = new Xc().fromArray(N),
    ee = new Xc().fromArray(P);
  function te(t, n, r) {
    let i = new Uint8Array(4),
      a = e.createTexture();
    e.bindTexture(t, a),
      e.texParameteri(t, 10241, 9728),
      e.texParameteri(t, 10240, 9728);
    for (let t = 0; t < r; t++)
      e.texImage2D(n + t, 0, 6408, 1, 1, 0, 6408, 5121, i);
    return a;
  }
  let I = {};
  (I[3553] = te(3553, 3553, 1)),
    (I[34067] = te(34067, 34069, 6)),
    s.setClear(0, 0, 0, 1),
    c.setClear(1),
    l.setClear(0),
    L(2929),
    c.setFunc(Oo),
    H(!1),
    ae(qa),
    L(2884),
    B(no);
  function L(t) {
    !0 !== u[t] && (e.enable(t), (u[t] = !0));
  }
  function ne(t) {
    !1 !== u[t] && (e.disable(t), (u[t] = !1));
  }
  function re(t, n) {
    return d[t] === n
      ? !1
      : (e.bindFramebuffer(t, n),
        (d[t] = n),
        r && (t === 36009 && (d[36160] = n), t === 36160 && (d[36009] = n)),
        !0);
  }
  function R(t) {
    return f === t ? !1 : (e.useProgram(t), (f = t), !0);
  }
  let z = { [co]: 32774, [lo]: 32778, [uo]: 32779 };
  if (r) (z[fo] = 32775), (z[po] = 32776);
  else {
    let e = t.get(`EXT_blend_minmax`);
    e !== null && ((z[fo] = e.MIN_EXT), (z[po] = e.MAX_EXT));
  }
  let ie = {
    [mo]: 0,
    [ho]: 1,
    [go]: 768,
    [vo]: 770,
    [wo]: 776,
    [So]: 774,
    [bo]: 772,
    [_o]: 769,
    [yo]: 771,
    [Co]: 775,
    [xo]: 773,
  };
  function B(t, n, r, i, a, o, s, c) {
    if (t !== no) {
      if ((!1 === p && (L(3042), (p = !0)), t === so))
        (a ||= n),
          (o ||= r),
          (s ||= i),
          (n !== h || a !== v) &&
            (e.blendEquationSeparate(z[n], z[a]), (h = n), (v = a)),
          (r !== g || i !== _ || o !== y || s !== b) &&
            (e.blendFuncSeparate(ie[r], ie[i], ie[o], ie[s]),
            (g = r),
            (_ = i),
            (y = o),
            (b = s)),
          (m = t),
          (x = null);
      else if (t !== m || c !== x) {
        if (
          ((h !== co || v !== co) &&
            (e.blendEquation(32774), (h = co), (v = co)),
          c)
        )
          switch (t) {
            case ro:
              e.blendFuncSeparate(1, 771, 1, 771);
              break;
            case io:
              e.blendFunc(1, 1);
              break;
            case ao:
              e.blendFuncSeparate(0, 0, 769, 771);
              break;
            case oo:
              e.blendFuncSeparate(0, 768, 0, 770);
              break;
            default:
              console.error(`THREE.WebGLState: Invalid blending: `, t);
              break;
          }
        else
          switch (t) {
            case ro:
              e.blendFuncSeparate(770, 771, 1, 771);
              break;
            case io:
              e.blendFunc(770, 1);
              break;
            case ao:
              e.blendFunc(0, 769);
              break;
            case oo:
              e.blendFunc(0, 768);
              break;
            default:
              console.error(`THREE.WebGLState: Invalid blending: `, t);
              break;
          }
        (g = null), (_ = null), (y = null), (b = null), (m = t), (x = c);
      }
    } else !0 === p && (ne(3042), (p = !1));
  }
  function V(e, t) {
    e.side === eo ? ne(2884) : L(2884);
    let n = e.side === $a;
    t && (n = !n),
      H(n),
      e.blending === ro && !1 === e.transparent
        ? B(no)
        : B(
            e.blending,
            e.blendEquation,
            e.blendSrc,
            e.blendDst,
            e.blendEquationAlpha,
            e.blendSrcAlpha,
            e.blendDstAlpha,
            e.premultipliedAlpha
          ),
      c.setFunc(e.depthFunc),
      c.setTest(e.depthTest),
      c.setMask(e.depthWrite),
      s.setMask(e.colorWrite);
    let r = e.stencilWrite;
    l.setTest(r),
      r &&
        (l.setMask(e.stencilWriteMask),
        l.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
        l.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
      W(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits),
      !0 === e.alphaToCoverage ? L(32926) : ne(32926);
  }
  function H(t) {
    S !== t && (t ? e.frontFace(2304) : e.frontFace(2305), (S = t));
  }
  function ae(t) {
    t === Ka
      ? ne(2884)
      : (L(2884),
        t !== C &&
          (t === qa
            ? e.cullFace(1029)
            : t === Ja
            ? e.cullFace(1028)
            : e.cullFace(1032))),
      (C = t);
  }
  function U(t) {
    t !== w && (O && e.lineWidth(t), (w = t));
  }
  function W(t, n, r) {
    t
      ? (L(32823),
        (T !== n || E !== r) && (e.polygonOffset(n, r), (T = n), (E = r)))
      : ne(32823);
  }
  function G(e) {
    e ? L(3089) : ne(3089);
  }
  function oe(t) {
    t === void 0 && (t = 33984 + D - 1),
      j !== t && (e.activeTexture(t), (j = t));
  }
  function se(t, n) {
    j === null && oe();
    let r = M[j];
    r === void 0 && ((r = { type: void 0, texture: void 0 }), (M[j] = r)),
      (r.type !== t || r.texture !== n) &&
        (e.bindTexture(t, n || I[t]), (r.type = t), (r.texture = n));
  }
  function ce() {
    let t = M[j];
    t !== void 0 &&
      t.type !== void 0 &&
      (e.bindTexture(t.type, null), (t.type = void 0), (t.texture = void 0));
  }
  function le() {
    try {
      e.compressedTexImage2D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function ue() {
    try {
      e.texSubImage2D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function de() {
    try {
      e.texSubImage3D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function fe() {
    try {
      e.compressedTexSubImage2D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function pe() {
    try {
      e.texStorage2D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function me() {
    try {
      e.texStorage3D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function he() {
    try {
      e.texImage2D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function ge() {
    try {
      e.texImage3D.apply(e, arguments);
    } catch (e) {
      console.error(`THREE.WebGLState:`, e);
    }
  }
  function _e(t) {
    !1 === F.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), F.copy(t));
  }
  function ve(t) {
    !1 === ee.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), ee.copy(t));
  }
  function K() {
    e.disable(3042),
      e.disable(2884),
      e.disable(2929),
      e.disable(32823),
      e.disable(3089),
      e.disable(2960),
      e.disable(32926),
      e.blendEquation(32774),
      e.blendFunc(1, 0),
      e.blendFuncSeparate(1, 0, 1, 0),
      e.colorMask(!0, !0, !0, !0),
      e.clearColor(0, 0, 0, 0),
      e.depthMask(!0),
      e.depthFunc(513),
      e.clearDepth(1),
      e.stencilMask(4294967295),
      e.stencilFunc(519, 0, 4294967295),
      e.stencilOp(7680, 7680, 7680),
      e.clearStencil(0),
      e.cullFace(1029),
      e.frontFace(2305),
      e.polygonOffset(0, 0),
      e.activeTexture(33984),
      e.bindFramebuffer(36160, null),
      !0 === r &&
        (e.bindFramebuffer(36009, null), e.bindFramebuffer(36008, null)),
      e.useProgram(null),
      e.lineWidth(1),
      e.scissor(0, 0, e.canvas.width, e.canvas.height),
      e.viewport(0, 0, e.canvas.width, e.canvas.height),
      (u = {}),
      (j = null),
      (M = {}),
      (d = {}),
      (f = null),
      (p = !1),
      (m = null),
      (h = null),
      (g = null),
      (_ = null),
      (v = null),
      (y = null),
      (b = null),
      (x = !1),
      (S = null),
      (C = null),
      (w = null),
      (T = null),
      (E = null),
      F.set(0, 0, e.canvas.width, e.canvas.height),
      ee.set(0, 0, e.canvas.width, e.canvas.height),
      s.reset(),
      c.reset(),
      l.reset();
  }
  return {
    buffers: { color: s, depth: c, stencil: l },
    enable: L,
    disable: ne,
    bindFramebuffer: re,
    useProgram: R,
    setBlending: B,
    setMaterial: V,
    setFlipSided: H,
    setCullFace: ae,
    setLineWidth: U,
    setPolygonOffset: W,
    setScissorTest: G,
    activeTexture: oe,
    bindTexture: se,
    unbindTexture: ce,
    compressedTexImage2D: le,
    texImage2D: he,
    texImage3D: ge,
    texStorage2D: pe,
    texStorage3D: me,
    texSubImage2D: ue,
    texSubImage3D: de,
    compressedTexSubImage2D: fe,
    scissor: _e,
    viewport: ve,
    reset: K,
  };
}
function Hi(e, t, n, r, i, a, o) {
  let s = i.isWebGL2,
    c = i.maxTextures,
    l = i.maxCubemapSize,
    u = i.maxTextureSize,
    d = i.maxSamples,
    f = t.has(`WEBGL_multisampled_render_to_texture`)
      ? t.get(`WEBGL_multisampled_render_to_texture`)
      : void 0,
    p = new WeakMap(),
    m,
    h = !1;
  try {
    h =
      typeof OffscreenCanvas < `u` &&
      new OffscreenCanvas(1, 1).getContext(`2d`) !== null;
  } catch {}
  function g(e, t) {
    return h ? new OffscreenCanvas(e, t) : En(`canvas`);
  }
  function _(e, t, n, r) {
    let i = 1;
    if (
      ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)),
      i < 1 || !0 === t)
    ) {
      if (
        (typeof HTMLImageElement < `u` && e instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < `u` && e instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < `u` && e instanceof ImageBitmap)
      ) {
        let r = t ? Cn : Math.floor,
          a = r(i * e.width),
          o = r(i * e.height);
        m === void 0 && (m = g(a, o));
        let s = n ? g(a, o) : m;
        return (
          (s.width = a),
          (s.height = o),
          s.getContext(`2d`).drawImage(e, 0, 0, a, o),
          console.warn(
            `THREE.WebGLRenderer: Texture has been resized from (` +
              e.width +
              `x` +
              e.height +
              `) to (` +
              a +
              `x` +
              o +
              `).`
          ),
          s
        );
      }
      return (
        `data` in e &&
          console.warn(
            `THREE.WebGLRenderer: Image in DataTexture is too big (` +
              e.width +
              `x` +
              e.height +
              `).`
          ),
        e
      );
    }
    return e;
  }
  function v(e) {
    return xn(e.width) && xn(e.height);
  }
  function y(e) {
    return (
      !s &&
      (e.wrapS !== Xo ||
        e.wrapT !== Xo ||
        (e.minFilter !== Qo && e.minFilter !== ts))
    );
  }
  function b(e, t) {
    return e.generateMipmaps && t && e.minFilter !== Qo && e.minFilter !== ts;
  }
  function x(t) {
    e.generateMipmap(t);
  }
  function S(n, r, i, a) {
    if (!1 === s) return r;
    if (n !== null) {
      if (e[n] !== void 0) return e[n];
      console.warn(
        `THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '` +
          n +
          `'`
      );
    }
    let o = r;
    return (
      r === 6403 &&
        (i === 5126 && (o = 33326),
        i === 5131 && (o = 33325),
        i === 5121 && (o = 33321)),
      r === 6407 &&
        (i === 5126 && (o = 34837),
        i === 5131 && (o = 34843),
        i === 5121 && (o = 32849)),
      r === 6408 &&
        (i === 5126 && (o = 34836),
        i === 5131 && (o = 34842),
        i === 5121 && (o = a === Ac ? 35907 : 32856)),
      (o !== 33325 && o !== 33326 && o !== 34842 && o !== 34836) ||
        t.get(`EXT_color_buffer_float`),
      o
    );
  }
  function C(e, t, n) {
    return !0 === b(e, n) ||
      (e.isFramebufferTexture && e.minFilter !== Qo && e.minFilter !== ts)
      ? Math.log2(Math.max(t.width, t.height)) + 1
      : e.mipmaps !== void 0 && e.mipmaps.length > 0
      ? e.mipmaps.length
      : e.isCompressedTexture && Array.isArray(e.image)
      ? t.mipmaps.length
      : 1;
  }
  function w(e) {
    return e === Qo || e === $o || e === es ? 9728 : 9729;
  }
  function T(e) {
    let t = e.target;
    t.removeEventListener(`dispose`, T),
      D(t),
      t.isVideoTexture && p.delete(t),
      o.memory.textures--;
  }
  function E(e) {
    let t = e.target;
    t.removeEventListener(`dispose`, E), O(t);
  }
  function D(t) {
    let n = r.get(t);
    n.__webglInit !== void 0 &&
      (e.deleteTexture(n.__webglTexture), r.remove(t));
  }
  function O(t) {
    let n = t.texture,
      i = r.get(t),
      a = r.get(n);
    if (t) {
      if (
        (a.__webglTexture !== void 0 &&
          (e.deleteTexture(a.__webglTexture), o.memory.textures--),
        t.depthTexture && t.depthTexture.dispose(),
        t.isWebGLCubeRenderTarget)
      )
        for (let t = 0; t < 6; t++)
          e.deleteFramebuffer(i.__webglFramebuffer[t]),
            i.__webglDepthbuffer &&
              e.deleteRenderbuffer(i.__webglDepthbuffer[t]);
      else
        e.deleteFramebuffer(i.__webglFramebuffer),
          i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer),
          i.__webglMultisampledFramebuffer &&
            e.deleteFramebuffer(i.__webglMultisampledFramebuffer),
          i.__webglColorRenderbuffer &&
            e.deleteRenderbuffer(i.__webglColorRenderbuffer),
          i.__webglDepthRenderbuffer &&
            e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
      if (t.isWebGLMultipleRenderTargets)
        for (let t = 0, i = n.length; t < i; t++) {
          let i = r.get(n[t]);
          i.__webglTexture &&
            (e.deleteTexture(i.__webglTexture), o.memory.textures--),
            r.remove(n[t]);
        }
      r.remove(n), r.remove(t);
    }
  }
  let k = 0;
  function A() {
    k = 0;
  }
  function j() {
    let e = k;
    return (
      e >= c &&
        console.warn(
          `THREE.WebGLTextures: Trying to use ` +
            e +
            ` texture units while this GPU supports only ` +
            c
        ),
      (k += 1),
      e
    );
  }
  function M(e, t) {
    let i = r.get(e);
    if (
      (e.isVideoTexture && G(e), e.version > 0 && i.__version !== e.version)
    ) {
      let n = e.image;
      if (n === void 0)
        console.warn(
          `THREE.WebGLRenderer: Texture marked for update but image is undefined`
        );
      else {
        if (!1 !== n.complete) {
          ne(i, e, t);
          return;
        }
        console.warn(
          `THREE.WebGLRenderer: Texture marked for update but image is incomplete`
        );
      }
    }
    n.activeTexture(33984 + t), n.bindTexture(3553, i.__webglTexture);
  }
  function N(e, t) {
    let i = r.get(e);
    e.version > 0 && i.__version !== e.version
      ? ne(i, e, t)
      : (n.activeTexture(33984 + t), n.bindTexture(35866, i.__webglTexture));
  }
  function P(e, t) {
    let i = r.get(e);
    e.version > 0 && i.__version !== e.version
      ? ne(i, e, t)
      : (n.activeTexture(33984 + t), n.bindTexture(32879, i.__webglTexture));
  }
  function F(e, t) {
    let i = r.get(e);
    e.version > 0 && i.__version !== e.version
      ? re(i, e, t)
      : (n.activeTexture(33984 + t), n.bindTexture(34067, i.__webglTexture));
  }
  let ee = { [Yo]: 10497, [Xo]: 33071, [Zo]: 33648 },
    te = {
      [Qo]: 9728,
      [$o]: 9984,
      [es]: 9986,
      [ts]: 9729,
      [ns]: 9985,
      [rs]: 9987,
    };
  function I(n, a, o) {
    if (
      (o
        ? (e.texParameteri(n, 10242, ee[a.wrapS]),
          e.texParameteri(n, 10243, ee[a.wrapT]),
          (n !== 32879 && n !== 35866) ||
            e.texParameteri(n, 32882, ee[a.wrapR]),
          e.texParameteri(n, 10240, te[a.magFilter]),
          e.texParameteri(n, 10241, te[a.minFilter]))
        : (e.texParameteri(n, 10242, 33071),
          e.texParameteri(n, 10243, 33071),
          (n !== 32879 && n !== 35866) || e.texParameteri(n, 32882, 33071),
          (a.wrapS === Xo && a.wrapT === Xo) ||
            console.warn(
              `THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.`
            ),
          e.texParameteri(n, 10240, w(a.magFilter)),
          e.texParameteri(n, 10241, w(a.minFilter)),
          a.minFilter !== Qo &&
            a.minFilter !== ts &&
            console.warn(
              `THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.`
            )),
      !0 === t.has(`EXT_texture_filter_anisotropic`))
    ) {
      let o = t.get(`EXT_texture_filter_anisotropic`);
      if (
        (a.type === fs && !1 === t.has(`OES_texture_float_linear`)) ||
        (!1 === s &&
          a.type === ps &&
          !1 === t.has(`OES_texture_half_float_linear`))
      )
        return;
      (a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
        (e.texParameterf(
          n,
          o.TEXTURE_MAX_ANISOTROPY_EXT,
          Math.min(a.anisotropy, i.getMaxAnisotropy())
        ),
        (r.get(a).__currentAnisotropy = a.anisotropy));
    }
  }
  function L(t, n) {
    t.__webglInit === void 0 &&
      ((t.__webglInit = !0),
      n.addEventListener(`dispose`, T),
      (t.__webglTexture = e.createTexture()),
      o.memory.textures++);
  }
  function ne(t, r, i) {
    let o = 3553;
    r.isDataTexture2DArray && (o = 35866),
      r.isDataTexture3D && (o = 32879),
      L(t, r),
      n.activeTexture(33984 + i),
      n.bindTexture(o, t.__webglTexture),
      e.pixelStorei(37440, r.flipY),
      e.pixelStorei(37441, r.premultiplyAlpha),
      e.pixelStorei(3317, r.unpackAlignment),
      e.pixelStorei(37443, 0);
    let c = y(r) && !1 === v(r.image),
      l = _(r.image, c, !1, u),
      d = v(l) || s,
      f = a.convert(r.format),
      p = a.convert(r.type),
      m = S(r.internalFormat, f, p, r.encoding);
    I(o, r, d);
    let h,
      g = r.mipmaps,
      w = s && !0 !== r.isVideoTexture,
      T = t.__version === void 0,
      E = C(r, l, d);
    if (r.isDepthTexture)
      (m = 6402),
        s
          ? (m =
              r.type === fs
                ? 36012
                : r.type === ds
                ? 33190
                : r.type === _s
                ? 35056
                : 33189)
          : r.type === fs &&
            console.error(
              `WebGLRenderer: Floating point depth texture requires WebGL2.`
            ),
        r.format === Cs &&
          m === 6402 &&
          r.type !== ls &&
          r.type !== ds &&
          (console.warn(
            `THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.`
          ),
          (r.type = ls),
          (p = a.convert(r.type))),
        r.format === ws &&
          m === 6402 &&
          ((m = 34041),
          r.type !== _s &&
            (console.warn(
              `THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.`
            ),
            (r.type = _s),
            (p = a.convert(r.type)))),
        w && T
          ? n.texStorage2D(3553, 1, m, l.width, l.height)
          : n.texImage2D(3553, 0, m, l.width, l.height, 0, f, p, null);
    else if (r.isDataTexture)
      if (g.length > 0 && d) {
        w && T && n.texStorage2D(3553, E, m, g[0].width, g[0].height);
        for (let e = 0, t = g.length; e < t; e++)
          (h = g[e]),
            w
              ? n.texSubImage2D(3553, 0, 0, 0, h.width, h.height, f, p, h.data)
              : n.texImage2D(3553, e, m, h.width, h.height, 0, f, p, h.data);
        r.generateMipmaps = !1;
      } else
        w
          ? (T && n.texStorage2D(3553, E, m, l.width, l.height),
            n.texSubImage2D(3553, 0, 0, 0, l.width, l.height, f, p, l.data))
          : n.texImage2D(3553, 0, m, l.width, l.height, 0, f, p, l.data);
    else if (r.isCompressedTexture) {
      w && T && n.texStorage2D(3553, E, m, g[0].width, g[0].height);
      for (let e = 0, t = g.length; e < t; e++)
        (h = g[e]),
          r.format !== bs && r.format !== ys
            ? f === null
              ? console.warn(
                  `THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()`
                )
              : w
              ? n.compressedTexSubImage2D(
                  3553,
                  e,
                  0,
                  0,
                  h.width,
                  h.height,
                  f,
                  h.data
                )
              : n.compressedTexImage2D(3553, e, m, h.width, h.height, 0, h.data)
            : w
            ? n.texSubImage2D(3553, e, 0, 0, h.width, h.height, f, p, h.data)
            : n.texImage2D(3553, e, m, h.width, h.height, 0, f, p, h.data);
    } else if (r.isDataTexture2DArray)
      w
        ? (T && n.texStorage3D(35866, E, m, l.width, l.height, l.depth),
          n.texSubImage3D(
            35866,
            0,
            0,
            0,
            0,
            l.width,
            l.height,
            l.depth,
            f,
            p,
            l.data
          ))
        : n.texImage3D(
            35866,
            0,
            m,
            l.width,
            l.height,
            l.depth,
            0,
            f,
            p,
            l.data
          );
    else if (r.isDataTexture3D)
      w
        ? (T && n.texStorage3D(32879, E, m, l.width, l.height, l.depth),
          n.texSubImage3D(
            32879,
            0,
            0,
            0,
            0,
            l.width,
            l.height,
            l.depth,
            f,
            p,
            l.data
          ))
        : n.texImage3D(
            32879,
            0,
            m,
            l.width,
            l.height,
            l.depth,
            0,
            f,
            p,
            l.data
          );
    else if (r.isFramebufferTexture)
      w && T
        ? n.texStorage2D(3553, E, m, l.width, l.height)
        : n.texImage2D(3553, 0, m, l.width, l.height, 0, f, p, null);
    else if (g.length > 0 && d) {
      w && T && n.texStorage2D(3553, E, m, g[0].width, g[0].height);
      for (let e = 0, t = g.length; e < t; e++)
        (h = g[e]),
          w
            ? n.texSubImage2D(3553, e, 0, 0, f, p, h)
            : n.texImage2D(3553, e, m, f, p, h);
      r.generateMipmaps = !1;
    } else
      w
        ? (T && n.texStorage2D(3553, E, m, l.width, l.height),
          n.texSubImage2D(3553, 0, 0, 0, f, p, l))
        : n.texImage2D(3553, 0, m, f, p, l);
    b(r, d) && x(o), (t.__version = r.version), r.onUpdate && r.onUpdate(r);
  }
  function re(t, r, i) {
    if (r.image.length !== 6) return;
    L(t, r),
      n.activeTexture(33984 + i),
      n.bindTexture(34067, t.__webglTexture),
      e.pixelStorei(37440, r.flipY),
      e.pixelStorei(37441, r.premultiplyAlpha),
      e.pixelStorei(3317, r.unpackAlignment),
      e.pixelStorei(37443, 0);
    let o = r && (r.isCompressedTexture || r.image[0].isCompressedTexture),
      c = r.image[0] && r.image[0].isDataTexture,
      u = [];
    for (let e = 0; e < 6; e++)
      u[e] =
        o || c ? (c ? r.image[e].image : r.image[e]) : _(r.image[e], !1, !0, l);
    let d = u[0],
      f = v(d) || s,
      p = a.convert(r.format),
      m = a.convert(r.type),
      h = S(r.internalFormat, p, m, r.encoding),
      g = s && !0 !== r.isVideoTexture,
      y = t.__version === void 0,
      w = C(r, d, f);
    I(34067, r, f);
    let T;
    if (o) {
      g && y && n.texStorage2D(34067, w, h, d.width, d.height);
      for (let e = 0; e < 6; e++) {
        T = u[e].mipmaps;
        for (let t = 0; t < T.length; t++) {
          let i = T[t];
          r.format !== bs && r.format !== ys
            ? p === null
              ? console.warn(
                  `THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()`
                )
              : g
              ? n.compressedTexSubImage2D(
                  34069 + e,
                  t,
                  0,
                  0,
                  i.width,
                  i.height,
                  p,
                  i.data
                )
              : n.compressedTexImage2D(
                  34069 + e,
                  t,
                  h,
                  i.width,
                  i.height,
                  0,
                  i.data
                )
            : g
            ? n.texSubImage2D(
                34069 + e,
                t,
                0,
                0,
                i.width,
                i.height,
                p,
                m,
                i.data
              )
            : n.texImage2D(34069 + e, t, h, i.width, i.height, 0, p, m, i.data);
        }
      }
    } else {
      (T = r.mipmaps),
        g &&
          y &&
          (T.length > 0 && w++,
          n.texStorage2D(34067, w, h, u[0].width, u[0].height));
      for (let e = 0; e < 6; e++)
        if (c) {
          g
            ? n.texSubImage2D(
                34069 + e,
                0,
                0,
                0,
                u[e].width,
                u[e].height,
                p,
                m,
                u[e].data
              )
            : n.texImage2D(
                34069 + e,
                0,
                h,
                u[e].width,
                u[e].height,
                0,
                p,
                m,
                u[e].data
              );
          for (let t = 0; t < T.length; t++) {
            let r = T[t].image[e].image;
            g
              ? n.texSubImage2D(
                  34069 + e,
                  t + 1,
                  0,
                  0,
                  r.width,
                  r.height,
                  p,
                  m,
                  r.data
                )
              : n.texImage2D(
                  34069 + e,
                  t + 1,
                  h,
                  r.width,
                  r.height,
                  0,
                  p,
                  m,
                  r.data
                );
          }
        } else {
          g
            ? n.texSubImage2D(34069 + e, 0, 0, 0, p, m, u[e])
            : n.texImage2D(34069 + e, 0, h, p, m, u[e]);
          for (let t = 0; t < T.length; t++) {
            let r = T[t];
            g
              ? n.texSubImage2D(34069 + e, t + 1, 0, 0, p, m, r.image[e])
              : n.texImage2D(34069 + e, t + 1, h, p, m, r.image[e]);
          }
        }
    }
    b(r, f) && x(34067), (t.__version = r.version), r.onUpdate && r.onUpdate(r);
  }
  function R(t, i, o, s, c) {
    let l = a.convert(o.format),
      u = a.convert(o.type),
      d = S(o.internalFormat, l, u, o.encoding);
    r.get(i).__hasExternalTextures ||
      (c === 32879 || c === 35866
        ? n.texImage3D(c, 0, d, i.width, i.height, i.depth, 0, l, u, null)
        : n.texImage2D(c, 0, d, i.width, i.height, 0, l, u, null)),
      n.bindFramebuffer(36160, t),
      i.useRenderToTexture
        ? f.framebufferTexture2DMultisampleEXT(
            36160,
            s,
            c,
            r.get(o).__webglTexture,
            0,
            W(i)
          )
        : e.framebufferTexture2D(36160, s, c, r.get(o).__webglTexture, 0),
      n.bindFramebuffer(36160, null);
  }
  function z(t, n, r) {
    if ((e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer)) {
      let i = 33189;
      if (r || n.useRenderToTexture) {
        let t = n.depthTexture;
        t &&
          t.isDepthTexture &&
          (t.type === fs ? (i = 36012) : t.type === ds && (i = 33190));
        let r = W(n);
        n.useRenderToTexture
          ? f.renderbufferStorageMultisampleEXT(36161, r, i, n.width, n.height)
          : e.renderbufferStorageMultisample(36161, r, i, n.width, n.height);
      } else e.renderbufferStorage(36161, i, n.width, n.height);
      e.framebufferRenderbuffer(36160, 36096, 36161, t);
    } else if (n.depthBuffer && n.stencilBuffer) {
      let i = W(n);
      r && n.useRenderbuffer
        ? e.renderbufferStorageMultisample(36161, i, 35056, n.width, n.height)
        : n.useRenderToTexture
        ? f.renderbufferStorageMultisampleEXT(
            36161,
            i,
            35056,
            n.width,
            n.height
          )
        : e.renderbufferStorage(36161, 34041, n.width, n.height),
        e.framebufferRenderbuffer(36160, 33306, 36161, t);
    } else {
      let t = !0 === n.isWebGLMultipleRenderTargets ? n.texture[0] : n.texture,
        i = a.convert(t.format),
        o = a.convert(t.type),
        s = S(t.internalFormat, i, o, t.encoding),
        c = W(n);
      r && n.useRenderbuffer
        ? e.renderbufferStorageMultisample(36161, c, s, n.width, n.height)
        : n.useRenderToTexture
        ? f.renderbufferStorageMultisampleEXT(36161, c, s, n.width, n.height)
        : e.renderbufferStorage(36161, s, n.width, n.height);
    }
    e.bindRenderbuffer(36161, null);
  }
  function ie(t, i) {
    if (i && i.isWebGLCubeRenderTarget)
      throw Error(`Depth Texture with cube render targets is not supported`);
    if (
      (n.bindFramebuffer(36160, t),
      !(i.depthTexture && i.depthTexture.isDepthTexture))
    )
      throw Error(
        `renderTarget.depthTexture must be an instance of THREE.DepthTexture`
      );
    (!r.get(i.depthTexture).__webglTexture ||
      i.depthTexture.image.width !== i.width ||
      i.depthTexture.image.height !== i.height) &&
      ((i.depthTexture.image.width = i.width),
      (i.depthTexture.image.height = i.height),
      (i.depthTexture.needsUpdate = !0)),
      M(i.depthTexture, 0);
    let a = r.get(i.depthTexture).__webglTexture,
      o = W(i);
    if (i.depthTexture.format === Cs)
      i.useRenderToTexture
        ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, a, 0, o)
        : e.framebufferTexture2D(36160, 36096, 3553, a, 0);
    else {
      if (i.depthTexture.format !== ws)
        throw Error(`Unknown depthTexture format`);
      i.useRenderToTexture
        ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, a, 0, o)
        : e.framebufferTexture2D(36160, 33306, 3553, a, 0);
    }
  }
  function B(t) {
    let i = r.get(t),
      a = !0 === t.isWebGLCubeRenderTarget;
    if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
      if (a)
        throw Error(`target.depthTexture not supported in Cube render targets`);
      ie(i.__webglFramebuffer, t);
    } else if (a) {
      i.__webglDepthbuffer = [];
      for (let r = 0; r < 6; r++)
        n.bindFramebuffer(36160, i.__webglFramebuffer[r]),
          (i.__webglDepthbuffer[r] = e.createRenderbuffer()),
          z(i.__webglDepthbuffer[r], t, !1);
    } else
      n.bindFramebuffer(36160, i.__webglFramebuffer),
        (i.__webglDepthbuffer = e.createRenderbuffer()),
        z(i.__webglDepthbuffer, t, !1);
    n.bindFramebuffer(36160, null);
  }
  function V(e, t, n) {
    let i = r.get(e);
    t !== void 0 && R(i.__webglFramebuffer, e, e.texture, 36064, 3553),
      n !== void 0 && B(e);
  }
  function H(t) {
    let c = t.texture,
      l = r.get(t),
      u = r.get(c);
    t.addEventListener(`dispose`, E),
      !0 !== t.isWebGLMultipleRenderTargets &&
        (u.__webglTexture === void 0 && (u.__webglTexture = e.createTexture()),
        (u.__version = c.version),
        o.memory.textures++);
    let d = !0 === t.isWebGLCubeRenderTarget,
      f = !0 === t.isWebGLMultipleRenderTargets,
      p = c.isDataTexture3D || c.isDataTexture2DArray,
      m = v(t) || s;
    if (
      (s &&
        c.format === ys &&
        (c.type === fs || c.type === ps) &&
        ((c.format = bs),
        console.warn(
          `THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.`
        )),
      d)
    ) {
      l.__webglFramebuffer = [];
      for (let t = 0; t < 6; t++)
        l.__webglFramebuffer[t] = e.createFramebuffer();
    } else if (((l.__webglFramebuffer = e.createFramebuffer()), f))
      if (i.drawBuffers) {
        let n = t.texture;
        for (let t = 0, i = n.length; t < i; t++) {
          let i = r.get(n[t]);
          i.__webglTexture === void 0 &&
            ((i.__webglTexture = e.createTexture()), o.memory.textures++);
        }
      } else
        console.warn(
          `THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.`
        );
    else if (t.useRenderbuffer)
      if (s) {
        (l.__webglMultisampledFramebuffer = e.createFramebuffer()),
          (l.__webglColorRenderbuffer = e.createRenderbuffer()),
          e.bindRenderbuffer(36161, l.__webglColorRenderbuffer);
        let r = a.convert(c.format),
          i = a.convert(c.type),
          o = S(c.internalFormat, r, i, c.encoding),
          s = W(t);
        e.renderbufferStorageMultisample(36161, s, o, t.width, t.height),
          n.bindFramebuffer(36160, l.__webglMultisampledFramebuffer),
          e.framebufferRenderbuffer(
            36160,
            36064,
            36161,
            l.__webglColorRenderbuffer
          ),
          e.bindRenderbuffer(36161, null),
          t.depthBuffer &&
            ((l.__webglDepthRenderbuffer = e.createRenderbuffer()),
            z(l.__webglDepthRenderbuffer, t, !0)),
          n.bindFramebuffer(36160, null);
      } else
        console.warn(
          `THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.`
        );
    if (d) {
      n.bindTexture(34067, u.__webglTexture), I(34067, c, m);
      for (let e = 0; e < 6; e++)
        R(l.__webglFramebuffer[e], t, c, 36064, 34069 + e);
      b(c, m) && x(34067), n.unbindTexture();
    } else if (f) {
      let e = t.texture;
      for (let i = 0, a = e.length; i < a; i++) {
        let a = e[i],
          o = r.get(a);
        n.bindTexture(3553, o.__webglTexture),
          I(3553, a, m),
          R(l.__webglFramebuffer, t, a, 36064 + i, 3553),
          b(a, m) && x(3553);
      }
      n.unbindTexture();
    } else {
      let e = 3553;
      p &&
        (s
          ? (e = c.isDataTexture3D ? 32879 : 35866)
          : console.warn(
              `THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.`
            )),
        n.bindTexture(e, u.__webglTexture),
        I(e, c, m),
        R(l.__webglFramebuffer, t, c, 36064, e),
        b(c, m) && x(e),
        n.unbindTexture();
    }
    t.depthBuffer && B(t);
  }
  function ae(e) {
    let t = v(e) || s,
      i = !0 === e.isWebGLMultipleRenderTargets ? e.texture : [e.texture];
    for (let a = 0, o = i.length; a < o; a++) {
      let o = i[a];
      if (b(o, t)) {
        let t = e.isWebGLCubeRenderTarget ? 34067 : 3553,
          i = r.get(o).__webglTexture;
        n.bindTexture(t, i), x(t), n.unbindTexture();
      }
    }
  }
  function U(t) {
    if (t.useRenderbuffer)
      if (s) {
        let i = t.width,
          a = t.height,
          o = 16384,
          s = [36064],
          c = t.stencilBuffer ? 33306 : 36096;
        t.depthBuffer && s.push(c),
          t.ignoreDepthForMultisampleCopy ||
            (t.depthBuffer && (o |= 256), t.stencilBuffer && (o |= 1024));
        let l = r.get(t);
        n.bindFramebuffer(36008, l.__webglMultisampledFramebuffer),
          n.bindFramebuffer(36009, l.__webglFramebuffer),
          t.ignoreDepthForMultisampleCopy &&
            (e.invalidateFramebuffer(36008, [c]),
            e.invalidateFramebuffer(36009, [c])),
          e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728),
          e.invalidateFramebuffer(36008, s),
          n.bindFramebuffer(36008, null),
          n.bindFramebuffer(36009, l.__webglMultisampledFramebuffer);
      } else
        console.warn(
          `THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.`
        );
  }
  function W(e) {
    return s && (e.useRenderbuffer || e.useRenderToTexture)
      ? Math.min(d, e.samples)
      : 0;
  }
  function G(e) {
    let t = o.render.frame;
    p.get(e) !== t && (p.set(e, t), e.update());
  }
  let oe = !1,
    se = !1;
  function ce(e, t) {
    e &&
      e.isWebGLRenderTarget &&
      (!1 === oe &&
        (console.warn(
          `THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.`
        ),
        (oe = !0)),
      (e = e.texture)),
      M(e, t);
  }
  function le(e, t) {
    e &&
      e.isWebGLCubeRenderTarget &&
      (!1 === se &&
        (console.warn(
          `THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.`
        ),
        (se = !0)),
      (e = e.texture)),
      F(e, t);
  }
  (this.allocateTextureUnit = j),
    (this.resetTextureUnits = A),
    (this.setTexture2D = M),
    (this.setTexture2DArray = N),
    (this.setTexture3D = P),
    (this.setTextureCube = F),
    (this.rebindTextures = V),
    (this.setupRenderTarget = H),
    (this.updateRenderTargetMipmap = ae),
    (this.updateMultisampleRenderTarget = U),
    (this.setupDepthRenderbuffer = B),
    (this.setupFrameBufferTexture = R),
    (this.safeSetTexture2D = ce),
    (this.safeSetTextureCube = le);
}
function Ui(e, t, n) {
  let r = n.isWebGL2;
  function i(e) {
    let n;
    if (e === os) return 5121;
    if (e === ms) return 32819;
    if (e === hs) return 32820;
    if (e === gs) return 33635;
    if (e === ss) return 5120;
    if (e === cs) return 5122;
    if (e === ls) return 5123;
    if (e === us) return 5124;
    if (e === ds) return 5125;
    if (e === fs) return 5126;
    if (e === ps)
      return r
        ? 5131
        : ((n = t.get(`OES_texture_half_float`)),
          n === null ? null : n.HALF_FLOAT_OES);
    if (e === vs) return 6406;
    if (e === ys) return 6407;
    if (e === bs) return 6408;
    if (e === xs) return 6409;
    if (e === Ss) return 6410;
    if (e === Cs) return 6402;
    if (e === ws) return 34041;
    if (e === Ts) return 6403;
    if (e === Es) return 36244;
    if (e === Ds) return 33319;
    if (e === Os) return 33320;
    if (e === ks) return 36248;
    if (e === As) return 36249;
    if (e === js || e === Ms || e === Ns || e === Ps) {
      if (((n = t.get(`WEBGL_compressed_texture_s3tc`)), n === null))
        return null;
      if (e === js) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
      if (e === Ms) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
      if (e === Ns) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      if (e === Ps) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT;
    }
    if (e === Fs || e === Is || e === Ls || e === Rs) {
      if (((n = t.get(`WEBGL_compressed_texture_pvrtc`)), n === null))
        return null;
      if (e === Fs) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
      if (e === Is) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
      if (e === Ls) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
      if (e === Rs) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
    }
    if (e === zs)
      return (
        (n = t.get(`WEBGL_compressed_texture_etc1`)),
        n === null ? null : n.COMPRESSED_RGB_ETC1_WEBGL
      );
    if (
      (e === Bs || e === Vs) &&
      ((n = t.get(`WEBGL_compressed_texture_etc`)), n !== null)
    ) {
      if (e === Bs) return n.COMPRESSED_RGB8_ETC2;
      if (e === Vs) return n.COMPRESSED_RGBA8_ETC2_EAC;
    }
    if (
      e === Hs ||
      e === Us ||
      e === Ws ||
      e === Gs ||
      e === Ks ||
      e === qs ||
      e === Js ||
      e === Ys ||
      e === Xs ||
      e === Zs ||
      e === Qs ||
      e === $s ||
      e === ec ||
      e === tc ||
      e === rc ||
      e === ic ||
      e === ac ||
      e === oc ||
      e === sc ||
      e === cc ||
      e === lc ||
      e === uc ||
      e === dc ||
      e === fc ||
      e === pc ||
      e === mc ||
      e === hc ||
      e === gc
    )
      return (
        (n = t.get(`WEBGL_compressed_texture_astc`)), n === null ? null : e
      );
    if (e === nc)
      return (n = t.get(`EXT_texture_compression_bptc`)), n === null ? null : e;
    if (e === _s)
      return r
        ? 34042
        : ((n = t.get(`WEBGL_depth_texture`)),
          n === null ? null : n.UNSIGNED_INT_24_8_WEBGL);
  }
  return { convert: i };
}
function Wi(e) {
  function t(e, t) {
    e.fogColor.value.copy(t.color),
      t.isFog
        ? ((e.fogNear.value = t.near), (e.fogFar.value = t.far))
        : t.isFogExp2 && (e.fogDensity.value = t.density);
  }
  function n(e, t, n, _, v) {
    t.isMeshBasicMaterial
      ? r(e, t)
      : t.isMeshLambertMaterial
      ? (r(e, t), c(e, t))
      : t.isMeshToonMaterial
      ? (r(e, t), u(e, t))
      : t.isMeshPhongMaterial
      ? (r(e, t), l(e, t))
      : t.isMeshStandardMaterial
      ? (r(e, t), t.isMeshPhysicalMaterial ? f(e, t, v) : d(e, t))
      : t.isMeshMatcapMaterial
      ? (r(e, t), p(e, t))
      : t.isMeshDepthMaterial
      ? (r(e, t), m(e, t))
      : t.isMeshDistanceMaterial
      ? (r(e, t), h(e, t))
      : t.isMeshNormalMaterial
      ? (r(e, t), g(e, t))
      : t.isLineBasicMaterial
      ? (i(e, t), t.isLineDashedMaterial && a(e, t))
      : t.isPointsMaterial
      ? o(e, t, n, _)
      : t.isSpriteMaterial
      ? s(e, t)
      : t.isShadowMaterial
      ? (e.color.value.copy(t.color), (e.opacity.value = t.opacity))
      : t.isShaderMaterial && (t.uniformsNeedUpdate = !1);
  }
  function r(t, n) {
    (t.opacity.value = n.opacity),
      n.color && t.diffuse.value.copy(n.color),
      n.emissive &&
        t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),
      n.map && (t.map.value = n.map),
      n.alphaMap && (t.alphaMap.value = n.alphaMap),
      n.specularMap && (t.specularMap.value = n.specularMap),
      n.alphaTest > 0 && (t.alphaTest.value = n.alphaTest);
    let r = e.get(n).envMap;
    r &&
      ((t.envMap.value = r),
      (t.flipEnvMap.value =
        r.isCubeTexture && !1 === r.isRenderTargetTexture ? -1 : 1),
      (t.reflectivity.value = n.reflectivity),
      (t.ior.value = n.ior),
      (t.refractionRatio.value = n.refractionRatio)),
      n.lightMap &&
        ((t.lightMap.value = n.lightMap),
        (t.lightMapIntensity.value = n.lightMapIntensity)),
      n.aoMap &&
        ((t.aoMap.value = n.aoMap),
        (t.aoMapIntensity.value = n.aoMapIntensity));
    let i;
    n.map
      ? (i = n.map)
      : n.specularMap
      ? (i = n.specularMap)
      : n.displacementMap
      ? (i = n.displacementMap)
      : n.normalMap
      ? (i = n.normalMap)
      : n.bumpMap
      ? (i = n.bumpMap)
      : n.roughnessMap
      ? (i = n.roughnessMap)
      : n.metalnessMap
      ? (i = n.metalnessMap)
      : n.alphaMap
      ? (i = n.alphaMap)
      : n.emissiveMap
      ? (i = n.emissiveMap)
      : n.clearcoatMap
      ? (i = n.clearcoatMap)
      : n.clearcoatNormalMap
      ? (i = n.clearcoatNormalMap)
      : n.clearcoatRoughnessMap
      ? (i = n.clearcoatRoughnessMap)
      : n.specularIntensityMap
      ? (i = n.specularIntensityMap)
      : n.specularColorMap
      ? (i = n.specularColorMap)
      : n.transmissionMap
      ? (i = n.transmissionMap)
      : n.thicknessMap
      ? (i = n.thicknessMap)
      : n.sheenColorMap
      ? (i = n.sheenColorMap)
      : n.sheenRoughnessMap && (i = n.sheenRoughnessMap),
      i !== void 0 &&
        (i.isWebGLRenderTarget && (i = i.texture),
        !0 === i.matrixAutoUpdate && i.updateMatrix(),
        t.uvTransform.value.copy(i.matrix));
    let a;
    n.aoMap ? (a = n.aoMap) : n.lightMap && (a = n.lightMap),
      a !== void 0 &&
        (a.isWebGLRenderTarget && (a = a.texture),
        !0 === a.matrixAutoUpdate && a.updateMatrix(),
        t.uv2Transform.value.copy(a.matrix));
  }
  function i(e, t) {
    e.diffuse.value.copy(t.color), (e.opacity.value = t.opacity);
  }
  function a(e, t) {
    (e.dashSize.value = t.dashSize),
      (e.totalSize.value = t.dashSize + t.gapSize),
      (e.scale.value = t.scale);
  }
  function o(e, t, n, r) {
    e.diffuse.value.copy(t.color),
      (e.opacity.value = t.opacity),
      (e.size.value = t.size * n),
      (e.scale.value = 0.5 * r),
      t.map && (e.map.value = t.map),
      t.alphaMap && (e.alphaMap.value = t.alphaMap),
      t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
    let i;
    t.map ? (i = t.map) : t.alphaMap && (i = t.alphaMap),
      i !== void 0 &&
        (!0 === i.matrixAutoUpdate && i.updateMatrix(),
        e.uvTransform.value.copy(i.matrix));
  }
  function s(e, t) {
    e.diffuse.value.copy(t.color),
      (e.opacity.value = t.opacity),
      (e.rotation.value = t.rotation),
      t.map && (e.map.value = t.map),
      t.alphaMap && (e.alphaMap.value = t.alphaMap),
      t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest);
    let n;
    t.map ? (n = t.map) : t.alphaMap && (n = t.alphaMap),
      n !== void 0 &&
        (!0 === n.matrixAutoUpdate && n.updateMatrix(),
        e.uvTransform.value.copy(n.matrix));
  }
  function c(e, t) {
    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
  }
  function l(e, t) {
    e.specular.value.copy(t.specular),
      (e.shininess.value = Math.max(t.shininess, 1e-4)),
      t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
      t.bumpMap &&
        ((e.bumpMap.value = t.bumpMap),
        (e.bumpScale.value = t.bumpScale),
        t.side === $a && (e.bumpScale.value *= -1)),
      t.normalMap &&
        ((e.normalMap.value = t.normalMap),
        e.normalScale.value.copy(t.normalScale),
        t.side === $a && e.normalScale.value.negate()),
      t.displacementMap &&
        ((e.displacementMap.value = t.displacementMap),
        (e.displacementScale.value = t.displacementScale),
        (e.displacementBias.value = t.displacementBias));
  }
  function u(e, t) {
    t.gradientMap && (e.gradientMap.value = t.gradientMap),
      t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
      t.bumpMap &&
        ((e.bumpMap.value = t.bumpMap),
        (e.bumpScale.value = t.bumpScale),
        t.side === $a && (e.bumpScale.value *= -1)),
      t.normalMap &&
        ((e.normalMap.value = t.normalMap),
        e.normalScale.value.copy(t.normalScale),
        t.side === $a && e.normalScale.value.negate()),
      t.displacementMap &&
        ((e.displacementMap.value = t.displacementMap),
        (e.displacementScale.value = t.displacementScale),
        (e.displacementBias.value = t.displacementBias));
  }
  function d(t, n) {
    (t.roughness.value = n.roughness),
      (t.metalness.value = n.metalness),
      n.roughnessMap && (t.roughnessMap.value = n.roughnessMap),
      n.metalnessMap && (t.metalnessMap.value = n.metalnessMap),
      n.emissiveMap && (t.emissiveMap.value = n.emissiveMap),
      n.bumpMap &&
        ((t.bumpMap.value = n.bumpMap),
        (t.bumpScale.value = n.bumpScale),
        n.side === $a && (t.bumpScale.value *= -1)),
      n.normalMap &&
        ((t.normalMap.value = n.normalMap),
        t.normalScale.value.copy(n.normalScale),
        n.side === $a && t.normalScale.value.negate()),
      n.displacementMap &&
        ((t.displacementMap.value = n.displacementMap),
        (t.displacementScale.value = n.displacementScale),
        (t.displacementBias.value = n.displacementBias)),
      e.get(n).envMap && (t.envMapIntensity.value = n.envMapIntensity);
  }
  function f(e, t, n) {
    d(e, t),
      (e.ior.value = t.ior),
      t.sheen > 0 &&
        (e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),
        (e.sheenRoughness.value = t.sheenRoughness),
        t.sheenColorMap && (e.sheenColorMap.value = t.sheenColorMap),
        t.sheenRoughnessMap &&
          (e.sheenRoughnessMap.value = t.sheenRoughnessMap)),
      t.clearcoat > 0 &&
        ((e.clearcoat.value = t.clearcoat),
        (e.clearcoatRoughness.value = t.clearcoatRoughness),
        t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap),
        t.clearcoatRoughnessMap &&
          (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap),
        t.clearcoatNormalMap &&
          (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),
          (e.clearcoatNormalMap.value = t.clearcoatNormalMap),
          t.side === $a && e.clearcoatNormalScale.value.negate())),
      t.transmission > 0 &&
        ((e.transmission.value = t.transmission),
        (e.transmissionSamplerMap.value = n.texture),
        e.transmissionSamplerSize.value.set(n.width, n.height),
        t.transmissionMap && (e.transmissionMap.value = t.transmissionMap),
        (e.thickness.value = t.thickness),
        t.thicknessMap && (e.thicknessMap.value = t.thicknessMap),
        (e.attenuationDistance.value = t.attenuationDistance),
        e.attenuationColor.value.copy(t.attenuationColor)),
      (e.specularIntensity.value = t.specularIntensity),
      e.specularColor.value.copy(t.specularColor),
      t.specularIntensityMap &&
        (e.specularIntensityMap.value = t.specularIntensityMap),
      t.specularColorMap && (e.specularColorMap.value = t.specularColorMap);
  }
  function p(e, t) {
    t.matcap && (e.matcap.value = t.matcap),
      t.bumpMap &&
        ((e.bumpMap.value = t.bumpMap),
        (e.bumpScale.value = t.bumpScale),
        t.side === $a && (e.bumpScale.value *= -1)),
      t.normalMap &&
        ((e.normalMap.value = t.normalMap),
        e.normalScale.value.copy(t.normalScale),
        t.side === $a && e.normalScale.value.negate()),
      t.displacementMap &&
        ((e.displacementMap.value = t.displacementMap),
        (e.displacementScale.value = t.displacementScale),
        (e.displacementBias.value = t.displacementBias));
  }
  function m(e, t) {
    t.displacementMap &&
      ((e.displacementMap.value = t.displacementMap),
      (e.displacementScale.value = t.displacementScale),
      (e.displacementBias.value = t.displacementBias));
  }
  function h(e, t) {
    t.displacementMap &&
      ((e.displacementMap.value = t.displacementMap),
      (e.displacementScale.value = t.displacementScale),
      (e.displacementBias.value = t.displacementBias)),
      e.referencePosition.value.copy(t.referencePosition),
      (e.nearDistance.value = t.nearDistance),
      (e.farDistance.value = t.farDistance);
  }
  function g(e, t) {
    t.bumpMap &&
      ((e.bumpMap.value = t.bumpMap),
      (e.bumpScale.value = t.bumpScale),
      t.side === $a && (e.bumpScale.value *= -1)),
      t.normalMap &&
        ((e.normalMap.value = t.normalMap),
        e.normalScale.value.copy(t.normalScale),
        t.side === $a && e.normalScale.value.negate()),
      t.displacementMap &&
        ((e.displacementMap.value = t.displacementMap),
        (e.displacementScale.value = t.displacementScale),
        (e.displacementBias.value = t.displacementBias));
  }
  return { refreshFogUniforms: t, refreshMaterialUniforms: n };
}
function Gi() {
  let e = En(`canvas`);
  return (e.style.display = `block`), e;
}
function Ki(e = {}) {
  let t = e.canvas === void 0 ? Gi() : e.canvas,
    n = e.context === void 0 ? null : e.context,
    r = e.alpha !== void 0 && e.alpha,
    i = e.depth === void 0 || e.depth,
    a = e.stencil === void 0 || e.stencil,
    o = e.antialias !== void 0 && e.antialias,
    s = e.premultipliedAlpha === void 0 || e.premultipliedAlpha,
    c = e.preserveDrawingBuffer !== void 0 && e.preserveDrawingBuffer,
    l = e.powerPreference === void 0 ? `default` : e.powerPreference,
    u =
      e.failIfMajorPerformanceCaveat !== void 0 &&
      e.failIfMajorPerformanceCaveat,
    d = null,
    f = null,
    p = [],
    m = [];
  (this.domElement = t),
    (this.debug = { checkShaderErrors: !0 }),
    (this.autoClear = !0),
    (this.autoClearColor = !0),
    (this.autoClearDepth = !0),
    (this.autoClearStencil = !0),
    (this.sortObjects = !0),
    (this.clippingPlanes = []),
    (this.localClippingEnabled = !1),
    (this.outputEncoding = kc),
    (this.physicallyCorrectLights = !1),
    (this.toneMapping = Io),
    (this.toneMappingExposure = 1);
  let h = this,
    g = !1,
    _ = 0,
    y = 0,
    b = null,
    x = -1,
    S = null,
    C = new Xc(),
    w = new Xc(),
    T = null,
    E = t.width,
    D = t.height,
    O = 1,
    k = null,
    A = null,
    j = new Xc(0, 0, E, D),
    M = new Xc(0, 0, E, D),
    N = !1,
    P = [],
    F = new md(),
    ee = !1,
    te = !1,
    I = null,
    L = new Y(),
    ne = new J(),
    re = {
      background: null,
      fog: null,
      environment: null,
      overrideMaterial: null,
      isScene: !0,
    };
  function R() {
    return b === null ? O : 1;
  }
  let z = n;
  function ie(e, n) {
    for (let r = 0; r < e.length; r++) {
      let i = e[r],
        a = t.getContext(i, n);
      if (a !== null) return a;
    }
    return null;
  }
  try {
    let e = {
      alpha: r,
      depth: i,
      stencil: a,
      antialias: o,
      premultipliedAlpha: s,
      preserveDrawingBuffer: c,
      powerPreference: l,
      failIfMajorPerformanceCaveat: u,
    };
    if (
      (`setAttribute` in t && t.setAttribute(`data-engine`, `three.js r${Ga}`),
      t.addEventListener(`webglcontextlost`, Ce, !1),
      t.addEventListener(`webglcontextrestored`, we, !1),
      z === null)
    ) {
      let t = [`webgl2`, `webgl`, `experimental-webgl`];
      if ((!0 === h.isWebGL1Renderer && t.shift(), (z = ie(t, e)), z === null))
        throw ie(t)
          ? Error(`Error creating WebGL context with your selected attributes.`)
          : Error(`Error creating WebGL context.`);
    }
    z.getShaderPrecisionFormat === void 0 &&
      (z.getShaderPrecisionFormat = function () {
        return { rangeMin: 1, rangeMax: 1, precision: 1 };
      });
  } catch (e) {
    throw (console.error(`THREE.WebGLRenderer: ` + e.message), e);
  }
  let B,
    V,
    H,
    ae,
    U,
    W,
    G,
    oe,
    se,
    ce,
    le,
    ue,
    de,
    fe,
    pe,
    me,
    he,
    ge,
    _e,
    ve,
    K,
    ye,
    be;
  function xe() {
    (B = new $n(z)),
      (V = new Vn(z, B, e)),
      B.init(V),
      (ye = new Ui(z, B, V)),
      (H = new Vi(z, B, V)),
      (P[0] = 1029),
      (ae = new nr(z)),
      (U = new ki()),
      (W = new Hi(z, B, H, U, V, ye, ae)),
      (G = new Un(h)),
      (oe = new Qn(h)),
      (se = new Ln(z, V)),
      (be = new zn(z, B, se, V)),
      (ce = new er(z, se, ae, be)),
      (le = new sr(z, ce, se, ae)),
      (_e = new or(z, V, W)),
      (me = new Hn(U)),
      (ue = new Oi(h, G, oe, B, V, be, me)),
      (de = new Wi(U)),
      (fe = new Ni()),
      (pe = new zi(B, V)),
      (ge = new Rn(h, G, H, le, s)),
      (he = new Bi(h, le, V)),
      (ve = new Bn(z, B, ae, V)),
      (K = new tr(z, B, ae, V)),
      (ae.programs = ue.programs),
      (h.capabilities = V),
      (h.extensions = B),
      (h.properties = U),
      (h.renderLists = fe),
      (h.shadowMap = he),
      (h.state = H),
      (h.info = ae);
  }
  xe();
  let Se = new pf(h, z);
  (this.xr = Se),
    (this.getContext = function () {
      return z;
    }),
    (this.getContextAttributes = function () {
      return z.getContextAttributes();
    }),
    (this.forceContextLoss = function () {
      let e = B.get(`WEBGL_lose_context`);
      e && e.loseContext();
    }),
    (this.forceContextRestore = function () {
      let e = B.get(`WEBGL_lose_context`);
      e && e.restoreContext();
    }),
    (this.getPixelRatio = function () {
      return O;
    }),
    (this.setPixelRatio = function (e) {
      e !== void 0 && ((O = e), this.setSize(E, D, !1));
    }),
    (this.getSize = function (e) {
      return e.set(E, D);
    }),
    (this.setSize = function (e, n, r) {
      Se.isPresenting
        ? console.warn(
            `THREE.WebGLRenderer: Can't change size while VR device is presenting.`
          )
        : ((E = e),
          (D = n),
          (t.width = Math.floor(e * O)),
          (t.height = Math.floor(n * O)),
          !1 !== r && ((t.style.width = e + `px`), (t.style.height = n + `px`)),
          this.setViewport(0, 0, e, n));
    }),
    (this.getDrawingBufferSize = function (e) {
      return e.set(E * O, D * O).floor();
    }),
    (this.setDrawingBufferSize = function (e, n, r) {
      (E = e),
        (D = n),
        (O = r),
        (t.width = Math.floor(e * r)),
        (t.height = Math.floor(n * r)),
        this.setViewport(0, 0, e, n);
    }),
    (this.getCurrentViewport = function (e) {
      return e.copy(C);
    }),
    (this.getViewport = function (e) {
      return e.copy(j);
    }),
    (this.setViewport = function (e, t, n, r) {
      e.isVector4 ? j.set(e.x, e.y, e.z, e.w) : j.set(e, t, n, r),
        H.viewport(C.copy(j).multiplyScalar(O).floor());
    }),
    (this.getScissor = function (e) {
      return e.copy(M);
    }),
    (this.setScissor = function (e, t, n, r) {
      e.isVector4 ? M.set(e.x, e.y, e.z, e.w) : M.set(e, t, n, r),
        H.scissor(w.copy(M).multiplyScalar(O).floor());
    }),
    (this.getScissorTest = function () {
      return N;
    }),
    (this.setScissorTest = function (e) {
      H.setScissorTest((N = e));
    }),
    (this.setOpaqueSort = function (e) {
      k = e;
    }),
    (this.setTransparentSort = function (e) {
      A = e;
    }),
    (this.getClearColor = function (e) {
      return e.copy(ge.getClearColor());
    }),
    (this.setClearColor = function () {
      ge.setClearColor.apply(ge, arguments);
    }),
    (this.getClearAlpha = function () {
      return ge.getClearAlpha();
    }),
    (this.setClearAlpha = function () {
      ge.setClearAlpha.apply(ge, arguments);
    }),
    (this.clear = function (e, t, n) {
      let r = 0;
      (e === void 0 || e) && (r |= 16384),
        (t === void 0 || t) && (r |= 256),
        (n === void 0 || n) && (r |= 1024),
        z.clear(r);
    }),
    (this.clearColor = function () {
      this.clear(!0, !1, !1);
    }),
    (this.clearDepth = function () {
      this.clear(!1, !0, !1);
    }),
    (this.clearStencil = function () {
      this.clear(!1, !1, !0);
    }),
    (this.dispose = function () {
      t.removeEventListener(`webglcontextlost`, Ce, !1),
        t.removeEventListener(`webglcontextrestored`, we, !1),
        fe.dispose(),
        pe.dispose(),
        U.dispose(),
        G.dispose(),
        oe.dispose(),
        le.dispose(),
        be.dispose(),
        ue.dispose(),
        Se.dispose(),
        Se.removeEventListener(`sessionstart`, Ae),
        Se.removeEventListener(`sessionend`, je),
        (I &&= (I.dispose(), null)),
        Me.stop();
    });
  function Ce(e) {
    e.preventDefault(),
      console.log(`THREE.WebGLRenderer: Context Lost.`),
      (g = !0);
  }
  function we() {
    console.log(`THREE.WebGLRenderer: Context Restored.`), (g = !1);
    let e = ae.autoReset,
      t = he.enabled,
      n = he.autoUpdate,
      r = he.needsUpdate,
      i = he.type;
    xe(),
      (ae.autoReset = e),
      (he.enabled = t),
      (he.autoUpdate = n),
      (he.needsUpdate = r),
      (he.type = i);
  }
  function Te(e) {
    let t = e.target;
    t.removeEventListener(`dispose`, Te), Ee(t);
  }
  function Ee(e) {
    De(e), U.remove(e);
  }
  function De(e) {
    let t = U.get(e).programs;
    t !== void 0 &&
      (t.forEach(function (e) {
        ue.releaseProgram(e);
      }),
      e.isShaderMaterial && ue.releaseShaderCache(e));
  }
  (this.renderBufferDirect = function (e, t, n, r, i, a) {
    t === null && (t = re);
    let o = i.isMesh && i.matrixWorld.determinant() < 0,
      s = Be(e, t, n, r, i);
    H.setMaterial(r, o);
    let c = n.index,
      l = n.attributes.position;
    if (c === null) {
      if (l === void 0 || l.count === 0) return;
    } else if (c.count === 0) return;
    let u = 1;
    !0 === r.wireframe && ((c = ce.getWireframeAttribute(n)), (u = 2)),
      be.setup(i, r, s, n, c);
    let d,
      f = ve;
    c !== null && ((d = se.get(c)), (f = K), f.setIndex(d));
    let p = c === null ? l.count : c.count,
      m = n.drawRange.start * u,
      h = n.drawRange.count * u,
      g = a === null ? 0 : a.start * u,
      _ = a === null ? 1 / 0 : a.count * u,
      v = Math.max(m, g),
      y = Math.min(p, m + h, g + _) - 1,
      b = Math.max(0, y - v + 1);
    if (b !== 0) {
      if (i.isMesh)
        !0 === r.wireframe
          ? (H.setLineWidth(r.wireframeLinewidth * R()), f.setMode(1))
          : f.setMode(4);
      else if (i.isLine) {
        let e = r.linewidth;
        e === void 0 && (e = 1),
          H.setLineWidth(e * R()),
          i.isLineSegments
            ? f.setMode(1)
            : i.isLineLoop
            ? f.setMode(2)
            : f.setMode(3);
      } else i.isPoints ? f.setMode(0) : i.isSprite && f.setMode(4);
      if (i.isInstancedMesh) f.renderInstances(v, b, i.count);
      else if (n.isInstancedBufferGeometry) {
        let e = Math.min(n.instanceCount, n._maxInstanceCount);
        f.renderInstances(v, b, e);
      } else f.render(v, b);
    }
  }),
    (this.compile = function (e, t) {
      (f = pe.get(e)),
        f.init(),
        m.push(f),
        e.traverseVisible(function (e) {
          e.isLight &&
            e.layers.test(t.layers) &&
            (f.pushLight(e), e.castShadow && f.pushShadow(e));
        }),
        f.setupLights(h.physicallyCorrectLights),
        e.traverse(function (t) {
          let n = t.material;
          if (n)
            if (Array.isArray(n))
              for (let r = 0; r < n.length; r++) {
                let i = n[r];
                Re(i, e, t);
              }
            else Re(n, e, t);
        }),
        m.pop(),
        (f = null);
    });
  let Oe = null;
  function ke(e) {
    Oe && Oe(e);
  }
  function Ae() {
    Me.stop();
  }
  function je() {
    Me.start();
  }
  let Me = new In();
  Me.setAnimationLoop(ke),
    v !== void 0 && Me.setContext(v),
    (this.setAnimationLoop = function (e) {
      (Oe = e), Se.setAnimationLoop(e), e === null ? Me.stop() : Me.start();
    }),
    Se.addEventListener(`sessionstart`, Ae),
    Se.addEventListener(`sessionend`, je),
    (this.render = function (e, t) {
      if (t !== void 0 && !0 !== t.isCamera) {
        console.error(
          `THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.`
        );
        return;
      }
      if (!0 === g) return;
      !0 === e.autoUpdate && e.updateMatrixWorld(),
        t.parent === null && t.updateMatrixWorld(),
        !0 === Se.enabled &&
          !0 === Se.isPresenting &&
          (!0 === Se.cameraAutoUpdate && Se.updateCamera(t),
          (t = Se.getCamera())),
        !0 === e.isScene && e.onBeforeRender(h, e, t, b),
        (f = pe.get(e, m.length)),
        f.init(),
        m.push(f),
        L.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
        F.setFromProjectionMatrix(L),
        (te = this.localClippingEnabled),
        (ee = me.init(this.clippingPlanes, te, t)),
        (d = fe.get(e, p.length)),
        d.init(),
        p.push(d),
        Ne(e, t, 0, h.sortObjects),
        d.finish(),
        !0 === h.sortObjects && d.sort(k, A),
        !0 === ee && me.beginShadows();
      let n = f.state.shadowsArray;
      if (
        (he.render(n, e, t),
        !0 === ee && me.endShadows(),
        !0 === this.info.autoReset && this.info.reset(),
        ge.render(d, e),
        f.setupLights(h.physicallyCorrectLights),
        t.isArrayCamera)
      ) {
        let n = t.cameras;
        for (let t = 0, r = n.length; t < r; t++) {
          let r = n[t];
          Pe(d, e, r, r.viewport);
        }
      } else Pe(d, e, t);
      b !== null &&
        (W.updateMultisampleRenderTarget(b), W.updateRenderTargetMipmap(b)),
        !0 === e.isScene && e.onAfterRender(h, e, t),
        H.buffers.depth.setTest(!0),
        H.buffers.depth.setMask(!0),
        H.buffers.color.setMask(!0),
        H.setPolygonOffset(!1),
        be.resetDefaultState(),
        (x = -1),
        (S = null),
        m.pop(),
        (f = m.length > 0 ? m[m.length - 1] : null),
        p.pop(),
        (d = p.length > 0 ? p[p.length - 1] : null);
    });
  function Ne(e, t, n, r) {
    if (!1 === e.visible) return;
    if (e.layers.test(t.layers)) {
      if (e.isGroup) n = e.renderOrder;
      else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
      else if (e.isLight) f.pushLight(e), e.castShadow && f.pushShadow(e);
      else if (e.isSprite) {
        if (!e.frustumCulled || F.intersectsSprite(e)) {
          r && ne.setFromMatrixPosition(e.matrixWorld).applyMatrix4(L);
          let t = le.update(e),
            i = e.material;
          i.visible && d.push(e, t, i, n, ne.z, null);
        }
      } else if (
        (e.isMesh || e.isLine || e.isPoints) &&
        (e.isSkinnedMesh &&
          e.skeleton.frame !== ae.render.frame &&
          (e.skeleton.update(), (e.skeleton.frame = ae.render.frame)),
        !e.frustumCulled || F.intersectsObject(e))
      ) {
        r && ne.setFromMatrixPosition(e.matrixWorld).applyMatrix4(L);
        let t = le.update(e),
          i = e.material;
        if (Array.isArray(i)) {
          let r = t.groups;
          for (let a = 0, o = r.length; a < o; a++) {
            let o = r[a],
              s = i[o.materialIndex];
            s && s.visible && d.push(e, t, s, n, ne.z, o);
          }
        } else i.visible && d.push(e, t, i, n, ne.z, null);
      }
    }
    let i = e.children;
    for (let e = 0, a = i.length; e < a; e++) Ne(i[e], t, n, r);
  }
  function Pe(e, t, n, r) {
    let i = e.opaque,
      a = e.transmissive,
      o = e.transparent;
    f.setupLightsView(n),
      a.length > 0 && Fe(i, t, n),
      r && H.viewport(C.copy(r)),
      i.length > 0 && Ie(i, t, n),
      a.length > 0 && Ie(a, t, n),
      o.length > 0 && Ie(o, t, n);
  }
  function Fe(e, t, n) {
    I === null &&
      (I = new (!0 === o && !0 === V.isWebGL2 ? $c : Zc)(1024, 1024, {
        generateMipmaps: !0,
        type: ye.convert(ps) === null ? os : ps,
        minFilter: rs,
        magFilter: Qo,
        wrapS: Xo,
        wrapT: Xo,
        useRenderToTexture: B.has(`WEBGL_multisampled_render_to_texture`),
      }));
    let r = h.getRenderTarget();
    h.setRenderTarget(I), h.clear();
    let i = h.toneMapping;
    (h.toneMapping = Io),
      Ie(e, t, n),
      (h.toneMapping = i),
      W.updateMultisampleRenderTarget(I),
      W.updateRenderTargetMipmap(I),
      h.setRenderTarget(r);
  }
  function Ie(e, t, n) {
    let r = !0 === t.isScene ? t.overrideMaterial : null;
    for (let i = 0, a = e.length; i < a; i++) {
      let a = e[i],
        o = a.object,
        s = a.geometry,
        c = r === null ? a.material : r,
        l = a.group;
      o.layers.test(n.layers) && Le(o, t, n, s, c, l);
    }
  }
  function Le(e, t, n, r, i, a) {
    e.onBeforeRender(h, t, n, r, i, a),
      e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld),
      e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
      i.onBeforeRender(h, t, n, r, e, a),
      !0 === i.transparent && i.side === eo
        ? ((i.side = $a),
          (i.needsUpdate = !0),
          h.renderBufferDirect(n, t, r, i, e, a),
          (i.side = Qa),
          (i.needsUpdate = !0),
          h.renderBufferDirect(n, t, r, i, e, a),
          (i.side = eo))
        : h.renderBufferDirect(n, t, r, i, e, a),
      e.onAfterRender(h, t, n, r, i, a);
  }
  function Re(e, t, n) {
    !0 !== t.isScene && (t = re);
    let r = U.get(e),
      i = f.state.lights,
      a = f.state.shadowsArray,
      o = i.state.version,
      s = ue.getParameters(e, i.state, a, t, n),
      c = ue.getProgramCacheKey(s),
      l = r.programs;
    (r.environment = e.isMeshStandardMaterial ? t.environment : null),
      (r.fog = t.fog),
      (r.envMap = (e.isMeshStandardMaterial ? oe : G).get(
        e.envMap || r.environment
      )),
      l === void 0 &&
        (e.addEventListener(`dispose`, Te), (l = new Map()), (r.programs = l));
    let u = l.get(c);
    if (u !== void 0) {
      if (r.currentProgram === u && r.lightsStateVersion === o)
        return ze(e, s), u;
    } else
      (s.uniforms = ue.getUniforms(e)),
        e.onBuild(n, s, h),
        e.onBeforeCompile(s, h),
        (u = ue.acquireProgram(s, c)),
        l.set(c, u),
        (r.uniforms = s.uniforms);
    let d = r.uniforms;
    ((e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping) ||
      (d.clippingPlanes = me.uniform),
      ze(e, s),
      (r.needsLights = He(e)),
      (r.lightsStateVersion = o),
      r.needsLights &&
        ((d.ambientLightColor.value = i.state.ambient),
        (d.lightProbe.value = i.state.probe),
        (d.directionalLights.value = i.state.directional),
        (d.directionalLightShadows.value = i.state.directionalShadow),
        (d.spotLights.value = i.state.spot),
        (d.spotLightShadows.value = i.state.spotShadow),
        (d.rectAreaLights.value = i.state.rectArea),
        (d.ltc_1.value = i.state.rectAreaLTC1),
        (d.ltc_2.value = i.state.rectAreaLTC2),
        (d.pointLights.value = i.state.point),
        (d.pointLightShadows.value = i.state.pointShadow),
        (d.hemisphereLights.value = i.state.hemi),
        (d.directionalShadowMap.value = i.state.directionalShadowMap),
        (d.directionalShadowMatrix.value = i.state.directionalShadowMatrix),
        (d.spotShadowMap.value = i.state.spotShadowMap),
        (d.spotShadowMatrix.value = i.state.spotShadowMatrix),
        (d.pointShadowMap.value = i.state.pointShadowMap),
        (d.pointShadowMatrix.value = i.state.pointShadowMatrix));
    let p = u.getUniforms(),
      m = ri.seqWithValue(p.seq, d);
    return (r.currentProgram = u), (r.uniformsList = m), u;
  }
  function ze(e, t) {
    let n = U.get(e);
    (n.outputEncoding = t.outputEncoding),
      (n.instancing = t.instancing),
      (n.skinning = t.skinning),
      (n.morphTargets = t.morphTargets),
      (n.morphNormals = t.morphNormals),
      (n.morphTargetsCount = t.morphTargetsCount),
      (n.numClippingPlanes = t.numClippingPlanes),
      (n.numIntersection = t.numClipIntersection),
      (n.vertexAlphas = t.vertexAlphas),
      (n.vertexTangents = t.vertexTangents),
      (n.toneMapping = t.toneMapping);
  }
  function Be(e, t, n, r, i) {
    !0 !== t.isScene && (t = re), W.resetTextureUnits();
    let a = t.fog,
      o = r.isMeshStandardMaterial ? t.environment : null,
      s = b === null ? h.outputEncoding : b.texture.encoding,
      c = (r.isMeshStandardMaterial ? oe : G).get(r.envMap || o),
      l =
        !0 === r.vertexColors &&
        !!n.attributes.color &&
        n.attributes.color.itemSize === 4,
      u = !!r.normalMap && !!n.attributes.tangent,
      d = !!n.morphAttributes.position,
      p = !!n.morphAttributes.normal,
      m = n.morphAttributes.position ? n.morphAttributes.position.length : 0,
      g = r.toneMapped ? h.toneMapping : Io,
      _ = U.get(r),
      v = f.state.lights;
    if (!0 === ee && (!0 === te || e !== S)) {
      let t = e === S && r.id === x;
      me.setState(r, e, t);
    }
    let y = !1;
    r.version === _.__version
      ? (_.needsLights && _.lightsStateVersion !== v.state.version) ||
        _.outputEncoding !== s ||
        (i.isInstancedMesh && !1 === _.instancing)
        ? (y = !0)
        : i.isInstancedMesh || !0 !== _.instancing
        ? i.isSkinnedMesh && !1 === _.skinning
          ? (y = !0)
          : i.isSkinnedMesh || !0 !== _.skinning
          ? _.envMap !== c || (r.fog && _.fog !== a)
            ? (y = !0)
            : _.numClippingPlanes === void 0 ||
              (_.numClippingPlanes === me.numPlanes &&
                _.numIntersection === me.numIntersection)
            ? (_.vertexAlphas !== l ||
                _.vertexTangents !== u ||
                _.morphTargets !== d ||
                _.morphNormals !== p ||
                _.toneMapping !== g ||
                (!0 === V.isWebGL2 && _.morphTargetsCount !== m)) &&
              (y = !0)
            : (y = !0)
          : (y = !0)
        : (y = !0)
      : ((y = !0), (_.__version = r.version));
    let C = _.currentProgram;
    !0 === y && (C = Re(r, t, i));
    let w = !1,
      T = !1,
      E = !1,
      k = C.getUniforms(),
      A = _.uniforms;
    if (
      (H.useProgram(C.program) && ((w = !0), (T = !0), (E = !0)),
      r.id !== x && ((x = r.id), (T = !0)),
      w || S !== e)
    ) {
      if (
        (k.setValue(z, `projectionMatrix`, e.projectionMatrix),
        V.logarithmicDepthBuffer &&
          k.setValue(z, `logDepthBufFC`, 2 / (Math.log(e.far + 1) / Math.LN2)),
        S !== e && ((S = e), (T = !0), (E = !0)),
        r.isShaderMaterial ||
          r.isMeshPhongMaterial ||
          r.isMeshToonMaterial ||
          r.isMeshStandardMaterial ||
          r.envMap)
      ) {
        let t = k.map.cameraPosition;
        t !== void 0 && t.setValue(z, ne.setFromMatrixPosition(e.matrixWorld));
      }
      (r.isMeshPhongMaterial ||
        r.isMeshToonMaterial ||
        r.isMeshLambertMaterial ||
        r.isMeshBasicMaterial ||
        r.isMeshStandardMaterial ||
        r.isShaderMaterial) &&
        k.setValue(z, `isOrthographic`, !0 === e.isOrthographicCamera),
        (r.isMeshPhongMaterial ||
          r.isMeshToonMaterial ||
          r.isMeshLambertMaterial ||
          r.isMeshBasicMaterial ||
          r.isMeshStandardMaterial ||
          r.isShaderMaterial ||
          r.isShadowMaterial ||
          i.isSkinnedMesh) &&
          k.setValue(z, `viewMatrix`, e.matrixWorldInverse);
    }
    if (i.isSkinnedMesh) {
      k.setOptional(z, i, `bindMatrix`),
        k.setOptional(z, i, `bindMatrixInverse`);
      let e = i.skeleton;
      e &&
        (V.floatVertexTextures
          ? (e.boneTexture === null && e.computeBoneTexture(),
            k.setValue(z, `boneTexture`, e.boneTexture, W),
            k.setValue(z, `boneTextureSize`, e.boneTextureSize))
          : k.setOptional(z, e, `boneMatrices`));
    }
    return (
      !n ||
        (n.morphAttributes.position === void 0 &&
          n.morphAttributes.normal === void 0) ||
        _e.update(i, n, r, C),
      (T || _.receiveShadow !== i.receiveShadow) &&
        ((_.receiveShadow = i.receiveShadow),
        k.setValue(z, `receiveShadow`, i.receiveShadow)),
      T &&
        (k.setValue(z, `toneMappingExposure`, h.toneMappingExposure),
        _.needsLights && Ve(A, E),
        a && r.fog && de.refreshFogUniforms(A, a),
        de.refreshMaterialUniforms(A, r, O, D, I),
        ri.upload(z, _.uniformsList, A, W)),
      r.isShaderMaterial &&
        !0 === r.uniformsNeedUpdate &&
        (ri.upload(z, _.uniformsList, A, W), (r.uniformsNeedUpdate = !1)),
      r.isSpriteMaterial && k.setValue(z, `center`, i.center),
      k.setValue(z, `modelViewMatrix`, i.modelViewMatrix),
      k.setValue(z, `normalMatrix`, i.normalMatrix),
      k.setValue(z, `modelMatrix`, i.matrixWorld),
      C
    );
  }
  function Ve(e, t) {
    (e.ambientLightColor.needsUpdate = t),
      (e.lightProbe.needsUpdate = t),
      (e.directionalLights.needsUpdate = t),
      (e.directionalLightShadows.needsUpdate = t),
      (e.pointLights.needsUpdate = t),
      (e.pointLightShadows.needsUpdate = t),
      (e.spotLights.needsUpdate = t),
      (e.spotLightShadows.needsUpdate = t),
      (e.rectAreaLights.needsUpdate = t),
      (e.hemisphereLights.needsUpdate = t);
  }
  function He(e) {
    return (
      e.isMeshLambertMaterial ||
      e.isMeshToonMaterial ||
      e.isMeshPhongMaterial ||
      e.isMeshStandardMaterial ||
      e.isShadowMaterial ||
      (e.isShaderMaterial && !0 === e.lights)
    );
  }
  (this.getActiveCubeFace = function () {
    return _;
  }),
    (this.getActiveMipmapLevel = function () {
      return y;
    }),
    (this.getRenderTarget = function () {
      return b;
    }),
    (this.setRenderTargetTextures = function (e, t, n) {
      (U.get(e.texture).__webglTexture = t),
        (U.get(e.depthTexture).__webglTexture = n);
      let r = U.get(e);
      (r.__hasExternalTextures = !0),
        r.__hasExternalTextures &&
          ((r.__autoAllocateDepthBuffer = n === void 0),
          !r.__autoAllocateDepthBuffer &&
            e.useRenderToTexture &&
            (console.warn(
              `render-to-texture extension was disabled because an external texture was provided`
            ),
            (e.useRenderToTexture = !1),
            (e.useRenderbuffer = !0)));
    }),
    (this.setRenderTargetFramebuffer = function (e, t) {
      let n = U.get(e);
      (n.__webglFramebuffer = t), (n.__useDefaultFramebuffer = t === void 0);
    }),
    (this.setRenderTarget = function (e, t = 0, n = 0) {
      (b = e), (_ = t), (y = n);
      let r = !0;
      if (e) {
        let t = U.get(e);
        t.__useDefaultFramebuffer === void 0
          ? t.__webglFramebuffer === void 0
            ? W.setupRenderTarget(e)
            : t.__hasExternalTextures &&
              W.rebindTextures(
                e,
                U.get(e.texture).__webglTexture,
                U.get(e.depthTexture).__webglTexture
              )
          : (H.bindFramebuffer(36160, null), (r = !1));
      }
      let i = null,
        a = !1,
        o = !1;
      if (e) {
        let n = e.texture;
        (n.isDataTexture3D || n.isDataTexture2DArray) && (o = !0);
        let r = U.get(e).__webglFramebuffer;
        e.isWebGLCubeRenderTarget
          ? ((i = r[t]), (a = !0))
          : (i = e.useRenderbuffer
              ? U.get(e).__webglMultisampledFramebuffer
              : r),
          C.copy(e.viewport),
          w.copy(e.scissor),
          (T = e.scissorTest);
      } else
        C.copy(j).multiplyScalar(O).floor(),
          w.copy(M).multiplyScalar(O).floor(),
          (T = N);
      if (H.bindFramebuffer(36160, i) && V.drawBuffers && r) {
        let t = !1;
        if (e)
          if (e.isWebGLMultipleRenderTargets) {
            let n = e.texture;
            if (P.length !== n.length || P[0] !== 36064) {
              for (let e = 0, t = n.length; e < t; e++) P[e] = 36064 + e;
              (P.length = n.length), (t = !0);
            }
          } else
            (P.length !== 1 || P[0] !== 36064) &&
              ((P[0] = 36064), (P.length = 1), (t = !0));
        else
          (P.length !== 1 || P[0] !== 1029) &&
            ((P[0] = 1029), (P.length = 1), (t = !0));
        t &&
          (V.isWebGL2
            ? z.drawBuffers(P)
            : B.get(`WEBGL_draw_buffers`).drawBuffersWEBGL(P));
      }
      if ((H.viewport(C), H.scissor(w), H.setScissorTest(T), a)) {
        let r = U.get(e.texture);
        z.framebufferTexture2D(36160, 36064, 34069 + t, r.__webglTexture, n);
      } else if (o) {
        let r = U.get(e.texture),
          i = t || 0;
        z.framebufferTextureLayer(36160, 36064, r.__webglTexture, n || 0, i);
      }
      x = -1;
    }),
    (this.readRenderTargetPixels = function (e, t, n, r, i, a, o) {
      if (!(e && e.isWebGLRenderTarget)) {
        console.error(
          `THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.`
        );
        return;
      }
      let s = U.get(e).__webglFramebuffer;
      if ((e.isWebGLCubeRenderTarget && o !== void 0 && (s = s[o]), s)) {
        H.bindFramebuffer(36160, s);
        try {
          let o = e.texture,
            s = o.format,
            c = o.type;
          if (s !== bs && ye.convert(s) !== z.getParameter(35739)) {
            console.error(
              `THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.`
            );
            return;
          }
          let l =
            c === ps &&
            (B.has(`EXT_color_buffer_half_float`) ||
              (V.isWebGL2 && B.has(`EXT_color_buffer_float`)));
          if (
            c !== os &&
            ye.convert(c) !== z.getParameter(35738) &&
            !(
              c === fs &&
              (V.isWebGL2 ||
                B.has(`OES_texture_float`) ||
                B.has(`WEBGL_color_buffer_float`))
            ) &&
            !l
          ) {
            console.error(
              `THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.`
            );
            return;
          }
          z.checkFramebufferStatus(36160) === 36053
            ? t >= 0 &&
              t <= e.width - r &&
              n >= 0 &&
              n <= e.height - i &&
              z.readPixels(t, n, r, i, ye.convert(s), ye.convert(c), a)
            : console.error(
                `THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.`
              );
        } finally {
          let e = b === null ? null : U.get(b).__webglFramebuffer;
          H.bindFramebuffer(36160, e);
        }
      }
    }),
    (this.copyFramebufferToTexture = function (e, t, n = 0) {
      if (!0 !== t.isFramebufferTexture) {
        console.error(
          `THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.`
        );
        return;
      }
      let r = 2 ** -n,
        i = Math.floor(t.image.width * r),
        a = Math.floor(t.image.height * r);
      W.setTexture2D(t, 0),
        z.copyTexSubImage2D(3553, n, 0, 0, e.x, e.y, i, a),
        H.unbindTexture();
    }),
    (this.copyTextureToTexture = function (e, t, n, r = 0) {
      let i = t.image.width,
        a = t.image.height,
        o = ye.convert(n.format),
        s = ye.convert(n.type);
      W.setTexture2D(n, 0),
        z.pixelStorei(37440, n.flipY),
        z.pixelStorei(37441, n.premultiplyAlpha),
        z.pixelStorei(3317, n.unpackAlignment),
        t.isDataTexture
          ? z.texSubImage2D(3553, r, e.x, e.y, i, a, o, s, t.image.data)
          : t.isCompressedTexture
          ? z.compressedTexSubImage2D(
              3553,
              r,
              e.x,
              e.y,
              t.mipmaps[0].width,
              t.mipmaps[0].height,
              o,
              t.mipmaps[0].data
            )
          : z.texSubImage2D(3553, r, e.x, e.y, o, s, t.image),
        r === 0 && n.generateMipmaps && z.generateMipmap(3553),
        H.unbindTexture();
    }),
    (this.copyTextureToTexture3D = function (e, t, n, r, i = 0) {
      if (h.isWebGL1Renderer) {
        console.warn(
          `THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.`
        );
        return;
      }
      let a = e.max.x - e.min.x + 1,
        o = e.max.y - e.min.y + 1,
        s = e.max.z - e.min.z + 1,
        c = ye.convert(r.format),
        l = ye.convert(r.type),
        u;
      if (r.isDataTexture3D) W.setTexture3D(r, 0), (u = 32879);
      else {
        if (!r.isDataTexture2DArray) {
          console.warn(
            `THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.`
          );
          return;
        }
        W.setTexture2DArray(r, 0), (u = 35866);
      }
      z.pixelStorei(37440, r.flipY),
        z.pixelStorei(37441, r.premultiplyAlpha),
        z.pixelStorei(3317, r.unpackAlignment);
      let d = z.getParameter(3314),
        f = z.getParameter(32878),
        p = z.getParameter(3316),
        m = z.getParameter(3315),
        g = z.getParameter(32877),
        _ = n.isCompressedTexture ? n.mipmaps[0] : n.image;
      z.pixelStorei(3314, _.width),
        z.pixelStorei(32878, _.height),
        z.pixelStorei(3316, e.min.x),
        z.pixelStorei(3315, e.min.y),
        z.pixelStorei(32877, e.min.z),
        n.isDataTexture || n.isDataTexture3D
          ? z.texSubImage3D(u, i, t.x, t.y, t.z, a, o, s, c, l, _.data)
          : n.isCompressedTexture
          ? (console.warn(
              `THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.`
            ),
            z.compressedTexSubImage3D(u, i, t.x, t.y, t.z, a, o, s, c, _.data))
          : z.texSubImage3D(u, i, t.x, t.y, t.z, a, o, s, c, l, _),
        z.pixelStorei(3314, d),
        z.pixelStorei(32878, f),
        z.pixelStorei(3316, p),
        z.pixelStorei(3315, m),
        z.pixelStorei(32877, g),
        i === 0 && r.generateMipmaps && z.generateMipmap(u),
        H.unbindTexture();
    }),
    (this.initTexture = function (e) {
      W.setTexture2D(e, 0), H.unbindTexture();
    }),
    (this.resetState = function () {
      (_ = 0), (y = 0), (b = null), H.reset(), be.reset();
    }),
    typeof __THREE_DEVTOOLS__ < `u` &&
      __THREE_DEVTOOLS__.dispatchEvent(
        new CustomEvent(`observe`, { detail: this })
      );
}
function qi(e, t, n, r, i, a) {
  Ef.subVectors(e, n).addScalar(0.5).multiply(r),
    i === void 0
      ? Df.copy(Ef)
      : ((Df.x = a * Ef.x - i * Ef.y), (Df.y = i * Ef.x + a * Ef.y)),
    e.copy(t),
    (e.x += Df.x),
    (e.y += Df.y),
    e.applyMatrix4(Of);
}
function Ji(e, t, n, r, i, a, o) {
  let s = lp.distanceSqToPoint(e);
  if (s < n) {
    let n = new J();
    lp.closestPointToPoint(e, n), n.applyMatrix4(r);
    let c = i.ray.origin.distanceTo(n);
    if (c < i.near || c > i.far) return;
    a.push({
      distance: c,
      distanceToRay: Math.sqrt(s),
      point: n,
      index: t,
      face: null,
      object: o,
    });
  }
}
function Yi() {
  let e = 0,
    t = 0,
    n = 0,
    r = 0;
  function i(i, a, o, s) {
    (e = i),
      (t = o),
      (n = -3 * i + 3 * a - 2 * o - s),
      (r = 2 * i - 2 * a + o + s);
  }
  return {
    initCatmullRom: function (e, t, n, r, a) {
      i(t, n, a * (n - e), a * (r - t));
    },
    initNonuniformCatmullRom: function (e, t, n, r, a, o, s) {
      let c = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
        l = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
      (c *= o), (l *= o), i(t, n, c, l);
    },
    calc: function (i) {
      let a = i * i,
        o = a * i;
      return e + t * i + n * a + r * o;
    },
  };
}
function Xi(e, t, n, r, i) {
  let a = 0.5 * (r - t),
    o = 0.5 * (i - n),
    s = e * e,
    c = e * s;
  return (
    (2 * n - 2 * r + a + o) * c + (-3 * n + 3 * r - 2 * a - o) * s + a * e + n
  );
}
function Zi(e, t) {
  let n = 1 - e;
  return n * n * t;
}
function Qi(e, t) {
  return 2 * (1 - e) * e * t;
}
function $i(e, t) {
  return e * e * t;
}
function ea(e, t, n, r) {
  return Zi(e, t) + Qi(e, n) + $i(e, r);
}
function ta(e, t) {
  let n = 1 - e;
  return n * n * n * t;
}
function na(e, t) {
  let n = 1 - e;
  return 3 * n * n * e * t;
}
function ra(e, t) {
  return 3 * (1 - e) * e * e * t;
}
function ia(e, t) {
  return e * e * e * t;
}
function aa(e, t, n, r, i) {
  return ta(e, t) + na(e, n) + ra(e, r) + ia(e, i);
}
function oa(e, t, n, r, i) {
  let a, o;
  if (i === Ia(e, t, n, r) > 0)
    for (a = t; a < n; a += r) o = Na(a, e[a], e[a + 1], o);
  else for (a = n - r; a >= t; a -= r) o = Na(a, e[a], e[a + 1], o);
  return o && Ta(o, o.next) && (Pa(o), (o = o.next)), o;
}
function sa(e, t) {
  if (!e) return e;
  t ||= e;
  let n,
    r = e;
  do
    if (
      ((n = !1), r.steiner || (!Ta(r, r.next) && wa(r.prev, r, r.next) !== 0))
    )
      r = r.next;
    else {
      if ((Pa(r), (r = t = r.prev), r === r.next)) break;
      n = !0;
    }
  while (n || r !== t);
  return t;
}
function ca(e, t, n, r, i, a, o) {
  if (!e) return;
  !o && a && va(e, r, i, a);
  let s,
    c,
    l = e;
  for (; e.prev !== e.next; )
    if (((s = e.prev), (c = e.next), a ? ua(e, r, i, a) : la(e)))
      t.push(s.i / n),
        t.push(e.i / n),
        t.push(c.i / n),
        Pa(e),
        (e = c.next),
        (l = c.next);
    else if (((e = c), e === l)) {
      o
        ? o === 1
          ? ((e = da(sa(e), t, n)), ca(e, t, n, r, i, a, 2))
          : o === 2 && fa(e, t, n, r, i, a)
        : ca(sa(e), t, n, r, i, a, 1);
      break;
    }
}
function la(e) {
  let t = e.prev,
    n = e,
    r = e.next;
  if (wa(t, n, r) >= 0) return !1;
  let i = e.next.next;
  for (; i !== e.prev; ) {
    if (
      Sa(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) &&
      wa(i.prev, i, i.next) >= 0
    )
      return !1;
    i = i.next;
  }
  return !0;
}
function ua(e, t, n, r) {
  let i = e.prev,
    a = e,
    o = e.next;
  if (wa(i, a, o) >= 0) return !1;
  let s = i.x < a.x ? (i.x < o.x ? i.x : o.x) : a.x < o.x ? a.x : o.x,
    c = i.y < a.y ? (i.y < o.y ? i.y : o.y) : a.y < o.y ? a.y : o.y,
    l = i.x > a.x ? (i.x > o.x ? i.x : o.x) : a.x > o.x ? a.x : o.x,
    u = i.y > a.y ? (i.y > o.y ? i.y : o.y) : a.y > o.y ? a.y : o.y,
    d = ba(s, c, t, n, r),
    f = ba(l, u, t, n, r),
    p = e.prevZ,
    m = e.nextZ;
  for (; p && p.z >= d && m && m.z <= f; ) {
    if (
      (p !== e.prev &&
        p !== e.next &&
        Sa(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
        wa(p.prev, p, p.next) >= 0) ||
      ((p = p.prevZ),
      m !== e.prev &&
        m !== e.next &&
        Sa(i.x, i.y, a.x, a.y, o.x, o.y, m.x, m.y) &&
        wa(m.prev, m, m.next) >= 0)
    )
      return !1;
    m = m.nextZ;
  }
  for (; p && p.z >= d; ) {
    if (
      p !== e.prev &&
      p !== e.next &&
      Sa(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
      wa(p.prev, p, p.next) >= 0
    )
      return !1;
    p = p.prevZ;
  }
  for (; m && m.z <= f; ) {
    if (
      m !== e.prev &&
      m !== e.next &&
      Sa(i.x, i.y, a.x, a.y, o.x, o.y, m.x, m.y) &&
      wa(m.prev, m, m.next) >= 0
    )
      return !1;
    m = m.nextZ;
  }
  return !0;
}
function da(e, t, n) {
  let r = e;
  do {
    let i = r.prev,
      a = r.next.next;
    !Ta(i, a) &&
      Ea(i, r, r.next, a) &&
      Aa(i, a) &&
      Aa(a, i) &&
      (t.push(i.i / n),
      t.push(r.i / n),
      t.push(a.i / n),
      Pa(r),
      Pa(r.next),
      (r = e = a)),
      (r = r.next);
  } while (r !== e);
  return sa(r);
}
function fa(e, t, n, r, i, a) {
  let o = e;
  do {
    let e = o.next.next;
    for (; e !== o.prev; ) {
      if (o.i !== e.i && Ca(o, e)) {
        let s = Ma(o, e);
        (o = sa(o, o.next)),
          (s = sa(s, s.next)),
          ca(o, t, n, r, i, a),
          ca(s, t, n, r, i, a);
        return;
      }
      e = e.next;
    }
    o = o.next;
  } while (o !== e);
}
function pa(e, t, n, r) {
  let i = [],
    a,
    o,
    s,
    c,
    l;
  for (a = 0, o = t.length; a < o; a++)
    (s = t[a] * r),
      (c = a < o - 1 ? t[a + 1] * r : e.length),
      (l = oa(e, s, c, r, !1)),
      l === l.next && (l.steiner = !0),
      i.push(xa(l));
  for (i.sort(ma), a = 0; a < i.length; a++) ha(i[a], n), (n = sa(n, n.next));
  return n;
}
function ma(e, t) {
  return e.x - t.x;
}
function ha(e, t) {
  if (((t = ga(e, t)), t)) {
    let n = Ma(t, e);
    sa(t, t.next), sa(n, n.next);
  }
}
function ga(e, t) {
  let n = t,
    r = e.x,
    i = e.y,
    a,
    o = -1 / 0;
  do {
    if (i <= n.y && i >= n.next.y && n.next.y !== n.y) {
      let e = n.x + ((i - n.y) * (n.next.x - n.x)) / (n.next.y - n.y);
      if (e <= r && e > o) {
        if (((o = e), e === r)) {
          if (i === n.y) return n;
          if (i === n.next.y) return n.next;
        }
        a = n.x < n.next.x ? n : n.next;
      }
    }
    n = n.next;
  } while (n !== t);
  if (!a) return null;
  if (r === o) return a;
  let s = a,
    c = a.x,
    l = a.y,
    u,
    d = 1 / 0;
  n = a;
  do
    r >= n.x &&
      n.x >= c &&
      r !== n.x &&
      Sa(i < l ? r : o, i, c, l, i < l ? o : r, i, n.x, n.y) &&
      ((u = Math.abs(i - n.y) / (r - n.x)),
      Aa(n, e) &&
        (u < d || (u === d && (n.x > a.x || (n.x === a.x && _a(a, n))))) &&
        ((a = n), (d = u))),
      (n = n.next);
  while (n !== s);
  return a;
}
function _a(e, t) {
  return wa(e.prev, e, t.prev) < 0 && wa(t.next, e, e.next) < 0;
}
function va(e, t, n, r) {
  let i = e;
  do
    i.z === null && (i.z = ba(i.x, i.y, t, n, r)),
      (i.prevZ = i.prev),
      (i.nextZ = i.next),
      (i = i.next);
  while (i !== e);
  (i.prevZ.nextZ = null), (i.prevZ = null), ya(i);
}
function ya(e) {
  let t,
    n,
    r,
    i,
    a,
    o,
    s,
    c,
    l = 1;
  do {
    for (n = e, e = null, a = null, o = 0; n; ) {
      for (o++, r = n, s = 0, t = 0; t < l && (s++, (r = r.nextZ), r); t++);
      for (c = l; s > 0 || (c > 0 && r); )
        s !== 0 && (c === 0 || !r || n.z <= r.z)
          ? ((i = n), (n = n.nextZ), s--)
          : ((i = r), (r = r.nextZ), c--),
          a ? (a.nextZ = i) : (e = i),
          (i.prevZ = a),
          (a = i);
      n = r;
    }
    (a.nextZ = null), (l *= 2);
  } while (o > 1);
  return e;
}
function ba(e, t, n, r, i) {
  return (
    (e = 32767 * (e - n) * i),
    (t = 32767 * (t - r) * i),
    (e = 16711935 & (e | (e << 8))),
    (e = 252645135 & (e | (e << 4))),
    (e = 858993459 & (e | (e << 2))),
    (e = 1431655765 & (e | (e << 1))),
    (t = 16711935 & (t | (t << 8))),
    (t = 252645135 & (t | (t << 4))),
    (t = 858993459 & (t | (t << 2))),
    (t = 1431655765 & (t | (t << 1))),
    e | (t << 1)
  );
}
function xa(e) {
  let t = e,
    n = e;
  do (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t), (t = t.next);
  while (t !== e);
  return n;
}
function Sa(e, t, n, r, i, a, o, s) {
  return (
    (i - o) * (t - s) - (e - o) * (a - s) >= 0 &&
    (e - o) * (r - s) - (n - o) * (t - s) >= 0 &&
    (n - o) * (a - s) - (i - o) * (r - s) >= 0
  );
}
function Ca(e, t) {
  return (
    e.next.i !== t.i &&
    e.prev.i !== t.i &&
    !ka(e, t) &&
    ((Aa(e, t) &&
      Aa(t, e) &&
      ja(e, t) &&
      (wa(e.prev, e, t.prev) || wa(e, t.prev, t))) ||
      (Ta(e, t) && wa(e.prev, e, e.next) > 0 && wa(t.prev, t, t.next) > 0))
  );
}
function wa(e, t, n) {
  return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
}
function Ta(e, t) {
  return e.x === t.x && e.y === t.y;
}
function Ea(e, t, n, r) {
  let i = Oa(wa(e, t, n)),
    a = Oa(wa(e, t, r)),
    o = Oa(wa(n, r, e)),
    s = Oa(wa(n, r, t));
  return (
    (i !== a && o !== s) ||
    !(i !== 0 || !Da(e, n, t)) ||
    !(a !== 0 || !Da(e, r, t)) ||
    !(o !== 0 || !Da(n, e, r)) ||
    !(s !== 0 || !Da(n, t, r))
  );
}
function Da(e, t, n) {
  return (
    t.x <= Math.max(e.x, n.x) &&
    t.x >= Math.min(e.x, n.x) &&
    t.y <= Math.max(e.y, n.y) &&
    t.y >= Math.min(e.y, n.y)
  );
}
function Oa(e) {
  return e > 0 ? 1 : e < 0 ? -1 : 0;
}
function ka(e, t) {
  let n = e;
  do {
    if (
      n.i !== e.i &&
      n.next.i !== e.i &&
      n.i !== t.i &&
      n.next.i !== t.i &&
      Ea(n, n.next, e, t)
    )
      return !0;
    n = n.next;
  } while (n !== e);
  return !1;
}
function Aa(e, t) {
  return wa(e.prev, e, e.next) < 0
    ? wa(e, t, e.next) >= 0 && wa(e, e.prev, t) >= 0
    : wa(e, t, e.prev) < 0 || wa(e, e.next, t) < 0;
}
function ja(e, t) {
  let n = e,
    r = !1,
    i = (e.x + t.x) / 2,
    a = (e.y + t.y) / 2;
  do
    n.y > a != n.next.y > a &&
      n.next.y !== n.y &&
      i < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
      (r = !r),
      (n = n.next);
  while (n !== e);
  return r;
}
function Ma(e, t) {
  let n = new Fa(e.i, e.x, e.y),
    r = new Fa(t.i, t.x, t.y),
    i = e.next,
    a = t.prev;
  return (
    (e.next = t),
    (t.prev = e),
    (n.next = i),
    (i.prev = n),
    (r.next = n),
    (n.prev = r),
    (a.next = r),
    (r.prev = a),
    r
  );
}
function Na(e, t, n, r) {
  let i = new Fa(e, t, n);
  return (
    r
      ? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
      : ((i.prev = i), (i.next = i)),
    i
  );
}
function Pa(e) {
  (e.next.prev = e.prev),
    (e.prev.next = e.next),
    e.prevZ && (e.prevZ.nextZ = e.nextZ),
    e.nextZ && (e.nextZ.prevZ = e.prevZ);
}
function Fa(e, t, n) {
  (this.i = e),
    (this.x = t),
    (this.y = n),
    (this.prev = null),
    (this.next = null),
    (this.z = null),
    (this.prevZ = null),
    (this.nextZ = null),
    (this.steiner = !1);
}
function Ia(e, t, n, r) {
  let i = 0;
  for (let a = t, o = n - r; a < n; a += r)
    (i += (e[o] - e[a]) * (e[a + 1] + e[o + 1])), (o = a);
  return i;
}
function La(e) {
  let t = e.length;
  t > 2 && e[t - 1].equals(e[0]) && e.pop();
}
function Ra(e, t) {
  for (let n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
}
function za(e, t, n) {
  if (((n.shapes = []), Array.isArray(e)))
    for (let t = 0, r = e.length; t < r; t++) {
      let r = e[t];
      n.shapes.push(r.uuid);
    }
  else n.shapes.push(e.uuid);
  return (
    t.extrudePath !== void 0 &&
      (n.options.extrudePath = t.extrudePath.toJSON()),
    n
  );
}
function Ba(e, t) {
  if (((t.shapes = []), Array.isArray(e)))
    for (let n = 0, r = e.length; n < r; n++) {
      let r = e[n];
      t.shapes.push(r.uuid);
    }
  else t.shapes.push(e.uuid);
  return t;
}
function Va(e, t, n) {
  let r = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,
    i = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;
  return !0 === n.has(r) || !0 === n.has(i) ? !1 : (n.add(r, i), !0);
}
function Ha(e) {
  switch (e.toLowerCase()) {
    case `scalar`:
    case `double`:
    case `float`:
    case `number`:
    case `integer`:
      return wm;
    case `vector`:
    case `vector2`:
    case `vector3`:
    case `vector4`:
      return Om;
    case `color`:
      return Cm;
    case `quaternion`:
      return Em;
    case `bool`:
    case `boolean`:
      return Sm;
    case `string`:
      return Dm;
  }
  throw Error(`THREE.KeyframeTrack: Unsupported typeName: ` + e);
}
function Ua(e) {
  if (e.type === void 0)
    throw Error(`THREE.KeyframeTrack: track type undefined, can not parse`);
  let t = Ha(e.type);
  if (e.times === void 0) {
    let t = [],
      n = [];
    gm.flattenJSON(e.keys, t, n, `value`), (e.times = t), (e.values = n);
  }
  return t.parse === void 0
    ? new t(e.name, e.times, e.values, e.interpolation)
    : t.parse(e);
}
function Wa(e) {
  let t = [];
  e && e.isBone && t.push(e);
  for (let n = 0; n < e.children.length; n++)
    t.push.apply(t, Wa(e.children[n]));
  return t;
}
var Ga,
  Ka,
  qa,
  Ja,
  Ya,
  Xa,
  Za,
  Qa,
  $a,
  eo,
  to,
  no,
  ro,
  io,
  ao,
  oo,
  so,
  co,
  lo,
  uo,
  fo,
  po,
  mo,
  ho,
  go,
  _o,
  vo,
  yo,
  bo,
  xo,
  So,
  Co,
  wo,
  To,
  Eo,
  Do,
  Oo,
  ko,
  Ao,
  jo,
  Mo,
  No,
  Po,
  Fo,
  Io,
  Lo,
  Ro,
  zo,
  Bo,
  Vo,
  Ho,
  Uo,
  Wo,
  Go,
  Ko,
  qo,
  Jo,
  Yo,
  Xo,
  Zo,
  Qo,
  $o,
  es,
  ts,
  ns,
  rs,
  os,
  ss,
  cs,
  ls,
  us,
  ds,
  fs,
  ps,
  ms,
  hs,
  gs,
  _s,
  vs,
  ys,
  bs,
  xs,
  Ss,
  Cs,
  ws,
  Ts,
  Es,
  Ds,
  Os,
  ks,
  As,
  js,
  Ms,
  Ns,
  Ps,
  Fs,
  Is,
  Ls,
  Rs,
  zs,
  Bs,
  Vs,
  Hs,
  Us,
  Ws,
  Gs,
  Ks,
  qs,
  Js,
  Ys,
  Xs,
  Zs,
  Qs,
  $s,
  ec,
  tc,
  nc,
  rc,
  ic,
  ac,
  oc,
  sc,
  cc,
  lc,
  uc,
  dc,
  fc,
  pc,
  mc,
  hc,
  gc,
  _c,
  vc,
  yc,
  bc,
  xc,
  Sc,
  Cc,
  wc,
  Tc,
  Ec,
  Dc,
  Oc,
  kc,
  Ac,
  jc,
  Mc,
  Nc,
  Pc,
  Fc,
  Ic,
  Lc,
  Rc,
  zc,
  Bc,
  Vc,
  Hc,
  Uc,
  Wc,
  q,
  Gc,
  Kc,
  qc,
  Jc,
  Yc,
  Xc,
  Zc,
  Qc,
  $c,
  el,
  J,
  tl,
  nl,
  rl,
  il,
  al,
  ol,
  sl,
  cl,
  ll,
  ul,
  dl,
  fl,
  pl,
  ml,
  hl,
  gl,
  _l,
  vl,
  yl,
  bl,
  xl,
  Sl,
  Cl,
  wl,
  Tl,
  El,
  Dl,
  Ol,
  kl,
  Y,
  Al,
  jl,
  Ml,
  Nl,
  Pl,
  Fl,
  Il,
  Ll,
  Rl,
  zl,
  Bl,
  Vl,
  Hl,
  Ul,
  Wl,
  Gl,
  Kl,
  ql,
  Jl,
  Yl,
  Xl,
  Zl,
  Ql,
  $l,
  eu,
  tu,
  nu,
  ru,
  iu,
  au,
  ou,
  su,
  cu,
  lu,
  uu,
  du,
  fu,
  pu,
  mu,
  hu,
  gu,
  X,
  _u,
  vu,
  yu,
  bu,
  xu,
  Su,
  Cu,
  Z,
  wu,
  Tu,
  Eu,
  Du,
  Ou,
  ku,
  Au,
  ju,
  Mu,
  Nu,
  Pu,
  Fu,
  Iu,
  Lu,
  Ru,
  zu,
  Bu,
  Vu,
  Hu,
  Uu,
  Wu,
  Gu,
  Ku,
  qu,
  Ju,
  Yu,
  Xu,
  Zu,
  Qu,
  $u,
  ed,
  td,
  nd,
  rd,
  id,
  ad,
  od,
  sd,
  cd,
  ld,
  ud,
  dd,
  fd,
  pd,
  md,
  hd,
  Q,
  $,
  gd,
  _d,
  vd,
  yd,
  bd,
  xd,
  Sd,
  Cd,
  wd,
  Td,
  Ed,
  Dd,
  Od,
  kd,
  Ad,
  jd,
  Md,
  Nd,
  Pd,
  Fd,
  Id,
  Ld,
  Rd,
  zd,
  Bd,
  Vd,
  Hd,
  Ud,
  Wd,
  Gd,
  Kd,
  qd,
  Jd,
  Yd,
  Xd,
  Zd,
  Qd,
  $d,
  ef,
  tf,
  nf,
  rf,
  af,
  sf,
  cf,
  lf,
  uf,
  df,
  ff,
  pf,
  mf,
  hf,
  gf,
  _f,
  vf,
  yf,
  bf,
  xf,
  Sf,
  Cf,
  wf,
  Tf,
  Ef,
  Df,
  Of,
  kf,
  Af,
  jf,
  Mf,
  Nf,
  Pf,
  Ff,
  If,
  Lf,
  Rf,
  zf,
  Bf,
  Vf,
  Hf,
  Uf,
  Wf,
  Gf,
  Kf,
  qf,
  Jf,
  Yf,
  Xf,
  Zf,
  Qf,
  $f,
  ep,
  tp,
  np,
  rp,
  ip,
  ap,
  op,
  sp,
  cp,
  lp,
  up,
  dp,
  fp,
  pp,
  mp,
  hp,
  gp,
  _p,
  vp,
  yp,
  bp,
  xp,
  Sp,
  Cp,
  wp,
  Tp,
  Ep,
  Dp,
  Op,
  kp,
  Ap,
  jp,
  Mp,
  Np,
  Pp,
  Fp,
  Ip,
  Lp,
  Rp,
  zp,
  Bp,
  Vp,
  Hp,
  Up,
  Wp,
  Gp,
  Kp,
  qp,
  Jp,
  Yp,
  Xp,
  Zp,
  Qp,
  $p,
  em,
  tm,
  nm,
  rm,
  im,
  am,
  om,
  sm,
  cm,
  lm,
  um,
  dm,
  fm,
  pm,
  mm,
  hm,
  gm,
  _m,
  vm,
  ym,
  bm,
  xm,
  Sm,
  Cm,
  wm,
  Tm,
  Em,
  Dm,
  Om,
  km,
  Am,
  jm,
  Mm,
  Nm,
  Pm,
  Fm,
  Im,
  Lm,
  Rm,
  zm,
  Bm,
  Vm,
  Hm,
  Um,
  Wm,
  Gm,
  Km,
  qm,
  Jm,
  Ym,
  Xm,
  Zm,
  Qm,
  $m,
  eh,
  th,
  nh,
  rh,
  ih,
  ah,
  oh,
  sh,
  ch,
  lh,
  uh,
  dh,
  fh,
  ph,
  mh,
  hh,
  gh,
  _h,
  vh,
  yh,
  bh,
  xh,
  Sh,
  Ch,
  wh,
  Th,
  Eh,
  Dh,
  Oh,
  kh,
  Ah,
  jh,
  Mh,
  Nh,
  Ph,
  Fh,
  Ih,
  Lh,
  Rh,
  zh,
  Bh,
  Vh,
  Hh,
  Uh,
  Wh = e(() => {
    s(),
      (Ga = `136`),
      (Ka = 0),
      (qa = 1),
      (Ja = 2),
      (Ya = 1),
      (Xa = 2),
      (Za = 3),
      (Qa = 0),
      ($a = 1),
      (eo = 2),
      (to = 1),
      (no = 0),
      (ro = 1),
      (io = 2),
      (ao = 3),
      (oo = 4),
      (so = 5),
      (co = 100),
      (lo = 101),
      (uo = 102),
      (fo = 103),
      (po = 104),
      (mo = 200),
      (ho = 201),
      (go = 202),
      (_o = 203),
      (vo = 204),
      (yo = 205),
      (bo = 206),
      (xo = 207),
      (So = 208),
      (Co = 209),
      (wo = 210),
      (To = 0),
      (Eo = 1),
      (Do = 2),
      (Oo = 3),
      (ko = 4),
      (Ao = 5),
      (jo = 6),
      (Mo = 7),
      (No = 0),
      (Po = 1),
      (Fo = 2),
      (Io = 0),
      (Lo = 1),
      (Ro = 2),
      (zo = 3),
      (Bo = 4),
      (Vo = 5),
      (Ho = 300),
      (Uo = 301),
      (Wo = 302),
      (Go = 303),
      (Ko = 304),
      (qo = 306),
      (Jo = 307),
      (Yo = 1e3),
      (Xo = 1001),
      (Zo = 1002),
      (Qo = 1003),
      ($o = 1004),
      (es = 1005),
      (ts = 1006),
      (ns = 1007),
      (rs = 1008),
      (os = 1009),
      (ss = 1010),
      (cs = 1011),
      (ls = 1012),
      (us = 1013),
      (ds = 1014),
      (fs = 1015),
      (ps = 1016),
      (ms = 1017),
      (hs = 1018),
      (gs = 1019),
      (_s = 1020),
      (vs = 1021),
      (ys = 1022),
      (bs = 1023),
      (xs = 1024),
      (Ss = 1025),
      (Cs = 1026),
      (ws = 1027),
      (Ts = 1028),
      (Es = 1029),
      (Ds = 1030),
      (Os = 1031),
      (ks = 1032),
      (As = 1033),
      (js = 33776),
      (Ms = 33777),
      (Ns = 33778),
      (Ps = 33779),
      (Fs = 35840),
      (Is = 35841),
      (Ls = 35842),
      (Rs = 35843),
      (zs = 36196),
      (Bs = 37492),
      (Vs = 37496),
      (Hs = 37808),
      (Us = 37809),
      (Ws = 37810),
      (Gs = 37811),
      (Ks = 37812),
      (qs = 37813),
      (Js = 37814),
      (Ys = 37815),
      (Xs = 37816),
      (Zs = 37817),
      (Qs = 37818),
      ($s = 37819),
      (ec = 37820),
      (tc = 37821),
      (nc = 36492),
      (rc = 37840),
      (ic = 37841),
      (ac = 37842),
      (oc = 37843),
      (sc = 37844),
      (cc = 37845),
      (lc = 37846),
      (uc = 37847),
      (dc = 37848),
      (fc = 37849),
      (pc = 37850),
      (mc = 37851),
      (hc = 37852),
      (gc = 37853),
      (_c = 2200),
      (vc = 2201),
      (yc = 2202),
      (bc = 2300),
      (xc = 2301),
      (Sc = 2302),
      (Cc = 2400),
      (wc = 2401),
      (Tc = 2402),
      (Ec = 2500),
      (Dc = 2501),
      (Oc = 0),
      (kc = 3e3),
      (Ac = 3001),
      (jc = 3200),
      (Mc = 3201),
      (Nc = 0),
      (Pc = 1),
      (Fc = 7680),
      (Ic = 519),
      (Lc = 35044),
      (Rc = 35048),
      (zc = `300 es`),
      (Bc = class {
        addEventListener(e, t) {
          this._listeners === void 0 && (this._listeners = {});
          let n = this._listeners;
          n[e] === void 0 && (n[e] = []),
            n[e].indexOf(t) === -1 && n[e].push(t);
        }
        hasEventListener(e, t) {
          if (this._listeners === void 0) return !1;
          let n = this._listeners;
          return n[e] !== void 0 && n[e].indexOf(t) !== -1;
        }
        removeEventListener(e, t) {
          if (this._listeners === void 0) return;
          let n = this._listeners[e];
          if (n !== void 0) {
            let e = n.indexOf(t);
            e !== -1 && n.splice(e, 1);
          }
        }
        dispatchEvent(e) {
          if (this._listeners === void 0) return;
          let t = this._listeners[e.type];
          if (t !== void 0) {
            e.target = this;
            let n = t.slice(0);
            for (let t = 0, r = n.length; t < r; t++) n[t].call(this, e);
            e.target = null;
          }
        }
      }),
      (Vc = []);
    for (let e = 0; e < 256; e++) Vc[e] = (e < 16 ? `0` : ``) + e.toString(16);
    (Hc = 1234567),
      (Uc = Math.PI / 180),
      (Wc = 180 / Math.PI),
      Object.freeze({
        __proto__: null,
        DEG2RAD: Uc,
        RAD2DEG: Wc,
        generateUUID: an,
        clamp: on,
        euclideanModulo: sn,
        mapLinear: cn,
        inverseLerp: ln,
        lerp: un,
        damp: dn,
        pingpong: fn,
        smoothstep: pn,
        smootherstep: mn,
        randInt: hn,
        randFloat: gn,
        randFloatSpread: _n,
        seededRandom: vn,
        degToRad: yn,
        radToDeg: bn,
        isPowerOfTwo: xn,
        ceilPowerOfTwo: Sn,
        floorPowerOfTwo: Cn,
        setQuaternionFromProperEuler: wn,
      }),
      (q = class {
        constructor(e = 0, t = 0) {
          (this.x = e), (this.y = t);
        }
        get width() {
          return this.x;
        }
        set width(e) {
          this.x = e;
        }
        get height() {
          return this.y;
        }
        set height(e) {
          this.y = e;
        }
        set(e, t) {
          return (this.x = e), (this.y = t), this;
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            default:
              throw Error(`index is out of range: ` + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            default:
              throw Error(`index is out of range: ` + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y);
        }
        copy(e) {
          return (this.x = e.x), (this.y = e.y), this;
        }
        add(e, t) {
          return t === void 0
            ? ((this.x += e.x), (this.y += e.y), this)
            : (console.warn(
                `THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.`
              ),
              this.addVectors(e, t));
        }
        addScalar(e) {
          return (this.x += e), (this.y += e), this;
        }
        addVectors(e, t) {
          return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
        }
        addScaledVector(e, t) {
          return (this.x += e.x * t), (this.y += e.y * t), this;
        }
        sub(e, t) {
          return t === void 0
            ? ((this.x -= e.x), (this.y -= e.y), this)
            : (console.warn(
                `THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.`
              ),
              this.subVectors(e, t));
        }
        subScalar(e) {
          return (this.x -= e), (this.y -= e), this;
        }
        subVectors(e, t) {
          return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
        }
        multiply(e) {
          return (this.x *= e.x), (this.y *= e.y), this;
        }
        multiplyScalar(e) {
          return (this.x *= e), (this.y *= e), this;
        }
        divide(e) {
          return (this.x /= e.x), (this.y /= e.y), this;
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        applyMatrix3(e) {
          let t = this.x,
            n = this.y,
            r = e.elements;
          return (
            (this.x = r[0] * t + r[3] * n + r[6]),
            (this.y = r[1] * t + r[4] * n + r[7]),
            this
          );
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
          );
        }
        roundToZero() {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            this
          );
        }
        negate() {
          return (this.x = -this.x), (this.y = -this.y), this;
        }
        dot(e) {
          return this.x * e.x + this.y * e.y;
        }
        cross(e) {
          return this.x * e.y - this.y * e.x;
        }
        lengthSq() {
          return this.x * this.x + this.y * this.y;
        }
        length() {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        }
        manhattanLength() {
          return Math.abs(this.x) + Math.abs(this.y);
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        angle() {
          return Math.atan2(-this.y, -this.x) + Math.PI;
        }
        distanceTo(e) {
          return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
          let t = this.x - e.x,
            n = this.y - e.y;
          return t * t + n * n;
        }
        manhattanDistanceTo(e) {
          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            this
          );
        }
        equals(e) {
          return e.x === this.x && e.y === this.y;
        }
        fromArray(e, t = 0) {
          return (this.x = e[t]), (this.y = e[t + 1]), this;
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.x), (e[t + 1] = this.y), e;
        }
        fromBufferAttribute(e, t, n) {
          return (
            n !== void 0 &&
              console.warn(
                `THREE.Vector2: offset has been removed from .fromBufferAttribute().`
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            this
          );
        }
        rotateAround(e, t) {
          let n = Math.cos(t),
            r = Math.sin(t),
            i = this.x - e.x,
            a = this.y - e.y;
          return (
            (this.x = i * n - a * r + e.x), (this.y = i * r + a * n + e.y), this
          );
        }
        random() {
          return (this.x = Math.random()), (this.y = Math.random()), this;
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y;
        }
      }),
      (q.prototype.isVector2 = !0),
      (Gc = class {
        constructor() {
          (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
            arguments.length > 0 &&
              console.error(
                `THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.`
              );
        }
        set(e, t, n, r, i, a, o, s, c) {
          let l = this.elements;
          return (
            (l[0] = e),
            (l[1] = r),
            (l[2] = o),
            (l[3] = t),
            (l[4] = i),
            (l[5] = s),
            (l[6] = n),
            (l[7] = a),
            (l[8] = c),
            this
          );
        }
        identity() {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        }
        copy(e) {
          let t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
          );
        }
        extractBasis(e, t, n) {
          return (
            e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
          );
        }
        setFromMatrix4(e) {
          let t = e.elements;
          return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
          );
        }
        multiply(e) {
          return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
          return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, t) {
          let n = e.elements,
            r = t.elements,
            i = this.elements,
            a = n[0],
            o = n[3],
            s = n[6],
            c = n[1],
            l = n[4],
            u = n[7],
            d = n[2],
            f = n[5],
            p = n[8],
            m = r[0],
            h = r[3],
            g = r[6],
            _ = r[1],
            v = r[4],
            y = r[7],
            b = r[2],
            x = r[5],
            S = r[8];
          return (
            (i[0] = a * m + o * _ + s * b),
            (i[3] = a * h + o * v + s * x),
            (i[6] = a * g + o * y + s * S),
            (i[1] = c * m + l * _ + u * b),
            (i[4] = c * h + l * v + u * x),
            (i[7] = c * g + l * y + u * S),
            (i[2] = d * m + f * _ + p * b),
            (i[5] = d * h + f * v + p * x),
            (i[8] = d * g + f * y + p * S),
            this
          );
        }
        multiplyScalar(e) {
          let t = this.elements;
          return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
          );
        }
        determinant() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            a = e[4],
            o = e[5],
            s = e[6],
            c = e[7],
            l = e[8];
          return (
            t * a * l -
            t * o * c -
            n * i * l +
            n * o * s +
            r * i * c -
            r * a * s
          );
        }
        invert() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            a = e[4],
            o = e[5],
            s = e[6],
            c = e[7],
            l = e[8],
            u = l * a - o * c,
            d = o * s - l * i,
            f = c * i - a * s,
            p = t * u + n * d + r * f;
          if (p === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
          let m = 1 / p;
          return (
            (e[0] = u * m),
            (e[1] = (r * c - l * n) * m),
            (e[2] = (o * n - r * a) * m),
            (e[3] = d * m),
            (e[4] = (l * t - r * s) * m),
            (e[5] = (r * i - o * t) * m),
            (e[6] = f * m),
            (e[7] = (n * s - c * t) * m),
            (e[8] = (a * t - n * i) * m),
            this
          );
        }
        transpose() {
          let e,
            t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
          );
        }
        getNormalMatrix(e) {
          return this.setFromMatrix4(e).invert().transpose();
        }
        transposeIntoArray(e) {
          let t = this.elements;
          return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
          );
        }
        setUvTransform(e, t, n, r, i, a, o) {
          let s = Math.cos(i),
            c = Math.sin(i);
          return (
            this.set(
              n * s,
              n * c,
              -n * (s * a + c * o) + a + e,
              -r * c,
              r * s,
              -r * (-c * a + s * o) + o + t,
              0,
              0,
              1
            ),
            this
          );
        }
        scale(e, t) {
          let n = this.elements;
          return (
            (n[0] *= e),
            (n[3] *= e),
            (n[6] *= e),
            (n[1] *= t),
            (n[4] *= t),
            (n[7] *= t),
            this
          );
        }
        rotate(e) {
          let t = Math.cos(e),
            n = Math.sin(e),
            r = this.elements,
            i = r[0],
            a = r[3],
            o = r[6],
            s = r[1],
            c = r[4],
            l = r[7];
          return (
            (r[0] = t * i + n * s),
            (r[3] = t * a + n * c),
            (r[6] = t * o + n * l),
            (r[1] = -n * i + t * s),
            (r[4] = -n * a + t * c),
            (r[7] = -n * o + t * l),
            this
          );
        }
        translate(e, t) {
          let n = this.elements;
          return (
            (n[0] += e * n[2]),
            (n[3] += e * n[5]),
            (n[6] += e * n[8]),
            (n[1] += t * n[2]),
            (n[4] += t * n[5]),
            (n[7] += t * n[8]),
            this
          );
        }
        equals(e) {
          let t = this.elements,
            n = e.elements;
          for (let e = 0; e < 9; e++) if (t[e] !== n[e]) return !1;
          return !0;
        }
        fromArray(e, t = 0) {
          for (let n = 0; n < 9; n++) this.elements[n] = e[n + t];
          return this;
        }
        toArray(e = [], t = 0) {
          let n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
          );
        }
        clone() {
          return new this.constructor().fromArray(this.elements);
        }
      }),
      (Gc.prototype.isMatrix3 = !0),
      (qc = class {
        static getDataURL(e) {
          if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > `u`)
            return e.src;
          let t;
          if (e instanceof HTMLCanvasElement) t = e;
          else {
            Kc === void 0 && (Kc = En(`canvas`)),
              (Kc.width = e.width),
              (Kc.height = e.height);
            let n = Kc.getContext(`2d`);
            e instanceof ImageData
              ? n.putImageData(e, 0, 0)
              : n.drawImage(e, 0, 0, e.width, e.height),
              (t = Kc);
          }
          return t.width > 2048 || t.height > 2048
            ? (console.warn(
                `THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons`,
                e
              ),
              t.toDataURL(`image/jpeg`, 0.6))
            : t.toDataURL(`image/png`);
        }
      }),
      (Jc = 0),
      (Yc = class e extends Bc {
        constructor(
          t = e.DEFAULT_IMAGE,
          n = e.DEFAULT_MAPPING,
          r = Xo,
          i = Xo,
          a = ts,
          o = rs,
          s = bs,
          c = os,
          l = 1,
          u = kc
        ) {
          super(),
            Object.defineProperty(this, `id`, { value: Jc++ }),
            (this.uuid = an()),
            (this.name = ``),
            (this.image = t),
            (this.mipmaps = []),
            (this.mapping = n),
            (this.wrapS = r),
            (this.wrapT = i),
            (this.magFilter = a),
            (this.minFilter = o),
            (this.anisotropy = l),
            (this.format = s),
            (this.internalFormat = null),
            (this.type = c),
            (this.offset = new q(0, 0)),
            (this.repeat = new q(1, 1)),
            (this.center = new q(0, 0)),
            (this.rotation = 0),
            (this.matrixAutoUpdate = !0),
            (this.matrix = new Gc()),
            (this.generateMipmaps = !0),
            (this.premultiplyAlpha = !1),
            (this.flipY = !0),
            (this.unpackAlignment = 4),
            (this.encoding = u),
            (this.userData = {}),
            (this.version = 0),
            (this.onUpdate = null),
            (this.isRenderTargetTexture = !1);
        }
        updateMatrix() {
          this.matrix.setUvTransform(
            this.offset.x,
            this.offset.y,
            this.repeat.x,
            this.repeat.y,
            this.rotation,
            this.center.x,
            this.center.y
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return (
            (this.name = e.name),
            (this.image = e.image),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.internalFormat = e.internalFormat),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            (this.rotation = e.rotation),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this.matrix.copy(e.matrix),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.encoding = e.encoding),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            this
          );
        }
        toJSON(e) {
          let t = e === void 0 || typeof e == `string`;
          if (!t && e.textures[this.uuid] !== void 0)
            return e.textures[this.uuid];
          let n = {
            metadata: {
              version: 4.5,
              type: `Texture`,
              generator: `Texture.toJSON`,
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment,
          };
          if (this.image !== void 0) {
            let r = this.image;
            if (
              (r.uuid === void 0 && (r.uuid = an()),
              !t && e.images[r.uuid] === void 0)
            ) {
              let t;
              if (Array.isArray(r)) {
                t = [];
                for (let e = 0, n = r.length; e < n; e++)
                  r[e].isDataTexture
                    ? t.push(Dn(r[e].image))
                    : t.push(Dn(r[e]));
              } else t = Dn(r);
              e.images[r.uuid] = { uuid: r.uuid, url: t };
            }
            n.image = r.uuid;
          }
          return (
            JSON.stringify(this.userData) !== `{}` &&
              (n.userData = this.userData),
            t || (e.textures[this.uuid] = n),
            n
          );
        }
        dispose() {
          this.dispatchEvent({ type: `dispose` });
        }
        transformUv(e) {
          if (this.mapping !== Ho) return e;
          if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
            switch (this.wrapS) {
              case Yo:
                e.x -= Math.floor(e.x);
                break;
              case Xo:
                e.x = e.x < 0 ? 0 : 1;
                break;
              case Zo:
                Math.abs(Math.floor(e.x) % 2) === 1
                  ? (e.x = Math.ceil(e.x) - e.x)
                  : (e.x -= Math.floor(e.x));
                break;
            }
          if (e.y < 0 || e.y > 1)
            switch (this.wrapT) {
              case Yo:
                e.y -= Math.floor(e.y);
                break;
              case Xo:
                e.y = e.y < 0 ? 0 : 1;
                break;
              case Zo:
                Math.abs(Math.floor(e.y) % 2) === 1
                  ? (e.y = Math.ceil(e.y) - e.y)
                  : (e.y -= Math.floor(e.y));
                break;
            }
          return this.flipY && (e.y = 1 - e.y), e;
        }
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
      }),
      (Yc.DEFAULT_IMAGE = void 0),
      (Yc.DEFAULT_MAPPING = Ho),
      (Yc.prototype.isTexture = !0),
      (Xc = class {
        constructor(e = 0, t = 0, n = 0, r = 1) {
          (this.x = e), (this.y = t), (this.z = n), (this.w = r);
        }
        get width() {
          return this.z;
        }
        set width(e) {
          this.z = e;
        }
        get height() {
          return this.w;
        }
        set height(e) {
          this.w = e;
        }
        set(e, t, n, r) {
          return (this.x = e), (this.y = t), (this.z = n), (this.w = r), this;
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setZ(e) {
          return (this.z = e), this;
        }
        setW(e) {
          return (this.w = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            case 3:
              this.w = t;
              break;
            default:
              throw Error(`index is out of range: ` + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw Error(`index is out of range: ` + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y, this.z, this.w);
        }
        copy(e) {
          return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = e.w === void 0 ? 1 : e.w),
            this
          );
        }
        add(e, t) {
          return t === void 0
            ? ((this.x += e.x),
              (this.y += e.y),
              (this.z += e.z),
              (this.w += e.w),
              this)
            : (console.warn(
                `THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.`
              ),
              this.addVectors(e, t));
        }
        addScalar(e) {
          return (
            (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
          );
        }
        addVectors(e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
          );
        }
        addScaledVector(e, t) {
          return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
          );
        }
        sub(e, t) {
          return t === void 0
            ? ((this.x -= e.x),
              (this.y -= e.y),
              (this.z -= e.z),
              (this.w -= e.w),
              this)
            : (console.warn(
                `THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.`
              ),
              this.subVectors(e, t));
        }
        subScalar(e) {
          return (
            (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
          );
        }
        subVectors(e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
          );
        }
        multiply(e) {
          return (
            (this.x *= e.x),
            (this.y *= e.y),
            (this.z *= e.z),
            (this.w *= e.w),
            this
          );
        }
        multiplyScalar(e) {
          return (
            (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
          );
        }
        applyMatrix4(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = this.w,
            a = e.elements;
          return (
            (this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i),
            (this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i),
            (this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i),
            (this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i),
            this
          );
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        setAxisAngleFromQuaternion(e) {
          this.w = 2 * Math.acos(e.w);
          let t = Math.sqrt(1 - e.w * e.w);
          return (
            t < 1e-4
              ? ((this.x = 1), (this.y = 0), (this.z = 0))
              : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
          );
        }
        setAxisAngleFromRotationMatrix(e) {
          let t,
            n,
            r,
            i,
            a = 0.01,
            o = 0.1,
            s = e.elements,
            c = s[0],
            l = s[4],
            u = s[8],
            d = s[1],
            f = s[5],
            p = s[9],
            m = s[2],
            h = s[6],
            g = s[10];
          if (
            Math.abs(l - d) < a &&
            Math.abs(u - m) < a &&
            Math.abs(p - h) < a
          ) {
            if (
              Math.abs(l + d) < o &&
              Math.abs(u + m) < o &&
              Math.abs(p + h) < o &&
              Math.abs(c + f + g - 3) < o
            )
              return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let e = (c + 1) / 2,
              s = (f + 1) / 2,
              _ = (g + 1) / 2,
              v = (l + d) / 4,
              y = (u + m) / 4,
              b = (p + h) / 4;
            return (
              e > s && e > _
                ? e < a
                  ? ((n = 0), (r = 0.707106781), (i = 0.707106781))
                  : ((n = Math.sqrt(e)), (r = v / n), (i = y / n))
                : s > _
                ? s < a
                  ? ((n = 0.707106781), (r = 0), (i = 0.707106781))
                  : ((r = Math.sqrt(s)), (n = v / r), (i = b / r))
                : _ < a
                ? ((n = 0.707106781), (r = 0.707106781), (i = 0))
                : ((i = Math.sqrt(_)), (n = y / i), (r = b / i)),
              this.set(n, r, i, t),
              this
            );
          }
          let _ = Math.sqrt(
            (h - p) * (h - p) + (u - m) * (u - m) + (d - l) * (d - l)
          );
          return (
            Math.abs(_) < 0.001 && (_ = 1),
            (this.x = (h - p) / _),
            (this.y = (u - m) / _),
            (this.z = (d - l) / _),
            (this.w = Math.acos((c + f + g - 1) / 2)),
            this
          );
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            (this.w = Math.max(e, Math.min(t, this.w))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
          );
        }
        roundToZero() {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
            this
          );
        }
        negate() {
          return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
          );
        }
        dot(e) {
          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        }
        lengthSq() {
          return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
          );
        }
        length() {
          return Math.sqrt(
            this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
          );
        }
        manhattanLength() {
          return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
          );
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            (this.w = e.w + (t.w - e.w) * n),
            this
          );
        }
        equals(e) {
          return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
          );
        }
        fromArray(e, t = 0) {
          return (
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
          );
        }
        fromBufferAttribute(e, t, n) {
          return (
            n !== void 0 &&
              console.warn(
                `THREE.Vector4: offset has been removed from .fromBufferAttribute().`
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
          );
        }
        random() {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            (this.w = Math.random()),
            this
          );
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y, yield this.z, yield this.w;
        }
      }),
      (Xc.prototype.isVector4 = !0),
      (Zc = class extends Bc {
        constructor(e, t, n = {}) {
          super(),
            (this.width = e),
            (this.height = t),
            (this.depth = 1),
            (this.scissor = new Xc(0, 0, e, t)),
            (this.scissorTest = !1),
            (this.viewport = new Xc(0, 0, e, t)),
            (this.texture = new Yc(
              void 0,
              n.mapping,
              n.wrapS,
              n.wrapT,
              n.magFilter,
              n.minFilter,
              n.format,
              n.type,
              n.anisotropy,
              n.encoding
            )),
            (this.texture.isRenderTargetTexture = !0),
            (this.texture.image = { width: e, height: t, depth: 1 }),
            (this.texture.generateMipmaps =
              n.generateMipmaps !== void 0 && n.generateMipmaps),
            (this.texture.internalFormat =
              n.internalFormat === void 0 ? null : n.internalFormat),
            (this.texture.minFilter =
              n.minFilter === void 0 ? ts : n.minFilter),
            (this.depthBuffer = n.depthBuffer === void 0 || n.depthBuffer),
            (this.stencilBuffer =
              n.stencilBuffer !== void 0 && n.stencilBuffer),
            (this.depthTexture =
              n.depthTexture === void 0 ? null : n.depthTexture);
        }
        setTexture(e) {
          (e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth,
          }),
            (this.texture = e);
        }
        setSize(e, t, n = 1) {
          (this.width !== e || this.height !== t || this.depth !== n) &&
            ((this.width = e),
            (this.height = t),
            (this.depth = n),
            (this.texture.image.width = e),
            (this.texture.image.height = t),
            (this.texture.image.depth = n),
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t);
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return (
            (this.width = e.width),
            (this.height = e.height),
            (this.depth = e.depth),
            this.viewport.copy(e.viewport),
            (this.texture = e.texture.clone()),
            (this.texture.image = { ...this.texture.image }),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.depthTexture = e.depthTexture),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: `dispose` });
        }
      }),
      (Zc.prototype.isWebGLRenderTarget = !0),
      (Qc = class extends Zc {
        constructor(e, t, n) {
          super(e, t);
          let r = this.texture;
          this.texture = [];
          for (let e = 0; e < n; e++) this.texture[e] = r.clone();
        }
        setSize(e, t, n = 1) {
          if (this.width !== e || this.height !== t || this.depth !== n) {
            (this.width = e), (this.height = t), (this.depth = n);
            for (let r = 0, i = this.texture.length; r < i; r++)
              (this.texture[r].image.width = e),
                (this.texture[r].image.height = t),
                (this.texture[r].image.depth = n);
            this.dispose();
          }
          return (
            this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this
          );
        }
        copy(e) {
          this.dispose(),
            (this.width = e.width),
            (this.height = e.height),
            (this.depth = e.depth),
            this.viewport.set(0, 0, this.width, this.height),
            this.scissor.set(0, 0, this.width, this.height),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.depthTexture = e.depthTexture),
            (this.texture.length = 0);
          for (let t = 0, n = e.texture.length; t < n; t++)
            this.texture[t] = e.texture[t].clone();
          return this;
        }
      }),
      (Qc.prototype.isWebGLMultipleRenderTargets = !0),
      ($c = class extends Zc {
        constructor(e, t, n = {}) {
          super(e, t, n),
            (this.samples = 4),
            (this.ignoreDepthForMultisampleCopy =
              n.ignoreDepth === void 0 || n.ignoreDepth),
            (this.useRenderToTexture =
              n.useRenderToTexture !== void 0 && n.useRenderToTexture),
            (this.useRenderbuffer = !1 === this.useRenderToTexture);
        }
        copy(e) {
          return (
            super.copy.call(this, e),
            (this.samples = e.samples),
            (this.useRenderToTexture = e.useRenderToTexture),
            (this.useRenderbuffer = e.useRenderbuffer),
            this
          );
        }
      }),
      ($c.prototype.isWebGLMultisampleRenderTarget = !0),
      (el = class {
        constructor(e = 0, t = 0, n = 0, r = 1) {
          (this._x = e), (this._y = t), (this._z = n), (this._w = r);
        }
        static slerp(e, t, n, r) {
          return (
            console.warn(
              `THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.`
            ),
            n.slerpQuaternions(e, t, r)
          );
        }
        static slerpFlat(e, t, n, r, i, a, o) {
          let s = n[r + 0],
            c = n[r + 1],
            l = n[r + 2],
            u = n[r + 3],
            d = i[a + 0],
            f = i[a + 1],
            p = i[a + 2],
            m = i[a + 3];
          if (o !== 0)
            if (o !== 1) {
              if (u !== m || s !== d || c !== f || l !== p) {
                let e = 1 - o,
                  t = s * d + c * f + l * p + u * m,
                  n = t >= 0 ? 1 : -1,
                  r = 1 - t * t;
                if (r > 2 ** -52) {
                  let i = Math.sqrt(r),
                    a = Math.atan2(i, t * n);
                  (e = Math.sin(e * a) / i), (o = Math.sin(o * a) / i);
                }
                let i = o * n;
                if (
                  ((s = s * e + d * i),
                  (c = c * e + f * i),
                  (l = l * e + p * i),
                  (u = u * e + m * i),
                  e === 1 - o)
                ) {
                  let e = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
                  (s *= e), (c *= e), (l *= e), (u *= e);
                }
              }
              (e[t] = s), (e[t + 1] = c), (e[t + 2] = l), (e[t + 3] = u);
            } else
              (e[t + 0] = d), (e[t + 1] = f), (e[t + 2] = p), (e[t + 3] = m);
          else (e[t + 0] = s), (e[t + 1] = c), (e[t + 2] = l), (e[t + 3] = u);
        }
        static multiplyQuaternionsFlat(e, t, n, r, i, a) {
          let o = n[r],
            s = n[r + 1],
            c = n[r + 2],
            l = n[r + 3],
            u = i[a],
            d = i[a + 1],
            f = i[a + 2],
            p = i[a + 3];
          return (
            (e[t] = o * p + l * u + s * f - c * d),
            (e[t + 1] = s * p + l * d + c * u - o * f),
            (e[t + 2] = c * p + l * f + o * d - s * u),
            (e[t + 3] = l * p - o * u - s * d - c * f),
            e
          );
        }
        get x() {
          return this._x;
        }
        set x(e) {
          (this._x = e), this._onChangeCallback();
        }
        get y() {
          return this._y;
        }
        set y(e) {
          (this._y = e), this._onChangeCallback();
        }
        get z() {
          return this._z;
        }
        set z(e) {
          (this._z = e), this._onChangeCallback();
        }
        get w() {
          return this._w;
        }
        set w(e) {
          (this._w = e), this._onChangeCallback();
        }
        set(e, t, n, r) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = r),
            this._onChangeCallback(),
            this
          );
        }
        clone() {
          return new this.constructor(this._x, this._y, this._z, this._w);
        }
        copy(e) {
          return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this._onChangeCallback(),
            this
          );
        }
        setFromEuler(e, t) {
          if (!(e && e.isEuler))
            throw Error(
              `THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.`
            );
          let n = e._x,
            r = e._y,
            i = e._z,
            a = e._order,
            o = Math.cos,
            s = Math.sin,
            c = o(n / 2),
            l = o(r / 2),
            u = o(i / 2),
            d = s(n / 2),
            f = s(r / 2),
            p = s(i / 2);
          switch (a) {
            case `XYZ`:
              (this._x = d * l * u + c * f * p),
                (this._y = c * f * u - d * l * p),
                (this._z = c * l * p + d * f * u),
                (this._w = c * l * u - d * f * p);
              break;
            case `YXZ`:
              (this._x = d * l * u + c * f * p),
                (this._y = c * f * u - d * l * p),
                (this._z = c * l * p - d * f * u),
                (this._w = c * l * u + d * f * p);
              break;
            case `ZXY`:
              (this._x = d * l * u - c * f * p),
                (this._y = c * f * u + d * l * p),
                (this._z = c * l * p + d * f * u),
                (this._w = c * l * u - d * f * p);
              break;
            case `ZYX`:
              (this._x = d * l * u - c * f * p),
                (this._y = c * f * u + d * l * p),
                (this._z = c * l * p - d * f * u),
                (this._w = c * l * u + d * f * p);
              break;
            case `YZX`:
              (this._x = d * l * u + c * f * p),
                (this._y = c * f * u + d * l * p),
                (this._z = c * l * p - d * f * u),
                (this._w = c * l * u - d * f * p);
              break;
            case `XZY`:
              (this._x = d * l * u - c * f * p),
                (this._y = c * f * u - d * l * p),
                (this._z = c * l * p + d * f * u),
                (this._w = c * l * u + d * f * p);
              break;
            default:
              console.warn(
                `THREE.Quaternion: .setFromEuler() encountered an unknown order: ` +
                  a
              );
          }
          return !1 !== t && this._onChangeCallback(), this;
        }
        setFromAxisAngle(e, t) {
          let n = t / 2,
            r = Math.sin(n);
          return (
            (this._x = e.x * r),
            (this._y = e.y * r),
            (this._z = e.z * r),
            (this._w = Math.cos(n)),
            this._onChangeCallback(),
            this
          );
        }
        setFromRotationMatrix(e) {
          let t = e.elements,
            n = t[0],
            r = t[4],
            i = t[8],
            a = t[1],
            o = t[5],
            s = t[9],
            c = t[2],
            l = t[6],
            u = t[10],
            d = n + o + u;
          if (d > 0) {
            let e = 0.5 / Math.sqrt(d + 1);
            (this._w = 0.25 / e),
              (this._x = (l - s) * e),
              (this._y = (i - c) * e),
              (this._z = (a - r) * e);
          } else if (n > o && n > u) {
            let e = 2 * Math.sqrt(1 + n - o - u);
            (this._w = (l - s) / e),
              (this._x = 0.25 * e),
              (this._y = (r + a) / e),
              (this._z = (i + c) / e);
          } else if (o > u) {
            let e = 2 * Math.sqrt(1 + o - n - u);
            (this._w = (i - c) / e),
              (this._x = (r + a) / e),
              (this._y = 0.25 * e),
              (this._z = (s + l) / e);
          } else {
            let e = 2 * Math.sqrt(1 + u - n - o);
            (this._w = (a - r) / e),
              (this._x = (i + c) / e),
              (this._y = (s + l) / e),
              (this._z = 0.25 * e);
          }
          return this._onChangeCallback(), this;
        }
        setFromUnitVectors(e, t) {
          let n = e.dot(t) + 1;
          return (
            n < 2 ** -52
              ? ((n = 0),
                Math.abs(e.x) > Math.abs(e.z)
                  ? ((this._x = -e.y),
                    (this._y = e.x),
                    (this._z = 0),
                    (this._w = n))
                  : ((this._x = 0),
                    (this._y = -e.z),
                    (this._z = e.y),
                    (this._w = n)))
              : ((this._x = e.y * t.z - e.z * t.y),
                (this._y = e.z * t.x - e.x * t.z),
                (this._z = e.x * t.y - e.y * t.x),
                (this._w = n)),
            this.normalize()
          );
        }
        angleTo(e) {
          return 2 * Math.acos(Math.abs(on(this.dot(e), -1, 1)));
        }
        rotateTowards(e, t) {
          let n = this.angleTo(e);
          if (n === 0) return this;
          let r = Math.min(1, t / n);
          return this.slerp(e, r), this;
        }
        identity() {
          return this.set(0, 0, 0, 1);
        }
        invert() {
          return this.conjugate();
        }
        conjugate() {
          return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this._onChangeCallback(),
            this
          );
        }
        dot(e) {
          return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
          );
        }
        lengthSq() {
          return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
          );
        }
        length() {
          return Math.sqrt(
            this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
          );
        }
        normalize() {
          let e = this.length();
          return (
            e === 0
              ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
              : ((e = 1 / e),
                (this._x *= e),
                (this._y *= e),
                (this._z *= e),
                (this._w *= e)),
            this._onChangeCallback(),
            this
          );
        }
        multiply(e, t) {
          return t === void 0
            ? this.multiplyQuaternions(this, e)
            : (console.warn(
                `THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.`
              ),
              this.multiplyQuaternions(e, t));
        }
        premultiply(e) {
          return this.multiplyQuaternions(e, this);
        }
        multiplyQuaternions(e, t) {
          let n = e._x,
            r = e._y,
            i = e._z,
            a = e._w,
            o = t._x,
            s = t._y,
            c = t._z,
            l = t._w;
          return (
            (this._x = n * l + a * o + r * c - i * s),
            (this._y = r * l + a * s + i * o - n * c),
            (this._z = i * l + a * c + n * s - r * o),
            (this._w = a * l - n * o - r * s - i * c),
            this._onChangeCallback(),
            this
          );
        }
        slerp(e, t) {
          if (t === 0) return this;
          if (t === 1) return this.copy(e);
          let n = this._x,
            r = this._y,
            i = this._z,
            a = this._w,
            o = a * e._w + n * e._x + r * e._y + i * e._z;
          if (
            (o < 0
              ? ((this._w = -e._w),
                (this._x = -e._x),
                (this._y = -e._y),
                (this._z = -e._z),
                (o = -o))
              : this.copy(e),
            o >= 1)
          )
            return (
              (this._w = a), (this._x = n), (this._y = r), (this._z = i), this
            );
          let s = 1 - o * o;
          if (s <= 2 ** -52) {
            let e = 1 - t;
            return (
              (this._w = e * a + t * this._w),
              (this._x = e * n + t * this._x),
              (this._y = e * r + t * this._y),
              (this._z = e * i + t * this._z),
              this.normalize(),
              this._onChangeCallback(),
              this
            );
          }
          let c = Math.sqrt(s),
            l = Math.atan2(c, o),
            u = Math.sin((1 - t) * l) / c,
            d = Math.sin(t * l) / c;
          return (
            (this._w = a * u + this._w * d),
            (this._x = n * u + this._x * d),
            (this._y = r * u + this._y * d),
            (this._z = i * u + this._z * d),
            this._onChangeCallback(),
            this
          );
        }
        slerpQuaternions(e, t, n) {
          this.copy(e).slerp(t, n);
        }
        random() {
          let e = Math.random(),
            t = Math.sqrt(1 - e),
            n = Math.sqrt(e),
            r = 2 * Math.PI * Math.random(),
            i = 2 * Math.PI * Math.random();
          return this.set(
            t * Math.cos(r),
            n * Math.sin(i),
            n * Math.cos(i),
            t * Math.sin(r)
          );
        }
        equals(e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
          );
        }
        fromArray(e, t = 0) {
          return (
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this._onChangeCallback(),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
          );
        }
        fromBufferAttribute(e, t) {
          return (
            (this._x = e.getX(t)),
            (this._y = e.getY(t)),
            (this._z = e.getZ(t)),
            (this._w = e.getW(t)),
            this
          );
        }
        _onChange(e) {
          return (this._onChangeCallback = e), this;
        }
        _onChangeCallback() {}
      }),
      (el.prototype.isQuaternion = !0),
      (J = class {
        constructor(e = 0, t = 0, n = 0) {
          (this.x = e), (this.y = t), (this.z = n);
        }
        set(e, t, n) {
          return (
            n === void 0 && (n = this.z),
            (this.x = e),
            (this.y = t),
            (this.z = n),
            this
          );
        }
        setScalar(e) {
          return (this.x = e), (this.y = e), (this.z = e), this;
        }
        setX(e) {
          return (this.x = e), this;
        }
        setY(e) {
          return (this.y = e), this;
        }
        setZ(e) {
          return (this.z = e), this;
        }
        setComponent(e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            default:
              throw Error(`index is out of range: ` + e);
          }
          return this;
        }
        getComponent(e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            default:
              throw Error(`index is out of range: ` + e);
          }
        }
        clone() {
          return new this.constructor(this.x, this.y, this.z);
        }
        copy(e) {
          return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
        }
        add(e, t) {
          return t === void 0
            ? ((this.x += e.x), (this.y += e.y), (this.z += e.z), this)
            : (console.warn(
                `THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.`
              ),
              this.addVectors(e, t));
        }
        addScalar(e) {
          return (this.x += e), (this.y += e), (this.z += e), this;
        }
        addVectors(e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            this
          );
        }
        addScaledVector(e, t) {
          return (
            (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
          );
        }
        sub(e, t) {
          return t === void 0
            ? ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this)
            : (console.warn(
                `THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.`
              ),
              this.subVectors(e, t));
        }
        subScalar(e) {
          return (this.x -= e), (this.y -= e), (this.z -= e), this;
        }
        subVectors(e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            this
          );
        }
        multiply(e, t) {
          return t === void 0
            ? ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this)
            : (console.warn(
                `THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.`
              ),
              this.multiplyVectors(e, t));
        }
        multiplyScalar(e) {
          return (this.x *= e), (this.y *= e), (this.z *= e), this;
        }
        multiplyVectors(e, t) {
          return (
            (this.x = e.x * t.x),
            (this.y = e.y * t.y),
            (this.z = e.z * t.z),
            this
          );
        }
        applyEuler(e) {
          return (
            (e && e.isEuler) ||
              console.error(
                `THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.`
              ),
            this.applyQuaternion(nl.setFromEuler(e))
          );
        }
        applyAxisAngle(e, t) {
          return this.applyQuaternion(nl.setFromAxisAngle(e, t));
        }
        applyMatrix3(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[3] * n + i[6] * r),
            (this.y = i[1] * t + i[4] * n + i[7] * r),
            (this.z = i[2] * t + i[5] * n + i[8] * r),
            this
          );
        }
        applyNormalMatrix(e) {
          return this.applyMatrix3(e).normalize();
        }
        applyMatrix4(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements,
            a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
          return (
            (this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a),
            (this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a),
            (this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a),
            this
          );
        }
        applyQuaternion(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.x,
            a = e.y,
            o = e.z,
            s = e.w,
            c = s * t + a * r - o * n,
            l = s * n + o * t - i * r,
            u = s * r + i * n - a * t,
            d = -i * t - a * n - o * r;
          return (
            (this.x = c * s + d * -i + l * -o - u * -a),
            (this.y = l * s + d * -a + u * -i - c * -o),
            (this.z = u * s + d * -o + c * -a - l * -i),
            this
          );
        }
        project(e) {
          return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
            e.projectionMatrix
          );
        }
        unproject(e) {
          return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
            e.matrixWorld
          );
        }
        transformDirection(e) {
          let t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[4] * n + i[8] * r),
            (this.y = i[1] * t + i[5] * n + i[9] * r),
            (this.z = i[2] * t + i[6] * n + i[10] * r),
            this.normalize()
          );
        }
        divide(e) {
          return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
        }
        divideScalar(e) {
          return this.multiplyScalar(1 / e);
        }
        min(e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            this
          );
        }
        max(e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            this
          );
        }
        clamp(e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            this
          );
        }
        clampScalar(e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            this
          );
        }
        clampLength(e, t) {
          let n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        }
        floor() {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            this
          );
        }
        ceil() {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            this
          );
        }
        round() {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            this
          );
        }
        roundToZero() {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            this
          );
        }
        negate() {
          return (
            (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
          );
        }
        dot(e) {
          return this.x * e.x + this.y * e.y + this.z * e.z;
        }
        lengthSq() {
          return this.x * this.x + this.y * this.y + this.z * this.z;
        }
        length() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        }
        manhattanLength() {
          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        }
        normalize() {
          return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
          return this.normalize().multiplyScalar(e);
        }
        lerp(e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            this
          );
        }
        lerpVectors(e, t, n) {
          return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            this
          );
        }
        cross(e, t) {
          return t === void 0
            ? this.crossVectors(this, e)
            : (console.warn(
                `THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.`
              ),
              this.crossVectors(e, t));
        }
        crossVectors(e, t) {
          let n = e.x,
            r = e.y,
            i = e.z,
            a = t.x,
            o = t.y,
            s = t.z;
          return (
            (this.x = r * s - i * o),
            (this.y = i * a - n * s),
            (this.z = n * o - r * a),
            this
          );
        }
        projectOnVector(e) {
          let t = e.lengthSq();
          if (t === 0) return this.set(0, 0, 0);
          let n = e.dot(this) / t;
          return this.copy(e).multiplyScalar(n);
        }
        projectOnPlane(e) {
          return tl.copy(this).projectOnVector(e), this.sub(tl);
        }
        reflect(e) {
          return this.sub(tl.copy(e).multiplyScalar(2 * this.dot(e)));
        }
        angleTo(e) {
          let t = Math.sqrt(this.lengthSq() * e.lengthSq());
          if (t === 0) return Math.PI / 2;
          let n = this.dot(e) / t;
          return Math.acos(on(n, -1, 1));
        }
        distanceTo(e) {
          return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
          let t = this.x - e.x,
            n = this.y - e.y,
            r = this.z - e.z;
          return t * t + n * n + r * r;
        }
        manhattanDistanceTo(e) {
          return (
            Math.abs(this.x - e.x) +
            Math.abs(this.y - e.y) +
            Math.abs(this.z - e.z)
          );
        }
        setFromSpherical(e) {
          return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
        }
        setFromSphericalCoords(e, t, n) {
          let r = Math.sin(t) * e;
          return (
            (this.x = r * Math.sin(n)),
            (this.y = Math.cos(t) * e),
            (this.z = r * Math.cos(n)),
            this
          );
        }
        setFromCylindrical(e) {
          return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
        }
        setFromCylindricalCoords(e, t, n) {
          return (
            (this.x = e * Math.sin(t)),
            (this.y = n),
            (this.z = e * Math.cos(t)),
            this
          );
        }
        setFromMatrixPosition(e) {
          let t = e.elements;
          return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
        }
        setFromMatrixScale(e) {
          let t = this.setFromMatrixColumn(e, 0).length(),
            n = this.setFromMatrixColumn(e, 1).length(),
            r = this.setFromMatrixColumn(e, 2).length();
          return (this.x = t), (this.y = n), (this.z = r), this;
        }
        setFromMatrixColumn(e, t) {
          return this.fromArray(e.elements, 4 * t);
        }
        setFromMatrix3Column(e, t) {
          return this.fromArray(e.elements, 3 * t);
        }
        equals(e) {
          return e.x === this.x && e.y === this.y && e.z === this.z;
        }
        fromArray(e, t = 0) {
          return (
            (this.x = e[t]), (this.y = e[t + 1]), (this.z = e[t + 2]), this
          );
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e;
        }
        fromBufferAttribute(e, t, n) {
          return (
            n !== void 0 &&
              console.warn(
                `THREE.Vector3: offset has been removed from .fromBufferAttribute().`
              ),
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            this
          );
        }
        random() {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            this
          );
        }
        randomDirection() {
          let e = 2 * (Math.random() - 0.5),
            t = Math.random() * Math.PI * 2,
            n = Math.sqrt(1 - e ** 2);
          return (
            (this.x = n * Math.cos(t)),
            (this.y = n * Math.sin(t)),
            (this.z = e),
            this
          );
        }
        *[Symbol.iterator]() {
          yield this.x, yield this.y, yield this.z;
        }
      }),
      (J.prototype.isVector3 = !0),
      (tl = new J()),
      (nl = new el()),
      (rl = class {
        constructor(
          e = new J(1 / 0, 1 / 0, 1 / 0),
          t = new J(-1 / 0, -1 / 0, -1 / 0)
        ) {
          (this.min = e), (this.max = t);
        }
        set(e, t) {
          return this.min.copy(e), this.max.copy(t), this;
        }
        setFromArray(e) {
          let t = 1 / 0,
            n = 1 / 0,
            r = 1 / 0,
            i = -1 / 0,
            a = -1 / 0,
            o = -1 / 0;
          for (let s = 0, c = e.length; s < c; s += 3) {
            let c = e[s],
              l = e[s + 1],
              u = e[s + 2];
            c < t && (t = c),
              l < n && (n = l),
              u < r && (r = u),
              c > i && (i = c),
              l > a && (a = l),
              u > o && (o = u);
          }
          return this.min.set(t, n, r), this.max.set(i, a, o), this;
        }
        setFromBufferAttribute(e) {
          let t = 1 / 0,
            n = 1 / 0,
            r = 1 / 0,
            i = -1 / 0,
            a = -1 / 0,
            o = -1 / 0;
          for (let s = 0, c = e.count; s < c; s++) {
            let c = e.getX(s),
              l = e.getY(s),
              u = e.getZ(s);
            c < t && (t = c),
              l < n && (n = l),
              u < r && (r = u),
              c > i && (i = c),
              l > a && (a = l),
              u > o && (o = u);
          }
          return this.min.set(t, n, r), this.max.set(i, a, o), this;
        }
        setFromPoints(e) {
          this.makeEmpty();
          for (let t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
          return this;
        }
        setFromCenterAndSize(e, t) {
          let n = al.copy(t).multiplyScalar(0.5);
          return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
        }
        setFromObject(e) {
          return this.makeEmpty(), this.expandByObject(e);
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
          return (
            (this.min.x = this.min.y = this.min.z = 1 / 0),
            (this.max.x = this.max.y = this.max.z = -1 / 0),
            this
          );
        }
        isEmpty() {
          return (
            this.max.x < this.min.x ||
            this.max.y < this.min.y ||
            this.max.z < this.min.z
          );
        }
        getCenter(e) {
          return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5);
        }
        getSize(e) {
          return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
          return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
          return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
          return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        expandByObject(e) {
          e.updateWorldMatrix(!1, !1);
          let t = e.geometry;
          t !== void 0 &&
            (t.boundingBox === null && t.computeBoundingBox(),
            ol.copy(t.boundingBox),
            ol.applyMatrix4(e.matrixWorld),
            this.union(ol));
          let n = e.children;
          for (let e = 0, t = n.length; e < t; e++) this.expandByObject(n[e]);
          return this;
        }
        containsPoint(e) {
          return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y ||
            e.z < this.min.z ||
            e.z > this.max.z
          );
        }
        containsBox(e) {
          return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y &&
            this.min.z <= e.min.z &&
            e.max.z <= this.max.z
          );
        }
        getParameter(e, t) {
          return t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
          );
        }
        intersectsBox(e) {
          return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y ||
            e.max.z < this.min.z ||
            e.min.z > this.max.z
          );
        }
        intersectsSphere(e) {
          return (
            this.clampPoint(e.center, al),
            al.distanceToSquared(e.center) <= e.radius * e.radius
          );
        }
        intersectsPlane(e) {
          let t, n;
          return (
            e.normal.x > 0
              ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
              : ((t = e.normal.x * this.max.x), (n = e.normal.x * this.min.x)),
            e.normal.y > 0
              ? ((t += e.normal.y * this.min.y), (n += e.normal.y * this.max.y))
              : ((t += e.normal.y * this.max.y),
                (n += e.normal.y * this.min.y)),
            e.normal.z > 0
              ? ((t += e.normal.z * this.min.z), (n += e.normal.z * this.max.z))
              : ((t += e.normal.z * this.max.z),
                (n += e.normal.z * this.min.z)),
            t <= -e.constant && n >= -e.constant
          );
        }
        intersectsTriangle(e) {
          if (this.isEmpty()) return !1;
          this.getCenter(pl),
            ml.subVectors(this.max, pl),
            sl.subVectors(e.a, pl),
            cl.subVectors(e.b, pl),
            ll.subVectors(e.c, pl),
            ul.subVectors(cl, sl),
            dl.subVectors(ll, cl),
            fl.subVectors(sl, ll);
          let t = [
            0,
            -ul.z,
            ul.y,
            0,
            -dl.z,
            dl.y,
            0,
            -fl.z,
            fl.y,
            ul.z,
            0,
            -ul.x,
            dl.z,
            0,
            -dl.x,
            fl.z,
            0,
            -fl.x,
            -ul.y,
            ul.x,
            0,
            -dl.y,
            dl.x,
            0,
            -fl.y,
            fl.x,
            0,
          ];
          return !On(t, sl, cl, ll, ml) ||
            ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !On(t, sl, cl, ll, ml))
            ? !1
            : (hl.crossVectors(ul, dl),
              (t = [hl.x, hl.y, hl.z]),
              On(t, sl, cl, ll, ml));
        }
        clampPoint(e, t) {
          return t.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
          return al.copy(e).clamp(this.min, this.max).sub(e).length();
        }
        getBoundingSphere(e) {
          return (
            this.getCenter(e.center),
            (e.radius = 0.5 * this.getSize(al).length()),
            e
          );
        }
        intersect(e) {
          return (
            this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
          );
        }
        union(e) {
          return this.min.min(e.min), this.max.max(e.max), this;
        }
        applyMatrix4(e) {
          return this.isEmpty()
            ? this
            : (il[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
              il[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
              il[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
              il[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
              il[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
              il[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
              il[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
              il[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
              this.setFromPoints(il),
              this);
        }
        translate(e) {
          return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
          return e.min.equals(this.min) && e.max.equals(this.max);
        }
      }),
      (rl.prototype.isBox3 = !0),
      (il = [
        new J(),
        new J(),
        new J(),
        new J(),
        new J(),
        new J(),
        new J(),
        new J(),
      ]),
      (al = new J()),
      (ol = new rl()),
      (sl = new J()),
      (cl = new J()),
      (ll = new J()),
      (ul = new J()),
      (dl = new J()),
      (fl = new J()),
      (pl = new J()),
      (ml = new J()),
      (hl = new J()),
      (gl = new J()),
      (_l = new rl()),
      (vl = new J()),
      (yl = new J()),
      (bl = new J()),
      (xl = class {
        constructor(e = new J(), t = -1) {
          (this.center = e), (this.radius = t);
        }
        set(e, t) {
          return this.center.copy(e), (this.radius = t), this;
        }
        setFromPoints(e, t) {
          let n = this.center;
          t === void 0 ? _l.setFromPoints(e).getCenter(n) : n.copy(t);
          let r = 0;
          for (let t = 0, i = e.length; t < i; t++)
            r = Math.max(r, n.distanceToSquared(e[t]));
          return (this.radius = Math.sqrt(r)), this;
        }
        copy(e) {
          return this.center.copy(e.center), (this.radius = e.radius), this;
        }
        isEmpty() {
          return this.radius < 0;
        }
        makeEmpty() {
          return this.center.set(0, 0, 0), (this.radius = -1), this;
        }
        containsPoint(e) {
          return e.distanceToSquared(this.center) <= this.radius * this.radius;
        }
        distanceToPoint(e) {
          return e.distanceTo(this.center) - this.radius;
        }
        intersectsSphere(e) {
          let t = this.radius + e.radius;
          return e.center.distanceToSquared(this.center) <= t * t;
        }
        intersectsBox(e) {
          return e.intersectsSphere(this);
        }
        intersectsPlane(e) {
          return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
        }
        clampPoint(e, t) {
          let n = this.center.distanceToSquared(e);
          return (
            t.copy(e),
            n > this.radius * this.radius &&
              (t.sub(this.center).normalize(),
              t.multiplyScalar(this.radius).add(this.center)),
            t
          );
        }
        getBoundingBox(e) {
          return this.isEmpty()
            ? (e.makeEmpty(), e)
            : (e.set(this.center, this.center),
              e.expandByScalar(this.radius),
              e);
        }
        applyMatrix4(e) {
          return (
            this.center.applyMatrix4(e),
            (this.radius *= e.getMaxScaleOnAxis()),
            this
          );
        }
        translate(e) {
          return this.center.add(e), this;
        }
        expandByPoint(e) {
          bl.subVectors(e, this.center);
          let t = bl.lengthSq();
          if (t > this.radius * this.radius) {
            let e = Math.sqrt(t),
              n = 0.5 * (e - this.radius);
            this.center.add(bl.multiplyScalar(n / e)), (this.radius += n);
          }
          return this;
        }
        union(e) {
          return (
            !0 === this.center.equals(e.center)
              ? yl.set(0, 0, 1).multiplyScalar(e.radius)
              : yl
                  .subVectors(e.center, this.center)
                  .normalize()
                  .multiplyScalar(e.radius),
            this.expandByPoint(vl.copy(e.center).add(yl)),
            this.expandByPoint(vl.copy(e.center).sub(yl)),
            this
          );
        }
        equals(e) {
          return e.center.equals(this.center) && e.radius === this.radius;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      (Sl = new J()),
      (Cl = new J()),
      (wl = new J()),
      (Tl = new J()),
      (El = new J()),
      (Dl = new J()),
      (Ol = new J()),
      (kl = class {
        constructor(e = new J(), t = new J(0, 0, -1)) {
          (this.origin = e), (this.direction = t);
        }
        set(e, t) {
          return this.origin.copy(e), this.direction.copy(t), this;
        }
        copy(e) {
          return (
            this.origin.copy(e.origin), this.direction.copy(e.direction), this
          );
        }
        at(e, t) {
          return t.copy(this.direction).multiplyScalar(e).add(this.origin);
        }
        lookAt(e) {
          return this.direction.copy(e).sub(this.origin).normalize(), this;
        }
        recast(e) {
          return this.origin.copy(this.at(e, Sl)), this;
        }
        closestPointToPoint(e, t) {
          t.subVectors(e, this.origin);
          let n = t.dot(this.direction);
          return n < 0
            ? t.copy(this.origin)
            : t.copy(this.direction).multiplyScalar(n).add(this.origin);
        }
        distanceToPoint(e) {
          return Math.sqrt(this.distanceSqToPoint(e));
        }
        distanceSqToPoint(e) {
          let t = Sl.subVectors(e, this.origin).dot(this.direction);
          return t < 0
            ? this.origin.distanceToSquared(e)
            : (Sl.copy(this.direction).multiplyScalar(t).add(this.origin),
              Sl.distanceToSquared(e));
        }
        distanceSqToSegment(e, t, n, r) {
          Cl.copy(e).add(t).multiplyScalar(0.5),
            wl.copy(t).sub(e).normalize(),
            Tl.copy(this.origin).sub(Cl);
          let i = 0.5 * e.distanceTo(t),
            a = -this.direction.dot(wl),
            o = Tl.dot(this.direction),
            s = -Tl.dot(wl),
            c = Tl.lengthSq(),
            l = Math.abs(1 - a * a),
            u,
            d,
            f,
            p;
          if (l > 0)
            if (((u = a * s - o), (d = a * o - s), (p = i * l), u >= 0))
              if (d >= -p)
                if (d <= p) {
                  let e = 1 / l;
                  (u *= e),
                    (d *= e),
                    (f = u * (u + a * d + 2 * o) + d * (a * u + d + 2 * s) + c);
                } else
                  (d = i),
                    (u = Math.max(0, -(a * d + o))),
                    (f = -u * u + d * (d + 2 * s) + c);
              else
                (d = -i),
                  (u = Math.max(0, -(a * d + o))),
                  (f = -u * u + d * (d + 2 * s) + c);
            else
              d <= -p
                ? ((u = Math.max(0, -(-a * i + o))),
                  (d = u > 0 ? -i : Math.min(Math.max(-i, -s), i)),
                  (f = -u * u + d * (d + 2 * s) + c))
                : d <= p
                ? ((u = 0),
                  (d = Math.min(Math.max(-i, -s), i)),
                  (f = d * (d + 2 * s) + c))
                : ((u = Math.max(0, -(a * i + o))),
                  (d = u > 0 ? i : Math.min(Math.max(-i, -s), i)),
                  (f = -u * u + d * (d + 2 * s) + c));
          else
            (d = a > 0 ? -i : i),
              (u = Math.max(0, -(a * d + o))),
              (f = -u * u + d * (d + 2 * s) + c);
          return (
            n && n.copy(this.direction).multiplyScalar(u).add(this.origin),
            r && r.copy(wl).multiplyScalar(d).add(Cl),
            f
          );
        }
        intersectSphere(e, t) {
          Sl.subVectors(e.center, this.origin);
          let n = Sl.dot(this.direction),
            r = Sl.dot(Sl) - n * n,
            i = e.radius * e.radius;
          if (r > i) return null;
          let a = Math.sqrt(i - r),
            o = n - a,
            s = n + a;
          return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t);
        }
        intersectsSphere(e) {
          return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
        }
        distanceToPlane(e) {
          let t = e.normal.dot(this.direction);
          if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
          let n = -(this.origin.dot(e.normal) + e.constant) / t;
          return n >= 0 ? n : null;
        }
        intersectPlane(e, t) {
          let n = this.distanceToPlane(e);
          return n === null ? null : this.at(n, t);
        }
        intersectsPlane(e) {
          let t = e.distanceToPoint(this.origin);
          return t === 0 ? !0 : e.normal.dot(this.direction) * t < 0;
        }
        intersectBox(e, t) {
          let n,
            r,
            i,
            a,
            o,
            s,
            c = 1 / this.direction.x,
            l = 1 / this.direction.y,
            u = 1 / this.direction.z,
            d = this.origin;
          return (
            c >= 0
              ? ((n = (e.min.x - d.x) * c), (r = (e.max.x - d.x) * c))
              : ((n = (e.max.x - d.x) * c), (r = (e.min.x - d.x) * c)),
            l >= 0
              ? ((i = (e.min.y - d.y) * l), (a = (e.max.y - d.y) * l))
              : ((i = (e.max.y - d.y) * l), (a = (e.min.y - d.y) * l)),
            n > a ||
            i > r ||
            ((i > n || n !== n) && (n = i),
            (a < r || r !== r) && (r = a),
            u >= 0
              ? ((o = (e.min.z - d.z) * u), (s = (e.max.z - d.z) * u))
              : ((o = (e.max.z - d.z) * u), (s = (e.min.z - d.z) * u)),
            n > s || o > r)
              ? null
              : ((o > n || n !== n) && (n = o),
                (s < r || r !== r) && (r = s),
                r < 0 ? null : this.at(n >= 0 ? n : r, t))
          );
        }
        intersectsBox(e) {
          return this.intersectBox(e, Sl) !== null;
        }
        intersectTriangle(e, t, n, r, i) {
          El.subVectors(t, e), Dl.subVectors(n, e), Ol.crossVectors(El, Dl);
          let a = this.direction.dot(Ol),
            o;
          if (a > 0) {
            if (r) return null;
            o = 1;
          } else {
            if (!(a < 0)) return null;
            (o = -1), (a = -a);
          }
          Tl.subVectors(this.origin, e);
          let s = o * this.direction.dot(Dl.crossVectors(Tl, Dl));
          if (s < 0) return null;
          let c = o * this.direction.dot(El.cross(Tl));
          if (c < 0 || s + c > a) return null;
          let l = -o * Tl.dot(Ol);
          return l < 0 ? null : this.at(l / a, i);
        }
        applyMatrix4(e) {
          return (
            this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
          );
        }
        equals(e) {
          return (
            e.origin.equals(this.origin) && e.direction.equals(this.direction)
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      (Y = class e {
        constructor() {
          (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
            arguments.length > 0 &&
              console.error(
                `THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.`
              );
        }
        set(e, t, n, r, i, a, o, s, c, l, u, d, f, p, m, h) {
          let g = this.elements;
          return (
            (g[0] = e),
            (g[4] = t),
            (g[8] = n),
            (g[12] = r),
            (g[1] = i),
            (g[5] = a),
            (g[9] = o),
            (g[13] = s),
            (g[2] = c),
            (g[6] = l),
            (g[10] = u),
            (g[14] = d),
            (g[3] = f),
            (g[7] = p),
            (g[11] = m),
            (g[15] = h),
            this
          );
        }
        identity() {
          return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        clone() {
          return new e().fromArray(this.elements);
        }
        copy(e) {
          let t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            (t[9] = n[9]),
            (t[10] = n[10]),
            (t[11] = n[11]),
            (t[12] = n[12]),
            (t[13] = n[13]),
            (t[14] = n[14]),
            (t[15] = n[15]),
            this
          );
        }
        copyPosition(e) {
          let t = this.elements,
            n = e.elements;
          return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
        }
        setFromMatrix3(e) {
          let t = e.elements;
          return (
            this.set(
              t[0],
              t[3],
              t[6],
              0,
              t[1],
              t[4],
              t[7],
              0,
              t[2],
              t[5],
              t[8],
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        extractBasis(e, t, n) {
          return (
            e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
          );
        }
        makeBasis(e, t, n) {
          return (
            this.set(
              e.x,
              t.x,
              n.x,
              0,
              e.y,
              t.y,
              n.y,
              0,
              e.z,
              t.z,
              n.z,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        extractRotation(e) {
          let t = this.elements,
            n = e.elements,
            r = 1 / Al.setFromMatrixColumn(e, 0).length(),
            i = 1 / Al.setFromMatrixColumn(e, 1).length(),
            a = 1 / Al.setFromMatrixColumn(e, 2).length();
          return (
            (t[0] = n[0] * r),
            (t[1] = n[1] * r),
            (t[2] = n[2] * r),
            (t[3] = 0),
            (t[4] = n[4] * i),
            (t[5] = n[5] * i),
            (t[6] = n[6] * i),
            (t[7] = 0),
            (t[8] = n[8] * a),
            (t[9] = n[9] * a),
            (t[10] = n[10] * a),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        }
        makeRotationFromEuler(e) {
          (e && e.isEuler) ||
            console.error(
              `THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.`
            );
          let t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z,
            a = Math.cos(n),
            o = Math.sin(n),
            s = Math.cos(r),
            c = Math.sin(r),
            l = Math.cos(i),
            u = Math.sin(i);
          if (e.order === `XYZ`) {
            let e = a * l,
              n = a * u,
              r = o * l,
              i = o * u;
            (t[0] = s * l),
              (t[4] = -s * u),
              (t[8] = c),
              (t[1] = n + r * c),
              (t[5] = e - i * c),
              (t[9] = -o * s),
              (t[2] = i - e * c),
              (t[6] = r + n * c),
              (t[10] = a * s);
          } else if (e.order === `YXZ`) {
            let e = s * l,
              n = s * u,
              r = c * l,
              i = c * u;
            (t[0] = e + i * o),
              (t[4] = r * o - n),
              (t[8] = a * c),
              (t[1] = a * u),
              (t[5] = a * l),
              (t[9] = -o),
              (t[2] = n * o - r),
              (t[6] = i + e * o),
              (t[10] = a * s);
          } else if (e.order === `ZXY`) {
            let e = s * l,
              n = s * u,
              r = c * l,
              i = c * u;
            (t[0] = e - i * o),
              (t[4] = -a * u),
              (t[8] = r + n * o),
              (t[1] = n + r * o),
              (t[5] = a * l),
              (t[9] = i - e * o),
              (t[2] = -a * c),
              (t[6] = o),
              (t[10] = a * s);
          } else if (e.order === `ZYX`) {
            let e = a * l,
              n = a * u,
              r = o * l,
              i = o * u;
            (t[0] = s * l),
              (t[4] = r * c - n),
              (t[8] = e * c + i),
              (t[1] = s * u),
              (t[5] = i * c + e),
              (t[9] = n * c - r),
              (t[2] = -c),
              (t[6] = o * s),
              (t[10] = a * s);
          } else if (e.order === `YZX`) {
            let e = a * s,
              n = a * c,
              r = o * s,
              i = o * c;
            (t[0] = s * l),
              (t[4] = i - e * u),
              (t[8] = r * u + n),
              (t[1] = u),
              (t[5] = a * l),
              (t[9] = -o * l),
              (t[2] = -c * l),
              (t[6] = n * u + r),
              (t[10] = e - i * u);
          } else if (e.order === `XZY`) {
            let e = a * s,
              n = a * c,
              r = o * s,
              i = o * c;
            (t[0] = s * l),
              (t[4] = -u),
              (t[8] = c * l),
              (t[1] = e * u + i),
              (t[5] = a * l),
              (t[9] = n * u - r),
              (t[2] = r * u - n),
              (t[6] = o * l),
              (t[10] = i * u + e);
          }
          return (
            (t[3] = 0),
            (t[7] = 0),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
          );
        }
        makeRotationFromQuaternion(e) {
          return this.compose(Ml, e, Nl);
        }
        lookAt(e, t, n) {
          let r = this.elements;
          return (
            Il.subVectors(e, t),
            Il.lengthSq() === 0 && (Il.z = 1),
            Il.normalize(),
            Pl.crossVectors(n, Il),
            Pl.lengthSq() === 0 &&
              (Math.abs(n.z) === 1 ? (Il.x += 1e-4) : (Il.z += 1e-4),
              Il.normalize(),
              Pl.crossVectors(n, Il)),
            Pl.normalize(),
            Fl.crossVectors(Il, Pl),
            (r[0] = Pl.x),
            (r[4] = Fl.x),
            (r[8] = Il.x),
            (r[1] = Pl.y),
            (r[5] = Fl.y),
            (r[9] = Il.y),
            (r[2] = Pl.z),
            (r[6] = Fl.z),
            (r[10] = Il.z),
            this
          );
        }
        multiply(e, t) {
          return t === void 0
            ? this.multiplyMatrices(this, e)
            : (console.warn(
                `THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.`
              ),
              this.multiplyMatrices(e, t));
        }
        premultiply(e) {
          return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, t) {
          let n = e.elements,
            r = t.elements,
            i = this.elements,
            a = n[0],
            o = n[4],
            s = n[8],
            c = n[12],
            l = n[1],
            u = n[5],
            d = n[9],
            f = n[13],
            p = n[2],
            m = n[6],
            h = n[10],
            g = n[14],
            _ = n[3],
            v = n[7],
            y = n[11],
            b = n[15],
            x = r[0],
            S = r[4],
            C = r[8],
            w = r[12],
            T = r[1],
            E = r[5],
            D = r[9],
            O = r[13],
            k = r[2],
            A = r[6],
            j = r[10],
            M = r[14],
            N = r[3],
            P = r[7],
            F = r[11],
            ee = r[15];
          return (
            (i[0] = a * x + o * T + s * k + c * N),
            (i[4] = a * S + o * E + s * A + c * P),
            (i[8] = a * C + o * D + s * j + c * F),
            (i[12] = a * w + o * O + s * M + c * ee),
            (i[1] = l * x + u * T + d * k + f * N),
            (i[5] = l * S + u * E + d * A + f * P),
            (i[9] = l * C + u * D + d * j + f * F),
            (i[13] = l * w + u * O + d * M + f * ee),
            (i[2] = p * x + m * T + h * k + g * N),
            (i[6] = p * S + m * E + h * A + g * P),
            (i[10] = p * C + m * D + h * j + g * F),
            (i[14] = p * w + m * O + h * M + g * ee),
            (i[3] = _ * x + v * T + y * k + b * N),
            (i[7] = _ * S + v * E + y * A + b * P),
            (i[11] = _ * C + v * D + y * j + b * F),
            (i[15] = _ * w + v * O + y * M + b * ee),
            this
          );
        }
        multiplyScalar(e) {
          let t = this.elements;
          return (
            (t[0] *= e),
            (t[4] *= e),
            (t[8] *= e),
            (t[12] *= e),
            (t[1] *= e),
            (t[5] *= e),
            (t[9] *= e),
            (t[13] *= e),
            (t[2] *= e),
            (t[6] *= e),
            (t[10] *= e),
            (t[14] *= e),
            (t[3] *= e),
            (t[7] *= e),
            (t[11] *= e),
            (t[15] *= e),
            this
          );
        }
        determinant() {
          let e = this.elements,
            t = e[0],
            n = e[4],
            r = e[8],
            i = e[12],
            a = e[1],
            o = e[5],
            s = e[9],
            c = e[13],
            l = e[2],
            u = e[6],
            d = e[10],
            f = e[14],
            p = e[3],
            m = e[7],
            h = e[11],
            g = e[15];
          return (
            p *
              (+i * s * u -
                r * c * u -
                i * o * d +
                n * c * d +
                r * o * f -
                n * s * f) +
            m *
              (+t * s * f -
                t * c * d +
                i * a * d -
                r * a * f +
                r * c * l -
                i * s * l) +
            h *
              (+t * c * u -
                t * o * f -
                i * a * u +
                n * a * f +
                i * o * l -
                n * c * l) +
            g *
              (-r * o * l -
                t * s * u +
                t * o * d +
                r * a * u -
                n * a * d +
                n * s * l)
          );
        }
        transpose() {
          let e = this.elements,
            t;
          return (
            (t = e[1]),
            (e[1] = e[4]),
            (e[4] = t),
            (t = e[2]),
            (e[2] = e[8]),
            (e[8] = t),
            (t = e[6]),
            (e[6] = e[9]),
            (e[9] = t),
            (t = e[3]),
            (e[3] = e[12]),
            (e[12] = t),
            (t = e[7]),
            (e[7] = e[13]),
            (e[13] = t),
            (t = e[11]),
            (e[11] = e[14]),
            (e[14] = t),
            this
          );
        }
        setPosition(e, t, n) {
          let r = this.elements;
          return (
            e.isVector3
              ? ((r[12] = e.x), (r[13] = e.y), (r[14] = e.z))
              : ((r[12] = e), (r[13] = t), (r[14] = n)),
            this
          );
        }
        invert() {
          let e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            a = e[4],
            o = e[5],
            s = e[6],
            c = e[7],
            l = e[8],
            u = e[9],
            d = e[10],
            f = e[11],
            p = e[12],
            m = e[13],
            h = e[14],
            g = e[15],
            _ =
              u * h * c -
              m * d * c +
              m * s * f -
              o * h * f -
              u * s * g +
              o * d * g,
            v =
              p * d * c -
              l * h * c -
              p * s * f +
              a * h * f +
              l * s * g -
              a * d * g,
            y =
              l * m * c -
              p * u * c +
              p * o * f -
              a * m * f -
              l * o * g +
              a * u * g,
            b =
              p * u * s -
              l * m * s -
              p * o * d +
              a * m * d +
              l * o * h -
              a * u * h,
            x = t * _ + n * v + r * y + i * b;
          if (x === 0)
            return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
          let S = 1 / x;
          return (
            (e[0] = _ * S),
            (e[1] =
              (m * d * i -
                u * h * i -
                m * r * f +
                n * h * f +
                u * r * g -
                n * d * g) *
              S),
            (e[2] =
              (o * h * i -
                m * s * i +
                m * r * c -
                n * h * c -
                o * r * g +
                n * s * g) *
              S),
            (e[3] =
              (u * s * i -
                o * d * i -
                u * r * c +
                n * d * c +
                o * r * f -
                n * s * f) *
              S),
            (e[4] = v * S),
            (e[5] =
              (l * h * i -
                p * d * i +
                p * r * f -
                t * h * f -
                l * r * g +
                t * d * g) *
              S),
            (e[6] =
              (p * s * i -
                a * h * i -
                p * r * c +
                t * h * c +
                a * r * g -
                t * s * g) *
              S),
            (e[7] =
              (a * d * i -
                l * s * i +
                l * r * c -
                t * d * c -
                a * r * f +
                t * s * f) *
              S),
            (e[8] = y * S),
            (e[9] =
              (p * u * i -
                l * m * i -
                p * n * f +
                t * m * f +
                l * n * g -
                t * u * g) *
              S),
            (e[10] =
              (a * m * i -
                p * o * i +
                p * n * c -
                t * m * c -
                a * n * g +
                t * o * g) *
              S),
            (e[11] =
              (l * o * i -
                a * u * i -
                l * n * c +
                t * u * c +
                a * n * f -
                t * o * f) *
              S),
            (e[12] = b * S),
            (e[13] =
              (l * m * r -
                p * u * r +
                p * n * d -
                t * m * d -
                l * n * h +
                t * u * h) *
              S),
            (e[14] =
              (p * o * r -
                a * m * r -
                p * n * s +
                t * m * s +
                a * n * h -
                t * o * h) *
              S),
            (e[15] =
              (a * u * r -
                l * o * r +
                l * n * s -
                t * u * s -
                a * n * d +
                t * o * d) *
              S),
            this
          );
        }
        scale(e) {
          let t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z;
          return (
            (t[0] *= n),
            (t[4] *= r),
            (t[8] *= i),
            (t[1] *= n),
            (t[5] *= r),
            (t[9] *= i),
            (t[2] *= n),
            (t[6] *= r),
            (t[10] *= i),
            (t[3] *= n),
            (t[7] *= r),
            (t[11] *= i),
            this
          );
        }
        getMaxScaleOnAxis() {
          let e = this.elements,
            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
            n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
            r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
          return Math.sqrt(Math.max(t, n, r));
        }
        makeTranslation(e, t, n) {
          return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
        }
        makeRotationX(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationY(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationZ(e) {
          let t = Math.cos(e),
            n = Math.sin(e);
          return (
            this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
          );
        }
        makeRotationAxis(e, t) {
          let n = Math.cos(t),
            r = Math.sin(t),
            i = 1 - n,
            a = e.x,
            o = e.y,
            s = e.z,
            c = i * a,
            l = i * o;
          return (
            this.set(
              c * a + n,
              c * o - r * s,
              c * s + r * o,
              0,
              c * o + r * s,
              l * o + n,
              l * s - r * a,
              0,
              c * s - r * o,
              l * s + r * a,
              i * s * s + n,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        }
        makeScale(e, t, n) {
          return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
        }
        makeShear(e, t, n, r, i, a) {
          return this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1), this;
        }
        compose(e, t, n) {
          let r = this.elements,
            i = t._x,
            a = t._y,
            o = t._z,
            s = t._w,
            c = i + i,
            l = a + a,
            u = o + o,
            d = i * c,
            f = i * l,
            p = i * u,
            m = a * l,
            h = a * u,
            g = o * u,
            _ = s * c,
            v = s * l,
            y = s * u,
            b = n.x,
            x = n.y,
            S = n.z;
          return (
            (r[0] = (1 - (m + g)) * b),
            (r[1] = (f + y) * b),
            (r[2] = (p - v) * b),
            (r[3] = 0),
            (r[4] = (f - y) * x),
            (r[5] = (1 - (d + g)) * x),
            (r[6] = (h + _) * x),
            (r[7] = 0),
            (r[8] = (p + v) * S),
            (r[9] = (h - _) * S),
            (r[10] = (1 - (d + m)) * S),
            (r[11] = 0),
            (r[12] = e.x),
            (r[13] = e.y),
            (r[14] = e.z),
            (r[15] = 1),
            this
          );
        }
        decompose(e, t, n) {
          let r = this.elements,
            i = Al.set(r[0], r[1], r[2]).length(),
            a = Al.set(r[4], r[5], r[6]).length(),
            o = Al.set(r[8], r[9], r[10]).length();
          this.determinant() < 0 && (i = -i),
            (e.x = r[12]),
            (e.y = r[13]),
            (e.z = r[14]),
            jl.copy(this);
          let s = 1 / i,
            c = 1 / a,
            l = 1 / o;
          return (
            (jl.elements[0] *= s),
            (jl.elements[1] *= s),
            (jl.elements[2] *= s),
            (jl.elements[4] *= c),
            (jl.elements[5] *= c),
            (jl.elements[6] *= c),
            (jl.elements[8] *= l),
            (jl.elements[9] *= l),
            (jl.elements[10] *= l),
            t.setFromRotationMatrix(jl),
            (n.x = i),
            (n.y = a),
            (n.z = o),
            this
          );
        }
        makePerspective(e, t, n, r, i, a) {
          a === void 0 &&
            console.warn(
              `THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.`
            );
          let o = this.elements,
            s = (2 * i) / (t - e),
            c = (2 * i) / (n - r),
            l = (t + e) / (t - e),
            u = (n + r) / (n - r),
            d = -(a + i) / (a - i),
            f = (-2 * a * i) / (a - i);
          return (
            (o[0] = s),
            (o[4] = 0),
            (o[8] = l),
            (o[12] = 0),
            (o[1] = 0),
            (o[5] = c),
            (o[9] = u),
            (o[13] = 0),
            (o[2] = 0),
            (o[6] = 0),
            (o[10] = d),
            (o[14] = f),
            (o[3] = 0),
            (o[7] = 0),
            (o[11] = -1),
            (o[15] = 0),
            this
          );
        }
        makeOrthographic(e, t, n, r, i, a) {
          let o = this.elements,
            s = 1 / (t - e),
            c = 1 / (n - r),
            l = 1 / (a - i),
            u = (t + e) * s,
            d = (n + r) * c,
            f = (a + i) * l;
          return (
            (o[0] = 2 * s),
            (o[4] = 0),
            (o[8] = 0),
            (o[12] = -u),
            (o[1] = 0),
            (o[5] = 2 * c),
            (o[9] = 0),
            (o[13] = -d),
            (o[2] = 0),
            (o[6] = 0),
            (o[10] = -2 * l),
            (o[14] = -f),
            (o[3] = 0),
            (o[7] = 0),
            (o[11] = 0),
            (o[15] = 1),
            this
          );
        }
        equals(e) {
          let t = this.elements,
            n = e.elements;
          for (let e = 0; e < 16; e++) if (t[e] !== n[e]) return !1;
          return !0;
        }
        fromArray(e, t = 0) {
          for (let n = 0; n < 16; n++) this.elements[n] = e[n + t];
          return this;
        }
        toArray(e = [], t = 0) {
          let n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            (e[t + 9] = n[9]),
            (e[t + 10] = n[10]),
            (e[t + 11] = n[11]),
            (e[t + 12] = n[12]),
            (e[t + 13] = n[13]),
            (e[t + 14] = n[14]),
            (e[t + 15] = n[15]),
            e
          );
        }
      }),
      (Y.prototype.isMatrix4 = !0),
      (Al = new J()),
      (jl = new Y()),
      (Ml = new J(0, 0, 0)),
      (Nl = new J(1, 1, 1)),
      (Pl = new J()),
      (Fl = new J()),
      (Il = new J()),
      (Ll = new Y()),
      (Rl = new el()),
      (zl = class e {
        constructor(t = 0, n = 0, r = 0, i = e.DefaultOrder) {
          (this._x = t), (this._y = n), (this._z = r), (this._order = i);
        }
        get x() {
          return this._x;
        }
        set x(e) {
          (this._x = e), this._onChangeCallback();
        }
        get y() {
          return this._y;
        }
        set y(e) {
          (this._y = e), this._onChangeCallback();
        }
        get z() {
          return this._z;
        }
        set z(e) {
          (this._z = e), this._onChangeCallback();
        }
        get order() {
          return this._order;
        }
        set order(e) {
          (this._order = e), this._onChangeCallback();
        }
        set(e, t, n, r = this._order) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = r),
            this._onChangeCallback(),
            this
          );
        }
        clone() {
          return new this.constructor(this._x, this._y, this._z, this._order);
        }
        copy(e) {
          return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this._onChangeCallback(),
            this
          );
        }
        setFromRotationMatrix(e, t = this._order, n = !0) {
          let r = e.elements,
            i = r[0],
            a = r[4],
            o = r[8],
            s = r[1],
            c = r[5],
            l = r[9],
            u = r[2],
            d = r[6],
            f = r[10];
          switch (t) {
            case `XYZ`:
              (this._y = Math.asin(on(o, -1, 1))),
                Math.abs(o) < 0.9999999
                  ? ((this._x = Math.atan2(-l, f)),
                    (this._z = Math.atan2(-a, i)))
                  : ((this._x = Math.atan2(d, c)), (this._z = 0));
              break;
            case `YXZ`:
              (this._x = Math.asin(-on(l, -1, 1))),
                Math.abs(l) < 0.9999999
                  ? ((this._y = Math.atan2(o, f)), (this._z = Math.atan2(s, c)))
                  : ((this._y = Math.atan2(-u, i)), (this._z = 0));
              break;
            case `ZXY`:
              (this._x = Math.asin(on(d, -1, 1))),
                Math.abs(d) < 0.9999999
                  ? ((this._y = Math.atan2(-u, f)),
                    (this._z = Math.atan2(-a, c)))
                  : ((this._y = 0), (this._z = Math.atan2(s, i)));
              break;
            case `ZYX`:
              (this._y = Math.asin(-on(u, -1, 1))),
                Math.abs(u) < 0.9999999
                  ? ((this._x = Math.atan2(d, f)), (this._z = Math.atan2(s, i)))
                  : ((this._x = 0), (this._z = Math.atan2(-a, c)));
              break;
            case `YZX`:
              (this._z = Math.asin(on(s, -1, 1))),
                Math.abs(s) < 0.9999999
                  ? ((this._x = Math.atan2(-l, c)),
                    (this._y = Math.atan2(-u, i)))
                  : ((this._x = 0), (this._y = Math.atan2(o, f)));
              break;
            case `XZY`:
              (this._z = Math.asin(-on(a, -1, 1))),
                Math.abs(a) < 0.9999999
                  ? ((this._x = Math.atan2(d, c)), (this._y = Math.atan2(o, i)))
                  : ((this._x = Math.atan2(-l, f)), (this._y = 0));
              break;
            default:
              console.warn(
                `THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ` +
                  t
              );
          }
          return (this._order = t), !0 === n && this._onChangeCallback(), this;
        }
        setFromQuaternion(e, t, n) {
          return (
            Ll.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(Ll, t, n)
          );
        }
        setFromVector3(e, t = this._order) {
          return this.set(e.x, e.y, e.z, t);
        }
        reorder(e) {
          return Rl.setFromEuler(this), this.setFromQuaternion(Rl, e);
        }
        equals(e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
          );
        }
        fromArray(e) {
          return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            e[3] !== void 0 && (this._order = e[3]),
            this._onChangeCallback(),
            this
          );
        }
        toArray(e = [], t = 0) {
          return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
          );
        }
        toVector3(e) {
          return e
            ? e.set(this._x, this._y, this._z)
            : new J(this._x, this._y, this._z);
        }
        _onChange(e) {
          return (this._onChangeCallback = e), this;
        }
        _onChangeCallback() {}
      }),
      (zl.prototype.isEuler = !0),
      (zl.DefaultOrder = `XYZ`),
      (zl.RotationOrders = [`XYZ`, `YZX`, `ZXY`, `XZY`, `YXZ`, `ZYX`]),
      (Bl = class {
        constructor() {
          this.mask = 1;
        }
        set(e) {
          this.mask = ((1 << e) | 0) >>> 0;
        }
        enable(e) {
          this.mask |= (1 << e) | 0;
        }
        enableAll() {
          this.mask = -1;
        }
        toggle(e) {
          this.mask ^= (1 << e) | 0;
        }
        disable(e) {
          this.mask &= ~((1 << e) | 0);
        }
        disableAll() {
          this.mask = 0;
        }
        test(e) {
          return (this.mask & e.mask) !== 0;
        }
        isEnabled(e) {
          return (this.mask & ((1 << e) | 0)) != 0;
        }
      }),
      (Vl = 0),
      (Hl = new J()),
      (Ul = new el()),
      (Wl = new Y()),
      (Gl = new J()),
      (Kl = new J()),
      (ql = new J()),
      (Jl = new el()),
      (Yl = new J(1, 0, 0)),
      (Xl = new J(0, 1, 0)),
      (Zl = new J(0, 0, 1)),
      (Ql = { type: `added` }),
      ($l = { type: `removed` }),
      (eu = class e extends Bc {
        constructor() {
          super(),
            Object.defineProperty(this, `id`, { value: Vl++ }),
            (this.uuid = an()),
            (this.name = ``),
            (this.type = `Object3D`),
            (this.parent = null),
            (this.children = []),
            (this.up = e.DefaultUp.clone());
          let t = new J(),
            n = new zl(),
            r = new el(),
            i = new J(1, 1, 1);
          function a() {
            r.setFromEuler(n, !1);
          }
          function o() {
            n.setFromQuaternion(r, void 0, !1);
          }
          n._onChange(a),
            r._onChange(o),
            Object.defineProperties(this, {
              position: { configurable: !0, enumerable: !0, value: t },
              rotation: { configurable: !0, enumerable: !0, value: n },
              quaternion: { configurable: !0, enumerable: !0, value: r },
              scale: { configurable: !0, enumerable: !0, value: i },
              modelViewMatrix: { value: new Y() },
              normalMatrix: { value: new Gc() },
            }),
            (this.matrix = new Y()),
            (this.matrixWorld = new Y()),
            (this.matrixAutoUpdate = e.DefaultMatrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = !1),
            (this.layers = new Bl()),
            (this.visible = !0),
            (this.castShadow = !1),
            (this.receiveShadow = !1),
            (this.frustumCulled = !0),
            (this.renderOrder = 0),
            (this.animations = []),
            (this.userData = {});
        }
        onBeforeRender() {}
        onAfterRender() {}
        applyMatrix4(e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
        }
        applyQuaternion(e) {
          return this.quaternion.premultiply(e), this;
        }
        setRotationFromAxisAngle(e, t) {
          this.quaternion.setFromAxisAngle(e, t);
        }
        setRotationFromEuler(e) {
          this.quaternion.setFromEuler(e, !0);
        }
        setRotationFromMatrix(e) {
          this.quaternion.setFromRotationMatrix(e);
        }
        setRotationFromQuaternion(e) {
          this.quaternion.copy(e);
        }
        rotateOnAxis(e, t) {
          return Ul.setFromAxisAngle(e, t), this.quaternion.multiply(Ul), this;
        }
        rotateOnWorldAxis(e, t) {
          return (
            Ul.setFromAxisAngle(e, t), this.quaternion.premultiply(Ul), this
          );
        }
        rotateX(e) {
          return this.rotateOnAxis(Yl, e);
        }
        rotateY(e) {
          return this.rotateOnAxis(Xl, e);
        }
        rotateZ(e) {
          return this.rotateOnAxis(Zl, e);
        }
        translateOnAxis(e, t) {
          return (
            Hl.copy(e).applyQuaternion(this.quaternion),
            this.position.add(Hl.multiplyScalar(t)),
            this
          );
        }
        translateX(e) {
          return this.translateOnAxis(Yl, e);
        }
        translateY(e) {
          return this.translateOnAxis(Xl, e);
        }
        translateZ(e) {
          return this.translateOnAxis(Zl, e);
        }
        localToWorld(e) {
          return e.applyMatrix4(this.matrixWorld);
        }
        worldToLocal(e) {
          return e.applyMatrix4(Wl.copy(this.matrixWorld).invert());
        }
        lookAt(e, t, n) {
          e.isVector3 ? Gl.copy(e) : Gl.set(e, t, n);
          let r = this.parent;
          this.updateWorldMatrix(!0, !1),
            Kl.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight
              ? Wl.lookAt(Kl, Gl, this.up)
              : Wl.lookAt(Gl, Kl, this.up),
            this.quaternion.setFromRotationMatrix(Wl),
            r &&
              (Wl.extractRotation(r.matrixWorld),
              Ul.setFromRotationMatrix(Wl),
              this.quaternion.premultiply(Ul.invert()));
        }
        add(e) {
          if (arguments.length > 1) {
            for (let e = 0; e < arguments.length; e++) this.add(arguments[e]);
            return this;
          }
          return e === this
            ? (console.error(
                `THREE.Object3D.add: object can't be added as a child of itself.`,
                e
              ),
              this)
            : (e && e.isObject3D
                ? (e.parent !== null && e.parent.remove(e),
                  (e.parent = this),
                  this.children.push(e),
                  e.dispatchEvent(Ql))
                : console.error(
                    `THREE.Object3D.add: object not an instance of THREE.Object3D.`,
                    e
                  ),
              this);
        }
        remove(e) {
          if (arguments.length > 1) {
            for (let e = 0; e < arguments.length; e++)
              this.remove(arguments[e]);
            return this;
          }
          let t = this.children.indexOf(e);
          return (
            t !== -1 &&
              ((e.parent = null),
              this.children.splice(t, 1),
              e.dispatchEvent($l)),
            this
          );
        }
        removeFromParent() {
          let e = this.parent;
          return e !== null && e.remove(this), this;
        }
        clear() {
          for (let e = 0; e < this.children.length; e++) {
            let t = this.children[e];
            (t.parent = null), t.dispatchEvent($l);
          }
          return (this.children.length = 0), this;
        }
        attach(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            Wl.copy(this.matrixWorld).invert(),
            e.parent !== null &&
              (e.parent.updateWorldMatrix(!0, !1),
              Wl.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(Wl),
            this.add(e),
            e.updateWorldMatrix(!1, !0),
            this
          );
        }
        getObjectById(e) {
          return this.getObjectByProperty(`id`, e);
        }
        getObjectByName(e) {
          return this.getObjectByProperty(`name`, e);
        }
        getObjectByProperty(e, t) {
          if (this[e] === t) return this;
          for (let n = 0, r = this.children.length; n < r; n++) {
            let r = this.children[n].getObjectByProperty(e, t);
            if (r !== void 0) return r;
          }
        }
        getWorldPosition(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            e.setFromMatrixPosition(this.matrixWorld)
          );
        }
        getWorldQuaternion(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(Kl, e, ql),
            e
          );
        }
        getWorldScale(e) {
          return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(Kl, Jl, e),
            e
          );
        }
        getWorldDirection(e) {
          this.updateWorldMatrix(!0, !1);
          let t = this.matrixWorld.elements;
          return e.set(t[8], t[9], t[10]).normalize();
        }
        raycast() {}
        traverse(e) {
          e(this);
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) t[n].traverse(e);
        }
        traverseVisible(e) {
          if (!1 === this.visible) return;
          e(this);
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e);
        }
        traverseAncestors(e) {
          let t = this.parent;
          t !== null && (e(t), t.traverseAncestors(e));
        }
        updateMatrix() {
          this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
        }
        updateMatrixWorld(e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
              (this.parent === null
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              (this.matrixWorldNeedsUpdate = !1),
              (e = !0));
          let t = this.children;
          for (let n = 0, r = t.length; n < r; n++) t[n].updateMatrixWorld(e);
        }
        updateWorldMatrix(e, t) {
          let n = this.parent;
          if (
            (!0 === e && n !== null && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            this.parent === null
              ? this.matrixWorld.copy(this.matrix)
              : this.matrixWorld.multiplyMatrices(
                  this.parent.matrixWorld,
                  this.matrix
                ),
            !0 === t)
          ) {
            let e = this.children;
            for (let t = 0, n = e.length; t < n; t++)
              e[t].updateWorldMatrix(!1, !0);
          }
        }
        toJSON(e) {
          let t = e === void 0 || typeof e == `string`,
            n = {};
          t &&
            ((e = {
              geometries: {},
              materials: {},
              textures: {},
              images: {},
              shapes: {},
              skeletons: {},
              animations: {},
            }),
            (n.metadata = {
              version: 4.5,
              type: `Object`,
              generator: `Object3D.toJSON`,
            }));
          let r = {};
          (r.uuid = this.uuid),
            (r.type = this.type),
            this.name !== `` && (r.name = this.name),
            !0 === this.castShadow && (r.castShadow = !0),
            !0 === this.receiveShadow && (r.receiveShadow = !0),
            !1 === this.visible && (r.visible = !1),
            !1 === this.frustumCulled && (r.frustumCulled = !1),
            this.renderOrder !== 0 && (r.renderOrder = this.renderOrder),
            JSON.stringify(this.userData) !== `{}` &&
              (r.userData = this.userData),
            (r.layers = this.layers.mask),
            (r.matrix = this.matrix.toArray()),
            !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
            this.isInstancedMesh &&
              ((r.type = `InstancedMesh`),
              (r.count = this.count),
              (r.instanceMatrix = this.instanceMatrix.toJSON()),
              this.instanceColor !== null &&
                (r.instanceColor = this.instanceColor.toJSON()));
          function i(t, n) {
            return t[n.uuid] === void 0 && (t[n.uuid] = n.toJSON(e)), n.uuid;
          }
          if (this.isScene)
            this.background &&
              (this.background.isColor
                ? (r.background = this.background.toJSON())
                : this.background.isTexture &&
                  (r.background = this.background.toJSON(e).uuid)),
              this.environment &&
                this.environment.isTexture &&
                (r.environment = this.environment.toJSON(e).uuid);
          else if (this.isMesh || this.isLine || this.isPoints) {
            r.geometry = i(e.geometries, this.geometry);
            let t = this.geometry.parameters;
            if (t !== void 0 && t.shapes !== void 0) {
              let n = t.shapes;
              if (Array.isArray(n))
                for (let t = 0, r = n.length; t < r; t++) {
                  let r = n[t];
                  i(e.shapes, r);
                }
              else i(e.shapes, n);
            }
          }
          if (
            (this.isSkinnedMesh &&
              ((r.bindMode = this.bindMode),
              (r.bindMatrix = this.bindMatrix.toArray()),
              this.skeleton !== void 0 &&
                (i(e.skeletons, this.skeleton),
                (r.skeleton = this.skeleton.uuid))),
            this.material !== void 0)
          )
            if (Array.isArray(this.material)) {
              let t = [];
              for (let n = 0, r = this.material.length; n < r; n++)
                t.push(i(e.materials, this.material[n]));
              r.material = t;
            } else r.material = i(e.materials, this.material);
          if (this.children.length > 0) {
            r.children = [];
            for (let t = 0; t < this.children.length; t++)
              r.children.push(this.children[t].toJSON(e).object);
          }
          if (this.animations.length > 0) {
            r.animations = [];
            for (let t = 0; t < this.animations.length; t++) {
              let n = this.animations[t];
              r.animations.push(i(e.animations, n));
            }
          }
          if (t) {
            let t = a(e.geometries),
              r = a(e.materials),
              i = a(e.textures),
              o = a(e.images),
              s = a(e.shapes),
              c = a(e.skeletons),
              l = a(e.animations);
            t.length > 0 && (n.geometries = t),
              r.length > 0 && (n.materials = r),
              i.length > 0 && (n.textures = i),
              o.length > 0 && (n.images = o),
              s.length > 0 && (n.shapes = s),
              c.length > 0 && (n.skeletons = c),
              l.length > 0 && (n.animations = l);
          }
          return (n.object = r), n;
          function a(e) {
            let t = [];
            for (let n in e) {
              let r = e[n];
              delete r.metadata, t.push(r);
            }
            return t;
          }
        }
        clone(e) {
          return new this.constructor().copy(this, e);
        }
        copy(e, t = !0) {
          if (
            ((this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            (this.rotation.order = e.rotation.order),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            !0 === t)
          )
            for (let t = 0; t < e.children.length; t++) {
              let n = e.children[t];
              this.add(n.clone());
            }
          return this;
        }
      }),
      (eu.DefaultUp = new J(0, 1, 0)),
      (eu.DefaultMatrixAutoUpdate = !0),
      (eu.prototype.isObject3D = !0),
      (tu = new J()),
      (nu = new J()),
      (ru = new J()),
      (iu = new J()),
      (au = new J()),
      (ou = new J()),
      (su = new J()),
      (cu = new J()),
      (lu = new J()),
      (uu = new J()),
      (du = class e {
        constructor(e = new J(), t = new J(), n = new J()) {
          (this.a = e), (this.b = t), (this.c = n);
        }
        static getNormal(e, t, n, r) {
          r.subVectors(n, t), tu.subVectors(e, t), r.cross(tu);
          let i = r.lengthSq();
          return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0);
        }
        static getBarycoord(e, t, n, r, i) {
          tu.subVectors(r, t), nu.subVectors(n, t), ru.subVectors(e, t);
          let a = tu.dot(tu),
            o = tu.dot(nu),
            s = tu.dot(ru),
            c = nu.dot(nu),
            l = nu.dot(ru),
            u = a * c - o * o;
          if (u === 0) return i.set(-2, -1, -1);
          let d = 1 / u,
            f = (c * s - o * l) * d,
            p = (a * l - o * s) * d;
          return i.set(1 - f - p, p, f);
        }
        static containsPoint(e, t, n, r) {
          return (
            this.getBarycoord(e, t, n, r, iu),
            iu.x >= 0 && iu.y >= 0 && iu.x + iu.y <= 1
          );
        }
        static getUV(e, t, n, r, i, a, o, s) {
          return (
            this.getBarycoord(e, t, n, r, iu),
            s.set(0, 0),
            s.addScaledVector(i, iu.x),
            s.addScaledVector(a, iu.y),
            s.addScaledVector(o, iu.z),
            s
          );
        }
        static isFrontFacing(e, t, n, r) {
          return (
            tu.subVectors(n, t), nu.subVectors(e, t), tu.cross(nu).dot(r) < 0
          );
        }
        set(e, t, n) {
          return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
        }
        setFromPointsAndIndices(e, t, n, r) {
          return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this;
        }
        setFromAttributeAndIndices(e, t, n, r) {
          return (
            this.a.fromBufferAttribute(e, t),
            this.b.fromBufferAttribute(e, n),
            this.c.fromBufferAttribute(e, r),
            this
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        }
        getArea() {
          return (
            tu.subVectors(this.c, this.b),
            nu.subVectors(this.a, this.b),
            0.5 * tu.cross(nu).length()
          );
        }
        getMidpoint(e) {
          return e
            .addVectors(this.a, this.b)
            .add(this.c)
            .multiplyScalar(1 / 3);
        }
        getNormal(t) {
          return e.getNormal(this.a, this.b, this.c, t);
        }
        getPlane(e) {
          return e.setFromCoplanarPoints(this.a, this.b, this.c);
        }
        getBarycoord(t, n) {
          return e.getBarycoord(t, this.a, this.b, this.c, n);
        }
        getUV(t, n, r, i, a) {
          return e.getUV(t, this.a, this.b, this.c, n, r, i, a);
        }
        containsPoint(t) {
          return e.containsPoint(t, this.a, this.b, this.c);
        }
        isFrontFacing(t) {
          return e.isFrontFacing(this.a, this.b, this.c, t);
        }
        intersectsBox(e) {
          return e.intersectsTriangle(this);
        }
        closestPointToPoint(e, t) {
          let n = this.a,
            r = this.b,
            i = this.c,
            a,
            o;
          au.subVectors(r, n), ou.subVectors(i, n), cu.subVectors(e, n);
          let s = au.dot(cu),
            c = ou.dot(cu);
          if (s <= 0 && c <= 0) return t.copy(n);
          lu.subVectors(e, r);
          let l = au.dot(lu),
            u = ou.dot(lu);
          if (l >= 0 && u <= l) return t.copy(r);
          let d = s * u - l * c;
          if (d <= 0 && s >= 0 && l <= 0)
            return (a = s / (s - l)), t.copy(n).addScaledVector(au, a);
          uu.subVectors(e, i);
          let f = au.dot(uu),
            p = ou.dot(uu);
          if (p >= 0 && f <= p) return t.copy(i);
          let m = f * c - s * p;
          if (m <= 0 && c >= 0 && p <= 0)
            return (o = c / (c - p)), t.copy(n).addScaledVector(ou, o);
          let h = l * p - f * u;
          if (h <= 0 && u - l >= 0 && f - p >= 0)
            return (
              su.subVectors(i, r),
              (o = (u - l) / (u - l + (f - p))),
              t.copy(r).addScaledVector(su, o)
            );
          let g = 1 / (h + m + d);
          return (
            (a = m * g),
            (o = d * g),
            t.copy(n).addScaledVector(au, a).addScaledVector(ou, o)
          );
        }
        equals(e) {
          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        }
      }),
      (fu = 0),
      (pu = class extends Bc {
        constructor() {
          super(),
            Object.defineProperty(this, `id`, { value: fu++ }),
            (this.uuid = an()),
            (this.name = ``),
            (this.type = `Material`),
            (this.fog = !0),
            (this.blending = ro),
            (this.side = Qa),
            (this.vertexColors = !1),
            (this.opacity = 1),
            (this.format = bs),
            (this.transparent = !1),
            (this.blendSrc = vo),
            (this.blendDst = yo),
            (this.blendEquation = co),
            (this.blendSrcAlpha = null),
            (this.blendDstAlpha = null),
            (this.blendEquationAlpha = null),
            (this.depthFunc = Oo),
            (this.depthTest = !0),
            (this.depthWrite = !0),
            (this.stencilWriteMask = 255),
            (this.stencilFunc = Ic),
            (this.stencilRef = 0),
            (this.stencilFuncMask = 255),
            (this.stencilFail = Fc),
            (this.stencilZFail = Fc),
            (this.stencilZPass = Fc),
            (this.stencilWrite = !1),
            (this.clippingPlanes = null),
            (this.clipIntersection = !1),
            (this.clipShadows = !1),
            (this.shadowSide = null),
            (this.colorWrite = !0),
            (this.precision = null),
            (this.polygonOffset = !1),
            (this.polygonOffsetFactor = 0),
            (this.polygonOffsetUnits = 0),
            (this.dithering = !1),
            (this.alphaToCoverage = !1),
            (this.premultipliedAlpha = !1),
            (this.visible = !0),
            (this.toneMapped = !0),
            (this.userData = {}),
            (this.version = 0),
            (this._alphaTest = 0);
        }
        get alphaTest() {
          return this._alphaTest;
        }
        set alphaTest(e) {
          this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
        }
        onBuild() {}
        onBeforeRender() {}
        onBeforeCompile() {}
        customProgramCacheKey() {
          return this.onBeforeCompile.toString();
        }
        setValues(e) {
          if (e !== void 0)
            for (let t in e) {
              let n = e[t];
              if (n === void 0) {
                console.warn(
                  `THREE.Material: '` + t + `' parameter is undefined.`
                );
                continue;
              }
              if (t === `shading`) {
                console.warn(
                  `THREE.` +
                    this.type +
                    `: .shading has been removed. Use the boolean .flatShading instead.`
                ),
                  (this.flatShading = n === to);
                continue;
              }
              let r = this[t];
              r === void 0
                ? console.warn(
                    `THREE.` +
                      this.type +
                      `: '` +
                      t +
                      `' is not a property of this material.`
                  )
                : r && r.isColor
                ? r.set(n)
                : r && r.isVector3 && n && n.isVector3
                ? r.copy(n)
                : (this[t] = n);
            }
        }
        toJSON(e) {
          let t = e === void 0 || typeof e == `string`;
          t && (e = { textures: {}, images: {} });
          let n = {
            metadata: {
              version: 4.5,
              type: `Material`,
              generator: `Material.toJSON`,
            },
          };
          (n.uuid = this.uuid),
            (n.type = this.type),
            this.name !== `` && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            this.roughness !== void 0 && (n.roughness = this.roughness),
            this.metalness !== void 0 && (n.metalness = this.metalness),
            this.sheen !== void 0 && (n.sheen = this.sheen),
            this.sheenColor &&
              this.sheenColor.isColor &&
              (n.sheenColor = this.sheenColor.getHex()),
            this.sheenRoughness !== void 0 &&
              (n.sheenRoughness = this.sheenRoughness),
            this.emissive &&
              this.emissive.isColor &&
              (n.emissive = this.emissive.getHex()),
            this.emissiveIntensity &&
              this.emissiveIntensity !== 1 &&
              (n.emissiveIntensity = this.emissiveIntensity),
            this.specular &&
              this.specular.isColor &&
              (n.specular = this.specular.getHex()),
            this.specularIntensity !== void 0 &&
              (n.specularIntensity = this.specularIntensity),
            this.specularColor &&
              this.specularColor.isColor &&
              (n.specularColor = this.specularColor.getHex()),
            this.shininess !== void 0 && (n.shininess = this.shininess),
            this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat),
            this.clearcoatRoughness !== void 0 &&
              (n.clearcoatRoughness = this.clearcoatRoughness),
            this.clearcoatMap &&
              this.clearcoatMap.isTexture &&
              (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
            this.clearcoatRoughnessMap &&
              this.clearcoatRoughnessMap.isTexture &&
              (n.clearcoatRoughnessMap =
                this.clearcoatRoughnessMap.toJSON(e).uuid),
            this.clearcoatNormalMap &&
              this.clearcoatNormalMap.isTexture &&
              ((n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
              (n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
            this.matcap &&
              this.matcap.isTexture &&
              (n.matcap = this.matcap.toJSON(e).uuid),
            this.alphaMap &&
              this.alphaMap.isTexture &&
              (n.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap &&
              this.lightMap.isTexture &&
              ((n.lightMap = this.lightMap.toJSON(e).uuid),
              (n.lightMapIntensity = this.lightMapIntensity)),
            this.aoMap &&
              this.aoMap.isTexture &&
              ((n.aoMap = this.aoMap.toJSON(e).uuid),
              (n.aoMapIntensity = this.aoMapIntensity)),
            this.bumpMap &&
              this.bumpMap.isTexture &&
              ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
              (n.bumpScale = this.bumpScale)),
            this.normalMap &&
              this.normalMap.isTexture &&
              ((n.normalMap = this.normalMap.toJSON(e).uuid),
              (n.normalMapType = this.normalMapType),
              (n.normalScale = this.normalScale.toArray())),
            this.displacementMap &&
              this.displacementMap.isTexture &&
              ((n.displacementMap = this.displacementMap.toJSON(e).uuid),
              (n.displacementScale = this.displacementScale),
              (n.displacementBias = this.displacementBias)),
            this.roughnessMap &&
              this.roughnessMap.isTexture &&
              (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap &&
              this.metalnessMap.isTexture &&
              (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap &&
              this.emissiveMap.isTexture &&
              (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap &&
              this.specularMap.isTexture &&
              (n.specularMap = this.specularMap.toJSON(e).uuid),
            this.specularIntensityMap &&
              this.specularIntensityMap.isTexture &&
              (n.specularIntensityMap =
                this.specularIntensityMap.toJSON(e).uuid),
            this.specularColorMap &&
              this.specularColorMap.isTexture &&
              (n.specularColorMap = this.specularColorMap.toJSON(e).uuid),
            this.envMap &&
              this.envMap.isTexture &&
              ((n.envMap = this.envMap.toJSON(e).uuid),
              this.combine !== void 0 && (n.combine = this.combine)),
            this.envMapIntensity !== void 0 &&
              (n.envMapIntensity = this.envMapIntensity),
            this.reflectivity !== void 0 &&
              (n.reflectivity = this.reflectivity),
            this.refractionRatio !== void 0 &&
              (n.refractionRatio = this.refractionRatio),
            this.gradientMap &&
              this.gradientMap.isTexture &&
              (n.gradientMap = this.gradientMap.toJSON(e).uuid),
            this.transmission !== void 0 &&
              (n.transmission = this.transmission),
            this.transmissionMap &&
              this.transmissionMap.isTexture &&
              (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
            this.thickness !== void 0 && (n.thickness = this.thickness),
            this.thicknessMap &&
              this.thicknessMap.isTexture &&
              (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
            this.attenuationDistance !== void 0 &&
              (n.attenuationDistance = this.attenuationDistance),
            this.attenuationColor !== void 0 &&
              (n.attenuationColor = this.attenuationColor.getHex()),
            this.size !== void 0 && (n.size = this.size),
            this.shadowSide !== null && (n.shadowSide = this.shadowSide),
            this.sizeAttenuation !== void 0 &&
              (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== ro && (n.blending = this.blending),
            this.side !== Qa && (n.side = this.side),
            this.vertexColors && (n.vertexColors = !0),
            this.opacity < 1 && (n.opacity = this.opacity),
            this.format !== bs && (n.format = this.format),
            !0 === this.transparent && (n.transparent = this.transparent),
            (n.depthFunc = this.depthFunc),
            (n.depthTest = this.depthTest),
            (n.depthWrite = this.depthWrite),
            (n.colorWrite = this.colorWrite),
            (n.stencilWrite = this.stencilWrite),
            (n.stencilWriteMask = this.stencilWriteMask),
            (n.stencilFunc = this.stencilFunc),
            (n.stencilRef = this.stencilRef),
            (n.stencilFuncMask = this.stencilFuncMask),
            (n.stencilFail = this.stencilFail),
            (n.stencilZFail = this.stencilZFail),
            (n.stencilZPass = this.stencilZPass),
            this.rotation &&
              this.rotation !== 0 &&
              (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            this.polygonOffsetFactor !== 0 &&
              (n.polygonOffsetFactor = this.polygonOffsetFactor),
            this.polygonOffsetUnits !== 0 &&
              (n.polygonOffsetUnits = this.polygonOffsetUnits),
            this.linewidth &&
              this.linewidth !== 1 &&
              (n.linewidth = this.linewidth),
            this.dashSize !== void 0 && (n.dashSize = this.dashSize),
            this.gapSize !== void 0 && (n.gapSize = this.gapSize),
            this.scale !== void 0 && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.alphaToCoverage &&
              (n.alphaToCoverage = this.alphaToCoverage),
            !0 === this.premultipliedAlpha &&
              (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 &&
              (n.wireframeLinewidth = this.wireframeLinewidth),
            this.wireframeLinecap !== `round` &&
              (n.wireframeLinecap = this.wireframeLinecap),
            this.wireframeLinejoin !== `round` &&
              (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            !1 === this.visible && (n.visible = !1),
            !1 === this.toneMapped && (n.toneMapped = !1),
            JSON.stringify(this.userData) !== `{}` &&
              (n.userData = this.userData);
          function r(e) {
            let t = [];
            for (let n in e) {
              let r = e[n];
              delete r.metadata, t.push(r);
            }
            return t;
          }
          if (t) {
            let t = r(e.textures),
              i = r(e.images);
            t.length > 0 && (n.textures = t), i.length > 0 && (n.images = i);
          }
          return n;
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          (this.name = e.name),
            (this.fog = e.fog),
            (this.blending = e.blending),
            (this.side = e.side),
            (this.vertexColors = e.vertexColors),
            (this.opacity = e.opacity),
            (this.format = e.format),
            (this.transparent = e.transparent),
            (this.blendSrc = e.blendSrc),
            (this.blendDst = e.blendDst),
            (this.blendEquation = e.blendEquation),
            (this.blendSrcAlpha = e.blendSrcAlpha),
            (this.blendDstAlpha = e.blendDstAlpha),
            (this.blendEquationAlpha = e.blendEquationAlpha),
            (this.depthFunc = e.depthFunc),
            (this.depthTest = e.depthTest),
            (this.depthWrite = e.depthWrite),
            (this.stencilWriteMask = e.stencilWriteMask),
            (this.stencilFunc = e.stencilFunc),
            (this.stencilRef = e.stencilRef),
            (this.stencilFuncMask = e.stencilFuncMask),
            (this.stencilFail = e.stencilFail),
            (this.stencilZFail = e.stencilZFail),
            (this.stencilZPass = e.stencilZPass),
            (this.stencilWrite = e.stencilWrite);
          let t = e.clippingPlanes,
            n = null;
          if (t !== null) {
            let e = t.length;
            n = Array(e);
            for (let r = 0; r !== e; ++r) n[r] = t[r].clone();
          }
          return (
            (this.clippingPlanes = n),
            (this.clipIntersection = e.clipIntersection),
            (this.clipShadows = e.clipShadows),
            (this.shadowSide = e.shadowSide),
            (this.colorWrite = e.colorWrite),
            (this.precision = e.precision),
            (this.polygonOffset = e.polygonOffset),
            (this.polygonOffsetFactor = e.polygonOffsetFactor),
            (this.polygonOffsetUnits = e.polygonOffsetUnits),
            (this.dithering = e.dithering),
            (this.alphaTest = e.alphaTest),
            (this.alphaToCoverage = e.alphaToCoverage),
            (this.premultipliedAlpha = e.premultipliedAlpha),
            (this.visible = e.visible),
            (this.toneMapped = e.toneMapped),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: `dispose` });
        }
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
      }),
      (pu.prototype.isMaterial = !0),
      (mu = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
      }),
      (hu = { h: 0, s: 0, l: 0 }),
      (gu = { h: 0, s: 0, l: 0 }),
      (X = class {
        constructor(e, t, n) {
          return t === void 0 && n === void 0
            ? this.set(e)
            : this.setRGB(e, t, n);
        }
        set(e) {
          return (
            e && e.isColor
              ? this.copy(e)
              : typeof e == `number`
              ? this.setHex(e)
              : typeof e == `string` && this.setStyle(e),
            this
          );
        }
        setScalar(e) {
          return (this.r = e), (this.g = e), (this.b = e), this;
        }
        setHex(e) {
          return (
            (e = Math.floor(e)),
            (this.r = ((e >> 16) & 255) / 255),
            (this.g = ((e >> 8) & 255) / 255),
            (this.b = (255 & e) / 255),
            this
          );
        }
        setRGB(e, t, n) {
          return (this.r = e), (this.g = t), (this.b = n), this;
        }
        setHSL(e, t, n) {
          if (((e = sn(e, 1)), (t = on(t, 0, 1)), (n = on(n, 0, 1)), t === 0))
            this.r = this.g = this.b = n;
          else {
            let r = n <= 0.5 ? n * (1 + t) : n + t - n * t,
              i = 2 * n - r;
            (this.r = kn(i, r, e + 1 / 3)),
              (this.g = kn(i, r, e)),
              (this.b = kn(i, r, e - 1 / 3));
          }
          return this;
        }
        setStyle(e) {
          function t(t) {
            t !== void 0 &&
              parseFloat(t) < 1 &&
              console.warn(
                `THREE.Color: Alpha component of ` + e + ` will be ignored.`
              );
          }
          let n;
          if ((n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e))) {
            let e,
              r = n[1],
              i = n[2];
            switch (r) {
              case `rgb`:
              case `rgba`:
                if (
                  (e =
                    /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      i
                    ))
                )
                  return (
                    (this.r = Math.min(255, parseInt(e[1], 10)) / 255),
                    (this.g = Math.min(255, parseInt(e[2], 10)) / 255),
                    (this.b = Math.min(255, parseInt(e[3], 10)) / 255),
                    t(e[4]),
                    this
                  );
                if (
                  (e =
                    /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      i
                    ))
                )
                  return (
                    (this.r = Math.min(100, parseInt(e[1], 10)) / 100),
                    (this.g = Math.min(100, parseInt(e[2], 10)) / 100),
                    (this.b = Math.min(100, parseInt(e[3], 10)) / 100),
                    t(e[4]),
                    this
                  );
                break;
              case `hsl`:
              case `hsla`:
                if (
                  (e =
                    /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                      i
                    ))
                ) {
                  let n = parseFloat(e[1]) / 360,
                    r = parseInt(e[2], 10) / 100,
                    i = parseInt(e[3], 10) / 100;
                  return t(e[4]), this.setHSL(n, r, i);
                }
                break;
            }
          } else if ((n = /^\#([A-Fa-f\d]+)$/.exec(e))) {
            let e = n[1],
              t = e.length;
            if (t === 3)
              return (
                (this.r = parseInt(e.charAt(0) + e.charAt(0), 16) / 255),
                (this.g = parseInt(e.charAt(1) + e.charAt(1), 16) / 255),
                (this.b = parseInt(e.charAt(2) + e.charAt(2), 16) / 255),
                this
              );
            if (t === 6)
              return (
                (this.r = parseInt(e.charAt(0) + e.charAt(1), 16) / 255),
                (this.g = parseInt(e.charAt(2) + e.charAt(3), 16) / 255),
                (this.b = parseInt(e.charAt(4) + e.charAt(5), 16) / 255),
                this
              );
          }
          return e && e.length > 0 ? this.setColorName(e) : this;
        }
        setColorName(e) {
          let t = mu[e.toLowerCase()];
          return (
            t === void 0
              ? console.warn(`THREE.Color: Unknown color ` + e)
              : this.setHex(t),
            this
          );
        }
        clone() {
          return new this.constructor(this.r, this.g, this.b);
        }
        copy(e) {
          return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
        }
        copySRGBToLinear(e) {
          return (
            (this.r = An(e.r)), (this.g = An(e.g)), (this.b = An(e.b)), this
          );
        }
        copyLinearToSRGB(e) {
          return (
            (this.r = jn(e.r)), (this.g = jn(e.g)), (this.b = jn(e.b)), this
          );
        }
        convertSRGBToLinear() {
          return this.copySRGBToLinear(this), this;
        }
        convertLinearToSRGB() {
          return this.copyLinearToSRGB(this), this;
        }
        getHex() {
          return (
            ((255 * this.r) << 16) ^
            ((255 * this.g) << 8) ^
            ((255 * this.b) << 0)
          );
        }
        getHexString() {
          return (`000000` + this.getHex().toString(16)).slice(-6);
        }
        getHSL(e) {
          let t = this.r,
            n = this.g,
            r = this.b,
            i = Math.max(t, n, r),
            a = Math.min(t, n, r),
            o,
            s,
            c = (a + i) / 2;
          if (a === i) (o = 0), (s = 0);
          else {
            let e = i - a;
            switch (((s = c <= 0.5 ? e / (i + a) : e / (2 - i - a)), i)) {
              case t:
                o = (n - r) / e + (n < r ? 6 : 0);
                break;
              case n:
                o = (r - t) / e + 2;
                break;
              case r:
                o = (t - n) / e + 4;
                break;
            }
            o /= 6;
          }
          return (e.h = o), (e.s = s), (e.l = c), e;
        }
        getStyle() {
          return (
            `rgb(` +
            ((255 * this.r) | 0) +
            `,` +
            ((255 * this.g) | 0) +
            `,` +
            ((255 * this.b) | 0) +
            `)`
          );
        }
        offsetHSL(e, t, n) {
          return (
            this.getHSL(hu),
            (hu.h += e),
            (hu.s += t),
            (hu.l += n),
            this.setHSL(hu.h, hu.s, hu.l),
            this
          );
        }
        add(e) {
          return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
        }
        addColors(e, t) {
          return (
            (this.r = e.r + t.r),
            (this.g = e.g + t.g),
            (this.b = e.b + t.b),
            this
          );
        }
        addScalar(e) {
          return (this.r += e), (this.g += e), (this.b += e), this;
        }
        sub(e) {
          return (
            (this.r = Math.max(0, this.r - e.r)),
            (this.g = Math.max(0, this.g - e.g)),
            (this.b = Math.max(0, this.b - e.b)),
            this
          );
        }
        multiply(e) {
          return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
        }
        multiplyScalar(e) {
          return (this.r *= e), (this.g *= e), (this.b *= e), this;
        }
        lerp(e, t) {
          return (
            (this.r += (e.r - this.r) * t),
            (this.g += (e.g - this.g) * t),
            (this.b += (e.b - this.b) * t),
            this
          );
        }
        lerpColors(e, t, n) {
          return (
            (this.r = e.r + (t.r - e.r) * n),
            (this.g = e.g + (t.g - e.g) * n),
            (this.b = e.b + (t.b - e.b) * n),
            this
          );
        }
        lerpHSL(e, t) {
          this.getHSL(hu), e.getHSL(gu);
          let n = un(hu.h, gu.h, t),
            r = un(hu.s, gu.s, t),
            i = un(hu.l, gu.l, t);
          return this.setHSL(n, r, i), this;
        }
        equals(e) {
          return e.r === this.r && e.g === this.g && e.b === this.b;
        }
        fromArray(e, t = 0) {
          return (
            (this.r = e[t]), (this.g = e[t + 1]), (this.b = e[t + 2]), this
          );
        }
        toArray(e = [], t = 0) {
          return (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e;
        }
        fromBufferAttribute(e, t) {
          return (
            (this.r = e.getX(t)),
            (this.g = e.getY(t)),
            (this.b = e.getZ(t)),
            !0 === e.normalized &&
              ((this.r /= 255), (this.g /= 255), (this.b /= 255)),
            this
          );
        }
        toJSON() {
          return this.getHex();
        }
      }),
      (X.NAMES = mu),
      (X.prototype.isColor = !0),
      (X.prototype.r = 1),
      (X.prototype.g = 1),
      (X.prototype.b = 1),
      (_u = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshBasicMaterial`),
            (this.color = new X(16777215)),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.combine = No),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = `round`),
            (this.wireframeLinejoin = `round`),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            this
          );
        }
      }),
      (_u.prototype.isMeshBasicMaterial = !0),
      (vu = new J()),
      (yu = new q()),
      (bu = class {
        constructor(e, t, n) {
          if (Array.isArray(e))
            throw TypeError(
              `THREE.BufferAttribute: array should be a Typed Array.`
            );
          (this.name = ``),
            (this.array = e),
            (this.itemSize = t),
            (this.count = e === void 0 ? 0 : e.length / t),
            (this.normalized = !0 === n),
            (this.usage = Lc),
            (this.updateRange = { offset: 0, count: -1 }),
            (this.version = 0);
        }
        onUploadCallback() {}
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        setUsage(e) {
          return (this.usage = e), this;
        }
        copy(e) {
          return (
            (this.name = e.name),
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.usage = e.usage),
            this
          );
        }
        copyAt(e, t, n) {
          (e *= this.itemSize), (n *= t.itemSize);
          for (let r = 0, i = this.itemSize; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        }
        copyArray(e) {
          return this.array.set(e), this;
        }
        copyColorsArray(e) {
          let t = this.array,
            n = 0;
          for (let r = 0, i = e.length; r < i; r++) {
            let i = e[r];
            i === void 0 &&
              (console.warn(
                `THREE.BufferAttribute.copyColorsArray(): color is undefined`,
                r
              ),
              (i = new X())),
              (t[n++] = i.r),
              (t[n++] = i.g),
              (t[n++] = i.b);
          }
          return this;
        }
        copyVector2sArray(e) {
          let t = this.array,
            n = 0;
          for (let r = 0, i = e.length; r < i; r++) {
            let i = e[r];
            i === void 0 &&
              (console.warn(
                `THREE.BufferAttribute.copyVector2sArray(): vector is undefined`,
                r
              ),
              (i = new q())),
              (t[n++] = i.x),
              (t[n++] = i.y);
          }
          return this;
        }
        copyVector3sArray(e) {
          let t = this.array,
            n = 0;
          for (let r = 0, i = e.length; r < i; r++) {
            let i = e[r];
            i === void 0 &&
              (console.warn(
                `THREE.BufferAttribute.copyVector3sArray(): vector is undefined`,
                r
              ),
              (i = new J())),
              (t[n++] = i.x),
              (t[n++] = i.y),
              (t[n++] = i.z);
          }
          return this;
        }
        copyVector4sArray(e) {
          let t = this.array,
            n = 0;
          for (let r = 0, i = e.length; r < i; r++) {
            let i = e[r];
            i === void 0 &&
              (console.warn(
                `THREE.BufferAttribute.copyVector4sArray(): vector is undefined`,
                r
              ),
              (i = new Xc())),
              (t[n++] = i.x),
              (t[n++] = i.y),
              (t[n++] = i.z),
              (t[n++] = i.w);
          }
          return this;
        }
        applyMatrix3(e) {
          if (this.itemSize === 2)
            for (let t = 0, n = this.count; t < n; t++)
              yu.fromBufferAttribute(this, t),
                yu.applyMatrix3(e),
                this.setXY(t, yu.x, yu.y);
          else if (this.itemSize === 3)
            for (let t = 0, n = this.count; t < n; t++)
              vu.fromBufferAttribute(this, t),
                vu.applyMatrix3(e),
                this.setXYZ(t, vu.x, vu.y, vu.z);
          return this;
        }
        applyMatrix4(e) {
          for (let t = 0, n = this.count; t < n; t++)
            (vu.x = this.getX(t)),
              (vu.y = this.getY(t)),
              (vu.z = this.getZ(t)),
              vu.applyMatrix4(e),
              this.setXYZ(t, vu.x, vu.y, vu.z);
          return this;
        }
        applyNormalMatrix(e) {
          for (let t = 0, n = this.count; t < n; t++)
            (vu.x = this.getX(t)),
              (vu.y = this.getY(t)),
              (vu.z = this.getZ(t)),
              vu.applyNormalMatrix(e),
              this.setXYZ(t, vu.x, vu.y, vu.z);
          return this;
        }
        transformDirection(e) {
          for (let t = 0, n = this.count; t < n; t++)
            (vu.x = this.getX(t)),
              (vu.y = this.getY(t)),
              (vu.z = this.getZ(t)),
              vu.transformDirection(e),
              this.setXYZ(t, vu.x, vu.y, vu.z);
          return this;
        }
        set(e, t = 0) {
          return this.array.set(e, t), this;
        }
        getX(e) {
          return this.array[e * this.itemSize];
        }
        setX(e, t) {
          return (this.array[e * this.itemSize] = t), this;
        }
        getY(e) {
          return this.array[e * this.itemSize + 1];
        }
        setY(e, t) {
          return (this.array[e * this.itemSize + 1] = t), this;
        }
        getZ(e) {
          return this.array[e * this.itemSize + 2];
        }
        setZ(e, t) {
          return (this.array[e * this.itemSize + 2] = t), this;
        }
        getW(e) {
          return this.array[e * this.itemSize + 3];
        }
        setW(e, t) {
          return (this.array[e * this.itemSize + 3] = t), this;
        }
        setXY(e, t, n) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
          );
        }
        setXYZ(e, t, n, r) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            this
          );
        }
        setXYZW(e, t, n, r, i) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = r),
            (this.array[e + 3] = i),
            this
          );
        }
        onUpload(e) {
          return (this.onUploadCallback = e), this;
        }
        clone() {
          return new this.constructor(this.array, this.itemSize).copy(this);
        }
        toJSON() {
          let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized,
          };
          return (
            this.name !== `` && (e.name = this.name),
            this.usage !== Lc && (e.usage = this.usage),
            (this.updateRange.offset === 0 && this.updateRange.count === -1) ||
              (e.updateRange = this.updateRange),
            e
          );
        }
      }),
      (bu.prototype.isBufferAttribute = !0),
      (xu = class extends bu {
        constructor(e, t, n) {
          super(new Uint16Array(e), t, n);
        }
      }),
      (Su = class extends bu {
        constructor(e, t, n) {
          super(new Uint32Array(e), t, n);
        }
      }),
      (Cu = class extends bu {
        constructor(e, t, n) {
          super(new Uint16Array(e), t, n);
        }
      }),
      (Cu.prototype.isFloat16BufferAttribute = !0),
      (Z = class extends bu {
        constructor(e, t, n) {
          super(new Float32Array(e), t, n);
        }
      }),
      (wu = 0),
      (Tu = new Y()),
      (Eu = new eu()),
      (Du = new J()),
      (Ou = new rl()),
      (ku = new rl()),
      (Au = new J()),
      (ju = class e extends Bc {
        constructor() {
          super(),
            Object.defineProperty(this, `id`, { value: wu++ }),
            (this.uuid = an()),
            (this.name = ``),
            (this.type = `BufferGeometry`),
            (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.morphTargetsRelative = !1),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.drawRange = { start: 0, count: 1 / 0 }),
            (this.userData = {});
        }
        getIndex() {
          return this.index;
        }
        setIndex(e) {
          return (
            Array.isArray(e)
              ? (this.index = new (Tn(e) > 65535 ? Su : xu)(e, 1))
              : (this.index = e),
            this
          );
        }
        getAttribute(e) {
          return this.attributes[e];
        }
        setAttribute(e, t) {
          return (this.attributes[e] = t), this;
        }
        deleteAttribute(e) {
          return delete this.attributes[e], this;
        }
        hasAttribute(e) {
          return this.attributes[e] !== void 0;
        }
        addGroup(e, t, n = 0) {
          this.groups.push({ start: e, count: t, materialIndex: n });
        }
        clearGroups() {
          this.groups = [];
        }
        setDrawRange(e, t) {
          (this.drawRange.start = e), (this.drawRange.count = t);
        }
        applyMatrix4(e) {
          let t = this.attributes.position;
          t !== void 0 && (t.applyMatrix4(e), (t.needsUpdate = !0));
          let n = this.attributes.normal;
          if (n !== void 0) {
            let t = new Gc().getNormalMatrix(e);
            n.applyNormalMatrix(t), (n.needsUpdate = !0);
          }
          let r = this.attributes.tangent;
          return (
            r !== void 0 && (r.transformDirection(e), (r.needsUpdate = !0)),
            this.boundingBox !== null && this.computeBoundingBox(),
            this.boundingSphere !== null && this.computeBoundingSphere(),
            this
          );
        }
        applyQuaternion(e) {
          return Tu.makeRotationFromQuaternion(e), this.applyMatrix4(Tu), this;
        }
        rotateX(e) {
          return Tu.makeRotationX(e), this.applyMatrix4(Tu), this;
        }
        rotateY(e) {
          return Tu.makeRotationY(e), this.applyMatrix4(Tu), this;
        }
        rotateZ(e) {
          return Tu.makeRotationZ(e), this.applyMatrix4(Tu), this;
        }
        translate(e, t, n) {
          return Tu.makeTranslation(e, t, n), this.applyMatrix4(Tu), this;
        }
        scale(e, t, n) {
          return Tu.makeScale(e, t, n), this.applyMatrix4(Tu), this;
        }
        lookAt(e) {
          return (
            Eu.lookAt(e), Eu.updateMatrix(), this.applyMatrix4(Eu.matrix), this
          );
        }
        center() {
          return (
            this.computeBoundingBox(),
            this.boundingBox.getCenter(Du).negate(),
            this.translate(Du.x, Du.y, Du.z),
            this
          );
        }
        setFromPoints(e) {
          let t = [];
          for (let n = 0, r = e.length; n < r; n++) {
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
          }
          return this.setAttribute(`position`, new Z(t, 3)), this;
        }
        computeBoundingBox() {
          this.boundingBox === null && (this.boundingBox = new rl());
          let e = this.attributes.position,
            t = this.morphAttributes.position;
          if (e && e.isGLBufferAttribute)
            console.error(
              `THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".`,
              this
            ),
              this.boundingBox.set(
                new J(-1 / 0, -1 / 0, -1 / 0),
                new J(1 / 0, 1 / 0, 1 / 0)
              );
          else {
            if (e !== void 0) {
              if ((this.boundingBox.setFromBufferAttribute(e), t))
                for (let e = 0, n = t.length; e < n; e++) {
                  let n = t[e];
                  Ou.setFromBufferAttribute(n),
                    this.morphTargetsRelative
                      ? (Au.addVectors(this.boundingBox.min, Ou.min),
                        this.boundingBox.expandByPoint(Au),
                        Au.addVectors(this.boundingBox.max, Ou.max),
                        this.boundingBox.expandByPoint(Au))
                      : (this.boundingBox.expandByPoint(Ou.min),
                        this.boundingBox.expandByPoint(Ou.max));
                }
            } else this.boundingBox.makeEmpty();
            (isNaN(this.boundingBox.min.x) ||
              isNaN(this.boundingBox.min.y) ||
              isNaN(this.boundingBox.min.z)) &&
              console.error(
                `THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.`,
                this
              );
          }
        }
        computeBoundingSphere() {
          this.boundingSphere === null && (this.boundingSphere = new xl());
          let e = this.attributes.position,
            t = this.morphAttributes.position;
          if (e && e.isGLBufferAttribute)
            console.error(
              `THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".`,
              this
            ),
              this.boundingSphere.set(new J(), 1 / 0);
          else if (e) {
            let n = this.boundingSphere.center;
            if ((Ou.setFromBufferAttribute(e), t))
              for (let e = 0, n = t.length; e < n; e++) {
                let n = t[e];
                ku.setFromBufferAttribute(n),
                  this.morphTargetsRelative
                    ? (Au.addVectors(Ou.min, ku.min),
                      Ou.expandByPoint(Au),
                      Au.addVectors(Ou.max, ku.max),
                      Ou.expandByPoint(Au))
                    : (Ou.expandByPoint(ku.min), Ou.expandByPoint(ku.max));
              }
            Ou.getCenter(n);
            let r = 0;
            for (let t = 0, i = e.count; t < i; t++)
              Au.fromBufferAttribute(e, t),
                (r = Math.max(r, n.distanceToSquared(Au)));
            if (t)
              for (let i = 0, a = t.length; i < a; i++) {
                let a = t[i],
                  o = this.morphTargetsRelative;
                for (let t = 0, i = a.count; t < i; t++)
                  Au.fromBufferAttribute(a, t),
                    o && (Du.fromBufferAttribute(e, t), Au.add(Du)),
                    (r = Math.max(r, n.distanceToSquared(Au)));
              }
            (this.boundingSphere.radius = Math.sqrt(r)),
              isNaN(this.boundingSphere.radius) &&
                console.error(
                  `THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.`,
                  this
                );
          }
        }
        computeTangents() {
          let e = this.index,
            t = this.attributes;
          if (
            e === null ||
            t.position === void 0 ||
            t.normal === void 0 ||
            t.uv === void 0
          ) {
            console.error(
              `THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)`
            );
            return;
          }
          let n = e.array,
            r = t.position.array,
            i = t.normal.array,
            a = t.uv.array,
            o = r.length / 3;
          t.tangent === void 0 &&
            this.setAttribute(`tangent`, new bu(new Float32Array(4 * o), 4));
          let s = t.tangent.array,
            c = [],
            l = [];
          for (let e = 0; e < o; e++) (c[e] = new J()), (l[e] = new J());
          let u = new J(),
            d = new J(),
            f = new J(),
            p = new q(),
            m = new q(),
            h = new q(),
            g = new J(),
            _ = new J();
          function v(e, t, n) {
            u.fromArray(r, 3 * e),
              d.fromArray(r, 3 * t),
              f.fromArray(r, 3 * n),
              p.fromArray(a, 2 * e),
              m.fromArray(a, 2 * t),
              h.fromArray(a, 2 * n),
              d.sub(u),
              f.sub(u),
              m.sub(p),
              h.sub(p);
            let i = 1 / (m.x * h.y - h.x * m.y);
            isFinite(i) &&
              (g
                .copy(d)
                .multiplyScalar(h.y)
                .addScaledVector(f, -m.y)
                .multiplyScalar(i),
              _.copy(f)
                .multiplyScalar(m.x)
                .addScaledVector(d, -h.x)
                .multiplyScalar(i),
              c[e].add(g),
              c[t].add(g),
              c[n].add(g),
              l[e].add(_),
              l[t].add(_),
              l[n].add(_));
          }
          let y = this.groups;
          y.length === 0 && (y = [{ start: 0, count: n.length }]);
          for (let e = 0, t = y.length; e < t; ++e) {
            let t = y[e],
              r = t.start,
              i = t.count;
            for (let e = r, t = r + i; e < t; e += 3)
              v(n[e + 0], n[e + 1], n[e + 2]);
          }
          let b = new J(),
            x = new J(),
            S = new J(),
            C = new J();
          function w(e) {
            S.fromArray(i, 3 * e), C.copy(S);
            let t = c[e];
            b.copy(t),
              b.sub(S.multiplyScalar(S.dot(t))).normalize(),
              x.crossVectors(C, t);
            let n = x.dot(l[e]) < 0 ? -1 : 1;
            (s[4 * e] = b.x),
              (s[4 * e + 1] = b.y),
              (s[4 * e + 2] = b.z),
              (s[4 * e + 3] = n);
          }
          for (let e = 0, t = y.length; e < t; ++e) {
            let t = y[e],
              r = t.start,
              i = t.count;
            for (let e = r, t = r + i; e < t; e += 3)
              w(n[e + 0]), w(n[e + 1]), w(n[e + 2]);
          }
        }
        computeVertexNormals() {
          let e = this.index,
            t = this.getAttribute(`position`);
          if (t !== void 0) {
            let n = this.getAttribute(`normal`);
            if (n === void 0)
              (n = new bu(new Float32Array(3 * t.count), 3)),
                this.setAttribute(`normal`, n);
            else for (let e = 0, t = n.count; e < t; e++) n.setXYZ(e, 0, 0, 0);
            let r = new J(),
              i = new J(),
              a = new J(),
              o = new J(),
              s = new J(),
              c = new J(),
              l = new J(),
              u = new J();
            if (e)
              for (let d = 0, f = e.count; d < f; d += 3) {
                let f = e.getX(d + 0),
                  p = e.getX(d + 1),
                  m = e.getX(d + 2);
                r.fromBufferAttribute(t, f),
                  i.fromBufferAttribute(t, p),
                  a.fromBufferAttribute(t, m),
                  l.subVectors(a, i),
                  u.subVectors(r, i),
                  l.cross(u),
                  o.fromBufferAttribute(n, f),
                  s.fromBufferAttribute(n, p),
                  c.fromBufferAttribute(n, m),
                  o.add(l),
                  s.add(l),
                  c.add(l),
                  n.setXYZ(f, o.x, o.y, o.z),
                  n.setXYZ(p, s.x, s.y, s.z),
                  n.setXYZ(m, c.x, c.y, c.z);
              }
            else
              for (let e = 0, o = t.count; e < o; e += 3)
                r.fromBufferAttribute(t, e + 0),
                  i.fromBufferAttribute(t, e + 1),
                  a.fromBufferAttribute(t, e + 2),
                  l.subVectors(a, i),
                  u.subVectors(r, i),
                  l.cross(u),
                  n.setXYZ(e + 0, l.x, l.y, l.z),
                  n.setXYZ(e + 1, l.x, l.y, l.z),
                  n.setXYZ(e + 2, l.x, l.y, l.z);
            this.normalizeNormals(), (n.needsUpdate = !0);
          }
        }
        merge(e, t) {
          if (!(e && e.isBufferGeometry)) {
            console.error(
              `THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.`,
              e
            );
            return;
          }
          t === void 0 &&
            ((t = 0),
            console.warn(
              `THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.`
            ));
          let n = this.attributes;
          for (let r in n) {
            if (e.attributes[r] === void 0) continue;
            let i = n[r].array,
              a = e.attributes[r],
              o = a.array,
              s = a.itemSize * t,
              c = Math.min(o.length, i.length - s);
            for (let e = 0, t = s; e < c; e++, t++) i[t] = o[e];
          }
          return this;
        }
        normalizeNormals() {
          let e = this.attributes.normal;
          for (let t = 0, n = e.count; t < n; t++)
            Au.fromBufferAttribute(e, t),
              Au.normalize(),
              e.setXYZ(t, Au.x, Au.y, Au.z);
        }
        toNonIndexed() {
          function t(e, t) {
            let n = e.array,
              r = e.itemSize,
              i = e.normalized,
              a = new n.constructor(t.length * r),
              o = 0,
              s = 0;
            for (let i = 0, c = t.length; i < c; i++) {
              o = e.isInterleavedBufferAttribute
                ? t[i] * e.data.stride + e.offset
                : t[i] * r;
              for (let e = 0; e < r; e++) a[s++] = n[o++];
            }
            return new bu(a, r, i);
          }
          if (this.index === null)
            return (
              console.warn(
                `THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.`
              ),
              this
            );
          let n = new e(),
            r = this.index.array,
            i = this.attributes;
          for (let e in i) {
            let a = i[e],
              o = t(a, r);
            n.setAttribute(e, o);
          }
          let a = this.morphAttributes;
          for (let e in a) {
            let i = [],
              o = a[e];
            for (let e = 0, n = o.length; e < n; e++) {
              let n = o[e],
                a = t(n, r);
              i.push(a);
            }
            n.morphAttributes[e] = i;
          }
          n.morphTargetsRelative = this.morphTargetsRelative;
          let o = this.groups;
          for (let e = 0, t = o.length; e < t; e++) {
            let t = o[e];
            n.addGroup(t.start, t.count, t.materialIndex);
          }
          return n;
        }
        toJSON() {
          let e = {
            metadata: {
              version: 4.5,
              type: `BufferGeometry`,
              generator: `BufferGeometry.toJSON`,
            },
          };
          if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            this.name !== `` && (e.name = this.name),
            Object.keys(this.userData).length > 0 &&
              (e.userData = this.userData),
            this.parameters !== void 0)
          ) {
            let t = this.parameters;
            for (let n in t) t[n] !== void 0 && (e[n] = t[n]);
            return e;
          }
          e.data = { attributes: {} };
          let t = this.index;
          t !== null &&
            (e.data.index = {
              type: t.array.constructor.name,
              array: Array.prototype.slice.call(t.array),
            });
          let n = this.attributes;
          for (let t in n) {
            let r = n[t];
            e.data.attributes[t] = r.toJSON(e.data);
          }
          let r = {},
            i = !1;
          for (let t in this.morphAttributes) {
            let n = this.morphAttributes[t],
              a = [];
            for (let t = 0, r = n.length; t < r; t++) {
              let r = n[t];
              a.push(r.toJSON(e.data));
            }
            a.length > 0 && ((r[t] = a), (i = !0));
          }
          i &&
            ((e.data.morphAttributes = r),
            (e.data.morphTargetsRelative = this.morphTargetsRelative));
          let a = this.groups;
          a.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(a)));
          let o = this.boundingSphere;
          return (
            o !== null &&
              (e.data.boundingSphere = {
                center: o.center.toArray(),
                radius: o.radius,
              }),
            e
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null);
          let t = {};
          this.name = e.name;
          let n = e.index;
          n !== null && this.setIndex(n.clone(t));
          let r = e.attributes;
          for (let e in r) {
            let n = r[e];
            this.setAttribute(e, n.clone(t));
          }
          let i = e.morphAttributes;
          for (let e in i) {
            let n = [],
              r = i[e];
            for (let e = 0, i = r.length; e < i; e++) n.push(r[e].clone(t));
            this.morphAttributes[e] = n;
          }
          this.morphTargetsRelative = e.morphTargetsRelative;
          let a = e.groups;
          for (let e = 0, t = a.length; e < t; e++) {
            let t = a[e];
            this.addGroup(t.start, t.count, t.materialIndex);
          }
          let o = e.boundingBox;
          o !== null && (this.boundingBox = o.clone());
          let s = e.boundingSphere;
          return (
            s !== null && (this.boundingSphere = s.clone()),
            (this.drawRange.start = e.drawRange.start),
            (this.drawRange.count = e.drawRange.count),
            (this.userData = e.userData),
            e.parameters !== void 0 &&
              (this.parameters = Object.assign({}, e.parameters)),
            this
          );
        }
        dispose() {
          this.dispatchEvent({ type: `dispose` });
        }
      }),
      (ju.prototype.isBufferGeometry = !0),
      (Mu = new Y()),
      (Nu = new kl()),
      (Pu = new xl()),
      (Fu = new J()),
      (Iu = new J()),
      (Lu = new J()),
      (Ru = new J()),
      (zu = new J()),
      (Bu = new J()),
      (Vu = new J()),
      (Hu = new J()),
      (Uu = new J()),
      (Wu = new q()),
      (Gu = new q()),
      (Ku = new q()),
      (qu = new J()),
      (Ju = new J()),
      (Yu = class extends eu {
        constructor(e = new ju(), t = new _u()) {
          super(),
            (this.type = `Mesh`),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e) {
          return (
            super.copy(e),
            e.morphTargetInfluences !== void 0 &&
              (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
            e.morphTargetDictionary !== void 0 &&
              (this.morphTargetDictionary = Object.assign(
                {},
                e.morphTargetDictionary
              )),
            (this.material = e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        updateMorphTargets() {
          let e = this.geometry;
          if (e.isBufferGeometry) {
            let t = e.morphAttributes,
              n = Object.keys(t);
            if (n.length > 0) {
              let e = t[n[0]];
              if (e !== void 0) {
                (this.morphTargetInfluences = []),
                  (this.morphTargetDictionary = {});
                for (let t = 0, n = e.length; t < n; t++) {
                  let n = e[t].name || String(t);
                  this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[n] = t);
                }
              }
            }
          } else {
            let t = e.morphTargets;
            t !== void 0 &&
              t.length > 0 &&
              console.error(
                `THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
          }
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.material,
            i = this.matrixWorld;
          if (
            r === void 0 ||
            (n.boundingSphere === null && n.computeBoundingSphere(),
            Pu.copy(n.boundingSphere),
            Pu.applyMatrix4(i),
            !1 === e.ray.intersectsSphere(Pu)) ||
            (Mu.copy(i).invert(),
            Nu.copy(e.ray).applyMatrix4(Mu),
            n.boundingBox !== null && !1 === Nu.intersectsBox(n.boundingBox))
          )
            return;
          let a;
          if (n.isBufferGeometry) {
            let i = n.index,
              o = n.attributes.position,
              s = n.morphAttributes.position,
              c = n.morphTargetsRelative,
              l = n.attributes.uv,
              u = n.attributes.uv2,
              d = n.groups,
              f = n.drawRange;
            if (i !== null)
              if (Array.isArray(r))
                for (let n = 0, p = d.length; n < p; n++) {
                  let p = d[n],
                    m = r[p.materialIndex],
                    h = Math.max(p.start, f.start),
                    g = Math.min(
                      i.count,
                      Math.min(p.start + p.count, f.start + f.count)
                    );
                  for (let n = h, r = g; n < r; n += 3) {
                    let r = i.getX(n),
                      d = i.getX(n + 1),
                      f = i.getX(n + 2);
                    (a = Nn(this, m, e, Nu, o, s, c, l, u, r, d, f)),
                      a &&
                        ((a.faceIndex = Math.floor(n / 3)),
                        (a.face.materialIndex = p.materialIndex),
                        t.push(a));
                  }
                }
              else {
                let n = Math.max(0, f.start),
                  d = Math.min(i.count, f.start + f.count);
                for (let f = n, p = d; f < p; f += 3) {
                  let n = i.getX(f),
                    d = i.getX(f + 1),
                    p = i.getX(f + 2);
                  (a = Nn(this, r, e, Nu, o, s, c, l, u, n, d, p)),
                    a && ((a.faceIndex = Math.floor(f / 3)), t.push(a));
                }
              }
            else if (o !== void 0)
              if (Array.isArray(r))
                for (let n = 0, i = d.length; n < i; n++) {
                  let i = d[n],
                    p = r[i.materialIndex],
                    m = Math.max(i.start, f.start),
                    h = Math.min(
                      o.count,
                      Math.min(i.start + i.count, f.start + f.count)
                    );
                  for (let n = m, r = h; n < r; n += 3) {
                    let r = n,
                      d = n + 1,
                      f = n + 2;
                    (a = Nn(this, p, e, Nu, o, s, c, l, u, r, d, f)),
                      a &&
                        ((a.faceIndex = Math.floor(n / 3)),
                        (a.face.materialIndex = i.materialIndex),
                        t.push(a));
                  }
                }
              else {
                let n = Math.max(0, f.start),
                  i = Math.min(o.count, f.start + f.count);
                for (let d = n, f = i; d < f; d += 3) {
                  let n = d,
                    i = d + 1,
                    f = d + 2;
                  (a = Nn(this, r, e, Nu, o, s, c, l, u, n, i, f)),
                    a && ((a.faceIndex = Math.floor(d / 3)), t.push(a));
                }
              }
          } else
            n.isGeometry &&
              console.error(
                `THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
        }
      }),
      (Yu.prototype.isMesh = !0),
      (Xu = class e extends ju {
        constructor(e = 1, t = 1, n = 1, r = 1, i = 1, a = 1) {
          super(),
            (this.type = `BoxGeometry`),
            (this.parameters = {
              width: e,
              height: t,
              depth: n,
              widthSegments: r,
              heightSegments: i,
              depthSegments: a,
            });
          let o = this;
          (r = Math.floor(r)), (i = Math.floor(i)), (a = Math.floor(a));
          let s = [],
            c = [],
            l = [],
            u = [],
            d = 0,
            f = 0;
          p(`z`, `y`, `x`, -1, -1, n, t, e, a, i, 0),
            p(`z`, `y`, `x`, 1, -1, n, t, -e, a, i, 1),
            p(`x`, `z`, `y`, 1, 1, e, n, t, r, a, 2),
            p(`x`, `z`, `y`, 1, -1, e, n, -t, r, a, 3),
            p(`x`, `y`, `z`, 1, -1, e, t, n, r, i, 4),
            p(`x`, `y`, `z`, -1, -1, e, t, -n, r, i, 5),
            this.setIndex(s),
            this.setAttribute(`position`, new Z(c, 3)),
            this.setAttribute(`normal`, new Z(l, 3)),
            this.setAttribute(`uv`, new Z(u, 2));
          function p(e, t, n, r, i, a, p, m, h, g, _) {
            let v = a / h,
              y = p / g,
              b = a / 2,
              x = p / 2,
              S = m / 2,
              C = h + 1,
              w = g + 1,
              T = 0,
              E = 0,
              D = new J();
            for (let a = 0; a < w; a++) {
              let o = a * y - x;
              for (let s = 0; s < C; s++)
                (D[e] = (s * v - b) * r),
                  (D[t] = o * i),
                  (D[n] = S),
                  c.push(D.x, D.y, D.z),
                  (D[e] = 0),
                  (D[t] = 0),
                  (D[n] = m > 0 ? 1 : -1),
                  l.push(D.x, D.y, D.z),
                  u.push(s / h),
                  u.push(1 - a / g),
                  (T += 1);
            }
            for (let e = 0; e < g; e++)
              for (let t = 0; t < h; t++) {
                let n = d + t + C * e,
                  r = d + t + C * (e + 1),
                  i = d + (t + 1) + C * (e + 1),
                  a = d + (t + 1) + C * e;
                s.push(n, r, a), s.push(r, i, a), (E += 6);
              }
            o.addGroup(f, E, _), (f += E), (d += T);
          }
        }
        static fromJSON(t) {
          return new e(
            t.width,
            t.height,
            t.depth,
            t.widthSegments,
            t.heightSegments,
            t.depthSegments
          );
        }
      }),
      (Zu = { clone: Pn, merge: Fn }),
      (Qu = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`),
      ($u = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`),
      (ed = class extends pu {
        constructor(e) {
          super(),
            (this.type = `ShaderMaterial`),
            (this.defines = {}),
            (this.uniforms = {}),
            (this.vertexShader = Qu),
            (this.fragmentShader = $u),
            (this.linewidth = 1),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.fog = !1),
            (this.lights = !1),
            (this.clipping = !1),
            (this.extensions = {
              derivatives: !1,
              fragDepth: !1,
              drawBuffers: !1,
              shaderTextureLOD: !1,
            }),
            (this.defaultAttributeValues = {
              color: [1, 1, 1],
              uv: [0, 0],
              uv2: [0, 0],
            }),
            (this.index0AttributeName = void 0),
            (this.uniformsNeedUpdate = !1),
            (this.glslVersion = null),
            e !== void 0 &&
              (e.attributes !== void 0 &&
                console.error(
                  `THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.`
                ),
              this.setValues(e));
        }
        copy(e) {
          return (
            super.copy(e),
            (this.fragmentShader = e.fragmentShader),
            (this.vertexShader = e.vertexShader),
            (this.uniforms = Pn(e.uniforms)),
            (this.defines = Object.assign({}, e.defines)),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.lights = e.lights),
            (this.clipping = e.clipping),
            (this.extensions = Object.assign({}, e.extensions)),
            (this.glslVersion = e.glslVersion),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          for (let n in ((t.glslVersion = this.glslVersion),
          (t.uniforms = {}),
          this.uniforms)) {
            let r = this.uniforms[n].value;
            r && r.isTexture
              ? (t.uniforms[n] = { type: `t`, value: r.toJSON(e).uuid })
              : r && r.isColor
              ? (t.uniforms[n] = { type: `c`, value: r.getHex() })
              : r && r.isVector2
              ? (t.uniforms[n] = { type: `v2`, value: r.toArray() })
              : r && r.isVector3
              ? (t.uniforms[n] = { type: `v3`, value: r.toArray() })
              : r && r.isVector4
              ? (t.uniforms[n] = { type: `v4`, value: r.toArray() })
              : r && r.isMatrix3
              ? (t.uniforms[n] = { type: `m3`, value: r.toArray() })
              : r && r.isMatrix4
              ? (t.uniforms[n] = { type: `m4`, value: r.toArray() })
              : (t.uniforms[n] = { value: r });
          }
          Object.keys(this.defines).length > 0 && (t.defines = this.defines),
            (t.vertexShader = this.vertexShader),
            (t.fragmentShader = this.fragmentShader);
          let n = {};
          for (let e in this.extensions)
            !0 === this.extensions[e] && (n[e] = !0);
          return Object.keys(n).length > 0 && (t.extensions = n), t;
        }
      }),
      (ed.prototype.isShaderMaterial = !0),
      (td = class extends eu {
        constructor() {
          super(),
            (this.type = `Camera`),
            (this.matrixWorldInverse = new Y()),
            (this.projectionMatrix = new Y()),
            (this.projectionMatrixInverse = new Y());
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            this
          );
        }
        getWorldDirection(e) {
          this.updateWorldMatrix(!0, !1);
          let t = this.matrixWorld.elements;
          return e.set(-t[8], -t[9], -t[10]).normalize();
        }
        updateMatrixWorld(e) {
          super.updateMatrixWorld(e),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        updateWorldMatrix(e, t) {
          super.updateWorldMatrix(e, t),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      (td.prototype.isCamera = !0),
      (nd = class extends td {
        constructor(e = 50, t = 1, n = 0.1, r = 2e3) {
          super(),
            (this.type = `PerspectiveCamera`),
            (this.fov = e),
            (this.zoom = 1),
            (this.near = n),
            (this.far = r),
            (this.focus = 10),
            (this.aspect = t),
            (this.view = null),
            (this.filmGauge = 35),
            (this.filmOffset = 0),
            this.updateProjectionMatrix();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = e.view === null ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        }
        setFocalLength(e) {
          let t = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * Wc * Math.atan(t)), this.updateProjectionMatrix();
        }
        getFocalLength() {
          let e = Math.tan(0.5 * Uc * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        }
        getEffectiveFOV() {
          return 2 * Wc * Math.atan(Math.tan(0.5 * Uc * this.fov) / this.zoom);
        }
        getFilmWidth() {
          return this.filmGauge * Math.min(this.aspect, 1);
        }
        getFilmHeight() {
          return this.filmGauge / Math.max(this.aspect, 1);
        }
        setViewOffset(e, t, n, r, i, a) {
          (this.aspect = e / t),
            this.view === null &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = r),
            (this.view.width = i),
            (this.view.height = a),
            this.updateProjectionMatrix();
        }
        clearViewOffset() {
          this.view !== null && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
          let e = this.near,
            t = (e * Math.tan(0.5 * Uc * this.fov)) / this.zoom,
            n = 2 * t,
            r = this.aspect * n,
            i = -0.5 * r,
            a = this.view;
          if (this.view !== null && this.view.enabled) {
            let e = a.fullWidth,
              o = a.fullHeight;
            (i += (a.offsetX * r) / e),
              (t -= (a.offsetY * n) / o),
              (r *= a.width / e),
              (n *= a.height / o);
          }
          let o = this.filmOffset;
          o !== 0 && (i += (e * o) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              i,
              i + r,
              t,
              t - n,
              e,
              this.far
            ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            this.view !== null &&
              (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
          );
        }
      }),
      (nd.prototype.isPerspectiveCamera = !0),
      (rd = 90),
      (id = 1),
      (ad = class extends eu {
        constructor(e, t, n) {
          if (
            (super(),
            (this.type = `CubeCamera`),
            !0 !== n.isWebGLCubeRenderTarget)
          ) {
            console.error(
              `THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.`
            );
            return;
          }
          this.renderTarget = n;
          let r = new nd(rd, id, e, t);
          (r.layers = this.layers),
            r.up.set(0, -1, 0),
            r.lookAt(new J(1, 0, 0)),
            this.add(r);
          let i = new nd(rd, id, e, t);
          (i.layers = this.layers),
            i.up.set(0, -1, 0),
            i.lookAt(new J(-1, 0, 0)),
            this.add(i);
          let a = new nd(rd, id, e, t);
          (a.layers = this.layers),
            a.up.set(0, 0, 1),
            a.lookAt(new J(0, 1, 0)),
            this.add(a);
          let o = new nd(rd, id, e, t);
          (o.layers = this.layers),
            o.up.set(0, 0, -1),
            o.lookAt(new J(0, -1, 0)),
            this.add(o);
          let s = new nd(rd, id, e, t);
          (s.layers = this.layers),
            s.up.set(0, -1, 0),
            s.lookAt(new J(0, 0, 1)),
            this.add(s);
          let c = new nd(rd, id, e, t);
          (c.layers = this.layers),
            c.up.set(0, -1, 0),
            c.lookAt(new J(0, 0, -1)),
            this.add(c);
        }
        update(e, t) {
          this.parent === null && this.updateMatrixWorld();
          let n = this.renderTarget,
            [r, i, a, o, s, c] = this.children,
            l = e.xr.enabled,
            u = e.getRenderTarget();
          e.xr.enabled = !1;
          let d = n.texture.generateMipmaps;
          (n.texture.generateMipmaps = !1),
            e.setRenderTarget(n, 0),
            e.render(t, r),
            e.setRenderTarget(n, 1),
            e.render(t, i),
            e.setRenderTarget(n, 2),
            e.render(t, a),
            e.setRenderTarget(n, 3),
            e.render(t, o),
            e.setRenderTarget(n, 4),
            e.render(t, s),
            (n.texture.generateMipmaps = d),
            e.setRenderTarget(n, 5),
            e.render(t, c),
            e.setRenderTarget(u),
            (e.xr.enabled = l);
        }
      }),
      (od = class extends Yc {
        constructor(e, t, n, r, i, a, o, s, c, l) {
          (e = e === void 0 ? [] : e),
            (t = t === void 0 ? Uo : t),
            super(e, t, n, r, i, a, o, s, c, l),
            (this.flipY = !1);
        }
        get images() {
          return this.image;
        }
        set images(e) {
          this.image = e;
        }
      }),
      (od.prototype.isCubeTexture = !0),
      (sd = class extends Zc {
        constructor(e, t, n) {
          Number.isInteger(t) &&
            (console.warn(
              `THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )`
            ),
            (t = n)),
            super(e, e, t),
            (t ||= {}),
            (this.texture = new od(
              void 0,
              t.mapping,
              t.wrapS,
              t.wrapT,
              t.magFilter,
              t.minFilter,
              t.format,
              t.type,
              t.anisotropy,
              t.encoding
            )),
            (this.texture.isRenderTargetTexture = !0),
            (this.texture.generateMipmaps =
              t.generateMipmaps !== void 0 && t.generateMipmaps),
            (this.texture.minFilter =
              t.minFilter === void 0 ? ts : t.minFilter),
            (this.texture._needsFlipEnvMap = !1);
        }
        fromEquirectangularTexture(e, t) {
          (this.texture.type = t.type),
            (this.texture.format = bs),
            (this.texture.encoding = t.encoding),
            (this.texture.generateMipmaps = t.generateMipmaps),
            (this.texture.minFilter = t.minFilter),
            (this.texture.magFilter = t.magFilter);
          let n = {
              uniforms: { tEquirect: { value: null } },
              vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
              fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
            },
            r = new Xu(5, 5, 5),
            i = new ed({
              name: `CubemapFromEquirect`,
              uniforms: Pn(n.uniforms),
              vertexShader: n.vertexShader,
              fragmentShader: n.fragmentShader,
              side: $a,
              blending: no,
            });
          i.uniforms.tEquirect.value = t;
          let a = new Yu(r, i),
            o = t.minFilter;
          return (
            t.minFilter === rs && (t.minFilter = ts),
            new ad(1, 10, this).update(e, a),
            (t.minFilter = o),
            a.geometry.dispose(),
            a.material.dispose(),
            this
          );
        }
        clear(e, t, n, r) {
          let i = e.getRenderTarget();
          for (let i = 0; i < 6; i++)
            e.setRenderTarget(this, i), e.clear(t, n, r);
          e.setRenderTarget(i);
        }
      }),
      (sd.prototype.isWebGLCubeRenderTarget = !0),
      (cd = new J()),
      (ld = new J()),
      (ud = new Gc()),
      (dd = class {
        constructor(e = new J(1, 0, 0), t = 0) {
          (this.normal = e), (this.constant = t);
        }
        set(e, t) {
          return this.normal.copy(e), (this.constant = t), this;
        }
        setComponents(e, t, n, r) {
          return this.normal.set(e, t, n), (this.constant = r), this;
        }
        setFromNormalAndCoplanarPoint(e, t) {
          return (
            this.normal.copy(e), (this.constant = -t.dot(this.normal)), this
          );
        }
        setFromCoplanarPoints(e, t, n) {
          let r = cd.subVectors(n, t).cross(ld.subVectors(e, t)).normalize();
          return this.setFromNormalAndCoplanarPoint(r, e), this;
        }
        copy(e) {
          return this.normal.copy(e.normal), (this.constant = e.constant), this;
        }
        normalize() {
          let e = 1 / this.normal.length();
          return this.normal.multiplyScalar(e), (this.constant *= e), this;
        }
        negate() {
          return (this.constant *= -1), this.normal.negate(), this;
        }
        distanceToPoint(e) {
          return this.normal.dot(e) + this.constant;
        }
        distanceToSphere(e) {
          return this.distanceToPoint(e.center) - e.radius;
        }
        projectPoint(e, t) {
          return t
            .copy(this.normal)
            .multiplyScalar(-this.distanceToPoint(e))
            .add(e);
        }
        intersectLine(e, t) {
          let n = e.delta(cd),
            r = this.normal.dot(n);
          if (r === 0)
            return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
          let i = -(e.start.dot(this.normal) + this.constant) / r;
          return i < 0 || i > 1
            ? null
            : t.copy(n).multiplyScalar(i).add(e.start);
        }
        intersectsLine(e) {
          let t = this.distanceToPoint(e.start),
            n = this.distanceToPoint(e.end);
          return (t < 0 && n > 0) || (n < 0 && t > 0);
        }
        intersectsBox(e) {
          return e.intersectsPlane(this);
        }
        intersectsSphere(e) {
          return e.intersectsPlane(this);
        }
        coplanarPoint(e) {
          return e.copy(this.normal).multiplyScalar(-this.constant);
        }
        applyMatrix4(e, t) {
          let n = t || ud.getNormalMatrix(e),
            r = this.coplanarPoint(cd).applyMatrix4(e),
            i = this.normal.applyMatrix3(n).normalize();
          return (this.constant = -r.dot(i)), this;
        }
        translate(e) {
          return (this.constant -= e.dot(this.normal)), this;
        }
        equals(e) {
          return e.normal.equals(this.normal) && e.constant === this.constant;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      (dd.prototype.isPlane = !0),
      (fd = new xl()),
      (pd = new J()),
      (md = class {
        constructor(
          e = new dd(),
          t = new dd(),
          n = new dd(),
          r = new dd(),
          i = new dd(),
          a = new dd()
        ) {
          this.planes = [e, t, n, r, i, a];
        }
        set(e, t, n, r, i, a) {
          let o = this.planes;
          return (
            o[0].copy(e),
            o[1].copy(t),
            o[2].copy(n),
            o[3].copy(r),
            o[4].copy(i),
            o[5].copy(a),
            this
          );
        }
        copy(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++) t[n].copy(e.planes[n]);
          return this;
        }
        setFromProjectionMatrix(e) {
          let t = this.planes,
            n = e.elements,
            r = n[0],
            i = n[1],
            a = n[2],
            o = n[3],
            s = n[4],
            c = n[5],
            l = n[6],
            u = n[7],
            d = n[8],
            f = n[9],
            p = n[10],
            m = n[11],
            h = n[12],
            g = n[13],
            _ = n[14],
            v = n[15];
          return (
            t[0].setComponents(o - r, u - s, m - d, v - h).normalize(),
            t[1].setComponents(o + r, u + s, m + d, v + h).normalize(),
            t[2].setComponents(o + i, u + c, m + f, v + g).normalize(),
            t[3].setComponents(o - i, u - c, m - f, v - g).normalize(),
            t[4].setComponents(o - a, u - l, m - p, v - _).normalize(),
            t[5].setComponents(o + a, u + l, m + p, v + _).normalize(),
            this
          );
        }
        intersectsObject(e) {
          let t = e.geometry;
          return (
            t.boundingSphere === null && t.computeBoundingSphere(),
            fd.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
            this.intersectsSphere(fd)
          );
        }
        intersectsSprite(e) {
          return (
            fd.center.set(0, 0, 0),
            (fd.radius = 0.7071067811865476),
            fd.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(fd)
          );
        }
        intersectsSphere(e) {
          let t = this.planes,
            n = e.center,
            r = -e.radius;
          for (let e = 0; e < 6; e++)
            if (t[e].distanceToPoint(n) < r) return !1;
          return !0;
        }
        intersectsBox(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++) {
            let r = t[n];
            if (
              ((pd.x = r.normal.x > 0 ? e.max.x : e.min.x),
              (pd.y = r.normal.y > 0 ? e.max.y : e.min.y),
              (pd.z = r.normal.z > 0 ? e.max.z : e.min.z),
              r.distanceToPoint(pd) < 0)
            )
              return !1;
          }
          return !0;
        }
        containsPoint(e) {
          let t = this.planes;
          for (let n = 0; n < 6; n++)
            if (t[n].distanceToPoint(e) < 0) return !1;
          return !0;
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      (hd = class e extends ju {
        constructor(e = 1, t = 1, n = 1, r = 1) {
          super(),
            (this.type = `PlaneGeometry`),
            (this.parameters = {
              width: e,
              height: t,
              widthSegments: n,
              heightSegments: r,
            });
          let i = e / 2,
            a = t / 2,
            o = Math.floor(n),
            s = Math.floor(r),
            c = o + 1,
            l = s + 1,
            u = e / o,
            d = t / s,
            f = [],
            p = [],
            m = [],
            h = [];
          for (let e = 0; e < l; e++) {
            let t = e * d - a;
            for (let n = 0; n < c; n++) {
              let r = n * u - i;
              p.push(r, -t, 0),
                m.push(0, 0, 1),
                h.push(n / o),
                h.push(1 - e / s);
            }
          }
          for (let e = 0; e < s; e++)
            for (let t = 0; t < o; t++) {
              let n = t + c * e,
                r = t + c * (e + 1),
                i = t + 1 + c * (e + 1),
                a = t + 1 + c * e;
              f.push(n, r, a), f.push(r, i, a);
            }
          this.setIndex(f),
            this.setAttribute(`position`, new Z(p, 3)),
            this.setAttribute(`normal`, new Z(m, 3)),
            this.setAttribute(`uv`, new Z(h, 2));
        }
        static fromJSON(t) {
          return new e(t.width, t.height, t.widthSegments, t.heightSegments);
        }
      }),
      (Q = {
        alphamap_fragment: `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,
        alphamap_pars_fragment: `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
        alphatest_fragment: `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,
        alphatest_pars_fragment: `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
        aomap_fragment: `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
        aomap_pars_fragment: `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
        begin_vertex: `vec3 transformed = vec3( position );`,
        beginnormal_vertex: `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
        bsdfs: `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,
        bumpmap_pars_fragment: `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
        clipping_planes_fragment: `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,
        clipping_planes_pars_fragment: `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
        clipping_planes_pars_vertex: `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
        clipping_planes_vertex: `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
        color_fragment: `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
        color_pars_fragment: `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
        color_pars_vertex: `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,
        color_vertex: `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,
        common: `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,
        cube_uv_reflection_fragment: `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
        defaultnormal_vertex: `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
        displacementmap_pars_vertex: `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
        displacementmap_vertex: `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,
        emissivemap_fragment: `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
        emissivemap_pars_fragment: `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
        encodings_fragment: `gl_FragColor = linearToOutputTexel( gl_FragColor );`,
        encodings_pars_fragment: `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,
        envmap_fragment: `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
        envmap_common_pars_fragment: `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,
        envmap_pars_fragment: `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
        envmap_pars_vertex: `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
        envmap_physical_pars_fragment: `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,
        envmap_vertex: `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
        fog_vertex: `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
        fog_pars_vertex: `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
        fog_fragment: `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
        fog_pars_fragment: `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
        gradientmap_pars_fragment: `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,
        lightmap_fragment: `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,
        lightmap_pars_fragment: `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
        lights_lambert_vertex: `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,
        lights_pars_begin: `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
        lights_toon_fragment: `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
        lights_toon_pars_fragment: `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,
        lights_phong_fragment: `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
        lights_phong_pars_fragment: `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,
        lights_physical_fragment: `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,
        lights_physical_pars_fragment: `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
        lights_fragment_begin: `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
        lights_fragment_maps: `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
        lights_fragment_end: `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,
        logdepthbuf_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
        logdepthbuf_pars_fragment: `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
        logdepthbuf_pars_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,
        logdepthbuf_vertex: `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,
        map_fragment: `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,
        map_pars_fragment: `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
        map_particle_fragment: `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
        map_particle_pars_fragment: `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
        metalnessmap_fragment: `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
        metalnessmap_pars_fragment: `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
        morphnormal_vertex: `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,
        morphtarget_pars_vertex: `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,
        morphtarget_vertex: `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,
        normal_fragment_begin: `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,
        normal_fragment_maps: `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
        normal_pars_fragment: `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
        normal_pars_vertex: `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
        normal_vertex: `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
        normalmap_pars_fragment: `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,
        clearcoat_normal_fragment_begin: `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,
        clearcoat_normal_fragment_maps: `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,
        clearcoat_pars_fragment: `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,
        output_fragment: `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
        packing: `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,
        premultiplied_alpha_fragment: `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
        project_vertex: `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
        dithering_fragment: `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
        dithering_pars_fragment: `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
        roughnessmap_fragment: `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
        roughnessmap_pars_fragment: `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
        shadowmap_pars_fragment: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,
        shadowmap_pars_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
        shadowmap_vertex: `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,
        shadowmask_pars_fragment: `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
        skinbase_vertex: `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
        skinning_pars_vertex: `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,
        skinning_vertex: `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
        skinnormal_vertex: `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
        specularmap_fragment: `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
        specularmap_pars_fragment: `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
        tonemapping_fragment: `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
        tonemapping_pars_fragment: `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
        transmission_fragment: `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,
        transmission_pars_fragment: `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,
        uv_pars_fragment: `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,
        uv_pars_vertex: `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,
        uv_vertex: `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,
        uv2_pars_fragment: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,
        uv2_pars_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,
        uv2_vertex: `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,
        worldpos_vertex: `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,
        background_vert: `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
        background_frag: `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,
        cube_vert: `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
        cube_frag: `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,
        depth_vert: `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
        depth_frag: `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
        distanceRGBA_vert: `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
        distanceRGBA_frag: `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
        equirect_vert: `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
        equirect_frag: `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,
        linedashed_vert: `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
        linedashed_frag: `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
        meshbasic_vert: `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
        meshbasic_frag: `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        meshlambert_vert: `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
        meshlambert_frag: `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        meshmatcap_vert: `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
        meshmatcap_frag: `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        meshnormal_vert: `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
        meshnormal_frag: `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,
        meshphong_vert: `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
        meshphong_frag: `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        meshphysical_vert: `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
        meshphysical_frag: `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        meshtoon_vert: `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
        meshtoon_frag: `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
        points_vert: `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
        points_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
        shadow_vert: `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
        shadow_frag: `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,
        sprite_vert: `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
        sprite_frag: `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,
      }),
      ($ = {
        common: {
          diffuse: { value: new X(16777215) },
          opacity: { value: 1 },
          map: { value: null },
          uvTransform: { value: new Gc() },
          uv2Transform: { value: new Gc() },
          alphaMap: { value: null },
          alphaTest: { value: 0 },
        },
        specularmap: { specularMap: { value: null } },
        envmap: {
          envMap: { value: null },
          flipEnvMap: { value: -1 },
          reflectivity: { value: 1 },
          ior: { value: 1.5 },
          refractionRatio: { value: 0.98 },
        },
        aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
        lightmap: {
          lightMap: { value: null },
          lightMapIntensity: { value: 1 },
        },
        emissivemap: { emissiveMap: { value: null } },
        bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
        normalmap: {
          normalMap: { value: null },
          normalScale: { value: new q(1, 1) },
        },
        displacementmap: {
          displacementMap: { value: null },
          displacementScale: { value: 1 },
          displacementBias: { value: 0 },
        },
        roughnessmap: { roughnessMap: { value: null } },
        metalnessmap: { metalnessMap: { value: null } },
        gradientmap: { gradientMap: { value: null } },
        fog: {
          fogDensity: { value: 25e-5 },
          fogNear: { value: 1 },
          fogFar: { value: 2e3 },
          fogColor: { value: new X(16777215) },
        },
        lights: {
          ambientLightColor: { value: [] },
          lightProbe: { value: [] },
          directionalLights: {
            value: [],
            properties: { direction: {}, color: {} },
          },
          directionalLightShadows: {
            value: [],
            properties: {
              shadowBias: {},
              shadowNormalBias: {},
              shadowRadius: {},
              shadowMapSize: {},
            },
          },
          directionalShadowMap: { value: [] },
          directionalShadowMatrix: { value: [] },
          spotLights: {
            value: [],
            properties: {
              color: {},
              position: {},
              direction: {},
              distance: {},
              coneCos: {},
              penumbraCos: {},
              decay: {},
            },
          },
          spotLightShadows: {
            value: [],
            properties: {
              shadowBias: {},
              shadowNormalBias: {},
              shadowRadius: {},
              shadowMapSize: {},
            },
          },
          spotShadowMap: { value: [] },
          spotShadowMatrix: { value: [] },
          pointLights: {
            value: [],
            properties: { color: {}, position: {}, decay: {}, distance: {} },
          },
          pointLightShadows: {
            value: [],
            properties: {
              shadowBias: {},
              shadowNormalBias: {},
              shadowRadius: {},
              shadowMapSize: {},
              shadowCameraNear: {},
              shadowCameraFar: {},
            },
          },
          pointShadowMap: { value: [] },
          pointShadowMatrix: { value: [] },
          hemisphereLights: {
            value: [],
            properties: { direction: {}, skyColor: {}, groundColor: {} },
          },
          rectAreaLights: {
            value: [],
            properties: { color: {}, position: {}, width: {}, height: {} },
          },
          ltc_1: { value: null },
          ltc_2: { value: null },
        },
        points: {
          diffuse: { value: new X(16777215) },
          opacity: { value: 1 },
          size: { value: 1 },
          scale: { value: 1 },
          map: { value: null },
          alphaMap: { value: null },
          alphaTest: { value: 0 },
          uvTransform: { value: new Gc() },
        },
        sprite: {
          diffuse: { value: new X(16777215) },
          opacity: { value: 1 },
          center: { value: new q(0.5, 0.5) },
          rotation: { value: 0 },
          map: { value: null },
          alphaMap: { value: null },
          alphaTest: { value: 0 },
          uvTransform: { value: new Gc() },
        },
      }),
      (gd = {
        basic: {
          uniforms: Fn([
            $.common,
            $.specularmap,
            $.envmap,
            $.aomap,
            $.lightmap,
            $.fog,
          ]),
          vertexShader: Q.meshbasic_vert,
          fragmentShader: Q.meshbasic_frag,
        },
        lambert: {
          uniforms: Fn([
            $.common,
            $.specularmap,
            $.envmap,
            $.aomap,
            $.lightmap,
            $.emissivemap,
            $.fog,
            $.lights,
            { emissive: { value: new X(0) } },
          ]),
          vertexShader: Q.meshlambert_vert,
          fragmentShader: Q.meshlambert_frag,
        },
        phong: {
          uniforms: Fn([
            $.common,
            $.specularmap,
            $.envmap,
            $.aomap,
            $.lightmap,
            $.emissivemap,
            $.bumpmap,
            $.normalmap,
            $.displacementmap,
            $.fog,
            $.lights,
            {
              emissive: { value: new X(0) },
              specular: { value: new X(1118481) },
              shininess: { value: 30 },
            },
          ]),
          vertexShader: Q.meshphong_vert,
          fragmentShader: Q.meshphong_frag,
        },
        standard: {
          uniforms: Fn([
            $.common,
            $.envmap,
            $.aomap,
            $.lightmap,
            $.emissivemap,
            $.bumpmap,
            $.normalmap,
            $.displacementmap,
            $.roughnessmap,
            $.metalnessmap,
            $.fog,
            $.lights,
            {
              emissive: { value: new X(0) },
              roughness: { value: 1 },
              metalness: { value: 0 },
              envMapIntensity: { value: 1 },
            },
          ]),
          vertexShader: Q.meshphysical_vert,
          fragmentShader: Q.meshphysical_frag,
        },
        toon: {
          uniforms: Fn([
            $.common,
            $.aomap,
            $.lightmap,
            $.emissivemap,
            $.bumpmap,
            $.normalmap,
            $.displacementmap,
            $.gradientmap,
            $.fog,
            $.lights,
            { emissive: { value: new X(0) } },
          ]),
          vertexShader: Q.meshtoon_vert,
          fragmentShader: Q.meshtoon_frag,
        },
        matcap: {
          uniforms: Fn([
            $.common,
            $.bumpmap,
            $.normalmap,
            $.displacementmap,
            $.fog,
            { matcap: { value: null } },
          ]),
          vertexShader: Q.meshmatcap_vert,
          fragmentShader: Q.meshmatcap_frag,
        },
        points: {
          uniforms: Fn([$.points, $.fog]),
          vertexShader: Q.points_vert,
          fragmentShader: Q.points_frag,
        },
        dashed: {
          uniforms: Fn([
            $.common,
            $.fog,
            {
              scale: { value: 1 },
              dashSize: { value: 1 },
              totalSize: { value: 2 },
            },
          ]),
          vertexShader: Q.linedashed_vert,
          fragmentShader: Q.linedashed_frag,
        },
        depth: {
          uniforms: Fn([$.common, $.displacementmap]),
          vertexShader: Q.depth_vert,
          fragmentShader: Q.depth_frag,
        },
        normal: {
          uniforms: Fn([
            $.common,
            $.bumpmap,
            $.normalmap,
            $.displacementmap,
            { opacity: { value: 1 } },
          ]),
          vertexShader: Q.meshnormal_vert,
          fragmentShader: Q.meshnormal_frag,
        },
        sprite: {
          uniforms: Fn([$.sprite, $.fog]),
          vertexShader: Q.sprite_vert,
          fragmentShader: Q.sprite_frag,
        },
        background: {
          uniforms: { uvTransform: { value: new Gc() }, t2D: { value: null } },
          vertexShader: Q.background_vert,
          fragmentShader: Q.background_frag,
        },
        cube: {
          uniforms: Fn([$.envmap, { opacity: { value: 1 } }]),
          vertexShader: Q.cube_vert,
          fragmentShader: Q.cube_frag,
        },
        equirect: {
          uniforms: { tEquirect: { value: null } },
          vertexShader: Q.equirect_vert,
          fragmentShader: Q.equirect_frag,
        },
        distanceRGBA: {
          uniforms: Fn([
            $.common,
            $.displacementmap,
            {
              referencePosition: { value: new J() },
              nearDistance: { value: 1 },
              farDistance: { value: 1e3 },
            },
          ]),
          vertexShader: Q.distanceRGBA_vert,
          fragmentShader: Q.distanceRGBA_frag,
        },
        shadow: {
          uniforms: Fn([
            $.lights,
            $.fog,
            { color: { value: new X(0) }, opacity: { value: 1 } },
          ]),
          vertexShader: Q.shadow_vert,
          fragmentShader: Q.shadow_frag,
        },
      }),
      (gd.physical = {
        uniforms: Fn([
          gd.standard.uniforms,
          {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatNormalScale: { value: new q(1, 1) },
            clearcoatNormalMap: { value: null },
            sheen: { value: 0 },
            sheenColor: { value: new X(0) },
            sheenColorMap: { value: null },
            sheenRoughness: { value: 0 },
            sheenRoughnessMap: { value: null },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionSamplerSize: { value: new q() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new X(0) },
            specularIntensity: { value: 0 },
            specularIntensityMap: { value: null },
            specularColor: { value: new X(1, 1, 1) },
            specularColorMap: { value: null },
          },
        ]),
        vertexShader: Q.meshphysical_vert,
        fragmentShader: Q.meshphysical_frag,
      }),
      (_d = class extends td {
        constructor(e = -1, t = 1, n = 1, r = -1, i = 0.1, a = 2e3) {
          super(),
            (this.type = `OrthographicCamera`),
            (this.zoom = 1),
            (this.view = null),
            (this.left = e),
            (this.right = t),
            (this.top = n),
            (this.bottom = r),
            (this.near = i),
            (this.far = a),
            this.updateProjectionMatrix();
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = e.view === null ? null : Object.assign({}, e.view)),
            this
          );
        }
        setViewOffset(e, t, n, r, i, a) {
          this.view === null &&
            (this.view = {
              enabled: !0,
              fullWidth: 1,
              fullHeight: 1,
              offsetX: 0,
              offsetY: 0,
              width: 1,
              height: 1,
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = r),
            (this.view.width = i),
            (this.view.height = a),
            this.updateProjectionMatrix();
        }
        clearViewOffset() {
          this.view !== null && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
          let e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            r = (this.top + this.bottom) / 2,
            i = n - e,
            a = n + e,
            o = r + t,
            s = r - t;
          if (this.view !== null && this.view.enabled) {
            let e = (this.right - this.left) / this.view.fullWidth / this.zoom,
              t = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            (i += e * this.view.offsetX),
              (a = i + e * this.view.width),
              (o -= t * this.view.offsetY),
              (s = o - t * this.view.height);
          }
          this.projectionMatrix.makeOrthographic(
            i,
            a,
            o,
            s,
            this.near,
            this.far
          ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            this.view !== null &&
              (t.object.view = Object.assign({}, this.view)),
            t
          );
        }
      }),
      (_d.prototype.isOrthographicCamera = !0),
      (vd = class extends ed {
        constructor(e) {
          super(e), (this.type = `RawShaderMaterial`);
        }
      }),
      (vd.prototype.isRawShaderMaterial = !0),
      (yd = 4),
      (bd = 8),
      (xd = 2 ** bd),
      (Sd = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582]),
      (Cd = bd - yd + 1 + Sd.length),
      (wd = 20),
      (Td = { [kc]: 0, [Ac]: 1 }),
      (Ed = new _d()),
      ({ _lodPlanes: Dd, _sizeLods: Od, _sigmas: kd } = Wn()),
      (Ad = new X()),
      (jd = null),
      (Md = (1 + Math.sqrt(5)) / 2),
      (Nd = 1 / Md),
      (Pd = [
        new J(1, 1, 1),
        new J(-1, 1, 1),
        new J(1, 1, -1),
        new J(-1, 1, -1),
        new J(0, Md, Nd),
        new J(0, Md, -Nd),
        new J(Nd, 0, Md),
        new J(-Nd, 0, Md),
        new J(Md, Nd, 0),
        new J(-Md, Nd, 0),
      ]),
      (Fd = class {
        constructor(e) {
          (this._renderer = e),
            (this._pingPongRenderTarget = null),
            (this._blurMaterial = qn(wd)),
            (this._equirectShader = null),
            (this._cubemapShader = null),
            this._compileMaterial(this._blurMaterial);
        }
        fromScene(e, t = 0, n = 0.1, r = 100) {
          jd = this._renderer.getRenderTarget();
          let i = this._allocateTargets();
          return (
            this._sceneToCubeUV(e, n, r, i),
            t > 0 && this._blur(i, 0, 0, t),
            this._applyPMREM(i),
            this._cleanup(i),
            i
          );
        }
        fromEquirectangular(e) {
          return this._fromTexture(e);
        }
        fromCubemap(e) {
          return this._fromTexture(e);
        }
        compileCubemapShader() {
          this._cubemapShader === null &&
            ((this._cubemapShader = Yn()),
            this._compileMaterial(this._cubemapShader));
        }
        compileEquirectangularShader() {
          this._equirectShader === null &&
            ((this._equirectShader = Jn()),
            this._compileMaterial(this._equirectShader));
        }
        dispose() {
          this._blurMaterial.dispose(),
            this._cubemapShader !== null && this._cubemapShader.dispose(),
            this._equirectShader !== null && this._equirectShader.dispose();
          for (let e = 0; e < Dd.length; e++) Dd[e].dispose();
        }
        _cleanup(e) {
          this._pingPongRenderTarget.dispose(),
            this._renderer.setRenderTarget(jd),
            (e.scissorTest = !1),
            Kn(e, 0, 0, e.width, e.height);
        }
        _fromTexture(e) {
          jd = this._renderer.getRenderTarget();
          let t = this._allocateTargets(e);
          return (
            this._textureToCubeUV(e, t),
            this._applyPMREM(t),
            this._cleanup(t),
            t
          );
        }
        _allocateTargets(e) {
          let t = {
              magFilter: ts,
              minFilter: ts,
              generateMipmaps: !1,
              type: ps,
              format: bs,
              encoding: kc,
              depthBuffer: !1,
            },
            n = Gn(t);
          return (n.depthBuffer = !e), (this._pingPongRenderTarget = Gn(t)), n;
        }
        _compileMaterial(e) {
          let t = new Yu(Dd[0], e);
          this._renderer.compile(t, Ed);
        }
        _sceneToCubeUV(e, t, n, r) {
          let i = new nd(90, 1, t, n),
            a = [1, -1, 1, 1, 1, 1],
            o = [1, 1, 1, -1, -1, -1],
            s = this._renderer,
            c = s.autoClear,
            l = s.toneMapping;
          s.getClearColor(Ad), (s.toneMapping = Io), (s.autoClear = !1);
          let u = new _u({
              name: `PMREM.Background`,
              side: $a,
              depthWrite: !1,
              depthTest: !1,
            }),
            d = new Yu(new Xu(), u),
            f = !1,
            p = e.background;
          p
            ? p.isColor && (u.color.copy(p), (e.background = null), (f = !0))
            : (u.color.copy(Ad), (f = !0));
          for (let t = 0; t < 6; t++) {
            let n = t % 3;
            n == 0
              ? (i.up.set(0, a[t], 0), i.lookAt(o[t], 0, 0))
              : n == 1
              ? (i.up.set(0, 0, a[t]), i.lookAt(0, o[t], 0))
              : (i.up.set(0, a[t], 0), i.lookAt(0, 0, o[t])),
              Kn(r, n * xd, t > 2 ? xd : 0, xd, xd),
              s.setRenderTarget(r),
              f && s.render(d, i),
              s.render(e, i);
          }
          d.geometry.dispose(),
            d.material.dispose(),
            (s.toneMapping = l),
            (s.autoClear = c),
            (e.background = p);
        }
        _setEncoding(e, t) {
          !0 === this._renderer.capabilities.isWebGL2 &&
          t.format === bs &&
          t.type === os &&
          t.encoding === Ac
            ? (e.value = Td[kc])
            : (e.value = Td[t.encoding]);
        }
        _textureToCubeUV(e, t) {
          let n = this._renderer,
            r = e.mapping === Uo || e.mapping === Wo;
          r ? (this._cubemapShader ??= Yn()) : (this._equirectShader ??= Jn());
          let i = r ? this._cubemapShader : this._equirectShader,
            a = new Yu(Dd[0], i),
            o = i.uniforms;
          (o.envMap.value = e),
            r || o.texelSize.value.set(1 / e.image.width, 1 / e.image.height),
            this._setEncoding(o.inputEncoding, e),
            Kn(t, 0, 0, 3 * xd, 2 * xd),
            n.setRenderTarget(t),
            n.render(a, Ed);
        }
        _applyPMREM(e) {
          let t = this._renderer,
            n = t.autoClear;
          t.autoClear = !1;
          for (let t = 1; t < Cd; t++) {
            let n = Math.sqrt(kd[t] * kd[t] - kd[t - 1] * kd[t - 1]),
              r = Pd[(t - 1) % Pd.length];
            this._blur(e, t - 1, t, n, r);
          }
          t.autoClear = n;
        }
        _blur(e, t, n, r, i) {
          let a = this._pingPongRenderTarget;
          this._halfBlur(e, a, t, n, r, `latitudinal`, i),
            this._halfBlur(a, e, n, n, r, `longitudinal`, i);
        }
        _halfBlur(e, t, n, r, i, a, o) {
          let s = this._renderer,
            c = this._blurMaterial;
          a !== `latitudinal` &&
            a !== `longitudinal` &&
            console.error(
              `blur direction must be either latitudinal or longitudinal!`
            );
          let l = new Yu(Dd[r], c),
            u = c.uniforms,
            d = Od[n] - 1,
            f = isFinite(i) ? Math.PI / (2 * d) : (2 * Math.PI) / (2 * wd - 1),
            p = i / f,
            m = isFinite(i) ? 1 + Math.floor(3 * p) : wd;
          m > wd &&
            console.warn(
              `sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${wd}`
            );
          let h = [],
            g = 0;
          for (let e = 0; e < wd; ++e) {
            let t = e / p,
              n = Math.exp((-t * t) / 2);
            h.push(n), e == 0 ? (g += n) : e < m && (g += 2 * n);
          }
          for (let e = 0; e < h.length; e++) h[e] = h[e] / g;
          (u.envMap.value = e.texture),
            (u.samples.value = m),
            (u.weights.value = h),
            (u.latitudinal.value = a === `latitudinal`),
            o && (u.poleAxis.value = o),
            (u.dTheta.value = f),
            (u.mipInt.value = bd - n);
          let _ = Od[r],
            v = 3 * Math.max(0, xd - 2 * _),
            y =
              (r === 0 ? 0 : 2 * xd) + 2 * _ * (r > bd - yd ? r - bd + yd : 0);
          Kn(t, v, y, 3 * _, 2 * _), s.setRenderTarget(t), s.render(l, Ed);
        }
      }),
      (Id = class extends Yc {
        constructor(e = null, t = 1, n = 1, r = 1) {
          super(null),
            (this.image = { data: e, width: t, height: n, depth: r }),
            (this.magFilter = Qo),
            (this.minFilter = Qo),
            (this.wrapR = Xo),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
        }
      }),
      (Id.prototype.isDataTexture2DArray = !0),
      (Ld = class extends Yc {
        constructor(e = null, t = 1, n = 1, r = 1) {
          super(null),
            (this.image = { data: e, width: t, height: n, depth: r }),
            (this.magFilter = Qo),
            (this.minFilter = Qo),
            (this.wrapR = Xo),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
        }
      }),
      (Ld.prototype.isDataTexture3D = !0),
      (Rd = new Yc()),
      (zd = new Id()),
      (Bd = new Ld()),
      (Vd = new od()),
      (Hd = []),
      (Ud = []),
      (Wd = new Float32Array(16)),
      (Gd = new Float32Array(9)),
      (Kd = new Float32Array(4)),
      ($r.prototype.updateCache = function (e) {
        let t = this.cache;
        e instanceof Float32Array &&
          t.length !== e.length &&
          (this.cache = new Float32Array(e.length)),
          ur(t, e);
      }),
      (ei.prototype.setValue = function (e, t, n) {
        let r = this.seq;
        for (let i = 0, a = r.length; i !== a; ++i) {
          let a = r[i];
          a.setValue(e, t[a.id], n);
        }
      }),
      (qd = /(\w+)(\])?(\[|\.)?/g),
      (ri.prototype.setValue = function (e, t, n, r) {
        let i = this.map[t];
        i !== void 0 && i.setValue(e, n, r);
      }),
      (ri.prototype.setOptional = function (e, t, n) {
        let r = t[n];
        r !== void 0 && this.setValue(e, n, r);
      }),
      (ri.upload = function (e, t, n, r) {
        for (let i = 0, a = t.length; i !== a; ++i) {
          let a = t[i],
            o = n[a.id];
          !1 !== o.needsUpdate && a.setValue(e, o.value, r);
        }
      }),
      (ri.seqWithValue = function (e, t) {
        let n = [];
        for (let r = 0, i = e.length; r !== i; ++r) {
          let i = e[r];
          i.id in t && n.push(i);
        }
        return n;
      }),
      (Jd = 0),
      (Yd = /^[ \t]*#include +<([\w\d./]+)>/gm),
      (Xd =
        /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g),
      (Zd =
        /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g),
      (Qd = 0),
      ($d = class {
        constructor() {
          (this.shaderCache = new Map()), (this.materialCache = new Map());
        }
        update(e) {
          let t = e.vertexShader,
            n = e.fragmentShader,
            r = this._getShaderStage(t),
            i = this._getShaderStage(n),
            a = this._getShaderCacheForMaterial(e);
          return (
            !1 === a.has(r) && (a.add(r), r.usedTimes++),
            !1 === a.has(i) && (a.add(i), i.usedTimes++),
            this
          );
        }
        remove(e) {
          let t = this.materialCache.get(e);
          for (let e of t)
            e.usedTimes--, e.usedTimes === 0 && this.shaderCache.delete(e);
          return this.materialCache.delete(e), this;
        }
        getVertexShaderID(e) {
          return this._getShaderStage(e.vertexShader).id;
        }
        getFragmentShaderID(e) {
          return this._getShaderStage(e.fragmentShader).id;
        }
        dispose() {
          this.shaderCache.clear(), this.materialCache.clear();
        }
        _getShaderCacheForMaterial(e) {
          let t = this.materialCache;
          return !1 === t.has(e) && t.set(e, new Set()), t.get(e);
        }
        _getShaderStage(e) {
          let t = this.shaderCache;
          if (!1 === t.has(e)) {
            let n = new ef();
            t.set(e, n);
          }
          return t.get(e);
        }
      }),
      (ef = class {
        constructor() {
          (this.id = Qd++), (this.usedTimes = 0);
        }
      }),
      (tf = 0),
      (nf = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshDepthMaterial`),
            (this.depthPacking = jc),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.fog = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.depthPacking = e.depthPacking),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            this
          );
        }
      }),
      (nf.prototype.isMeshDepthMaterial = !0),
      (rf = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshDistanceMaterial`),
            (this.referencePosition = new J()),
            (this.nearDistance = 1),
            (this.farDistance = 1e3),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.fog = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.referencePosition.copy(e.referencePosition),
            (this.nearDistance = e.nearDistance),
            (this.farDistance = e.farDistance),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            this
          );
        }
      }),
      (rf.prototype.isMeshDistanceMaterial = !0),
      (af = `void main() {
	gl_Position = vec4( position, 1.0 );
}`),
      (sf = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`),
      (cf = class extends nd {
        constructor(e = []) {
          super(), (this.cameras = e);
        }
      }),
      (cf.prototype.isArrayCamera = !0),
      (lf = class extends eu {
        constructor() {
          super(), (this.type = `Group`);
        }
      }),
      (lf.prototype.isGroup = !0),
      (uf = { type: `move` }),
      (df = class {
        constructor() {
          (this._targetRay = null), (this._grip = null), (this._hand = null);
        }
        getHandSpace() {
          return (
            this._hand === null &&
              ((this._hand = new lf()),
              (this._hand.matrixAutoUpdate = !1),
              (this._hand.visible = !1),
              (this._hand.joints = {}),
              (this._hand.inputState = { pinching: !1 })),
            this._hand
          );
        }
        getTargetRaySpace() {
          return (
            this._targetRay === null &&
              ((this._targetRay = new lf()),
              (this._targetRay.matrixAutoUpdate = !1),
              (this._targetRay.visible = !1),
              (this._targetRay.hasLinearVelocity = !1),
              (this._targetRay.linearVelocity = new J()),
              (this._targetRay.hasAngularVelocity = !1),
              (this._targetRay.angularVelocity = new J())),
            this._targetRay
          );
        }
        getGripSpace() {
          return (
            this._grip === null &&
              ((this._grip = new lf()),
              (this._grip.matrixAutoUpdate = !1),
              (this._grip.visible = !1),
              (this._grip.hasLinearVelocity = !1),
              (this._grip.linearVelocity = new J()),
              (this._grip.hasAngularVelocity = !1),
              (this._grip.angularVelocity = new J())),
            this._grip
          );
        }
        dispatchEvent(e) {
          return (
            this._targetRay !== null && this._targetRay.dispatchEvent(e),
            this._grip !== null && this._grip.dispatchEvent(e),
            this._hand !== null && this._hand.dispatchEvent(e),
            this
          );
        }
        disconnect(e) {
          return (
            this.dispatchEvent({ type: `disconnected`, data: e }),
            this._targetRay !== null && (this._targetRay.visible = !1),
            this._grip !== null && (this._grip.visible = !1),
            this._hand !== null && (this._hand.visible = !1),
            this
          );
        }
        update(e, t, n) {
          let r = null,
            i = null,
            a = null,
            o = this._targetRay,
            s = this._grip,
            c = this._hand;
          if (e && t.session.visibilityState !== `visible-blurred`)
            if (
              (o !== null &&
                ((r = t.getPose(e.targetRaySpace, n)),
                r !== null &&
                  (o.matrix.fromArray(r.transform.matrix),
                  o.matrix.decompose(o.position, o.rotation, o.scale),
                  r.linearVelocity
                    ? ((o.hasLinearVelocity = !0),
                      o.linearVelocity.copy(r.linearVelocity))
                    : (o.hasLinearVelocity = !1),
                  r.angularVelocity
                    ? ((o.hasAngularVelocity = !0),
                      o.angularVelocity.copy(r.angularVelocity))
                    : (o.hasAngularVelocity = !1),
                  this.dispatchEvent(uf))),
              c && e.hand)
            ) {
              a = !0;
              for (let r of e.hand.values()) {
                let e = t.getJointPose(r, n);
                if (c.joints[r.jointName] === void 0) {
                  let e = new lf();
                  (e.matrixAutoUpdate = !1),
                    (e.visible = !1),
                    (c.joints[r.jointName] = e),
                    c.add(e);
                }
                let i = c.joints[r.jointName];
                e !== null &&
                  (i.matrix.fromArray(e.transform.matrix),
                  i.matrix.decompose(i.position, i.rotation, i.scale),
                  (i.jointRadius = e.radius)),
                  (i.visible = e !== null);
              }
              let r = c.joints[`index-finger-tip`],
                i = c.joints[`thumb-tip`],
                o = r.position.distanceTo(i.position),
                s = 0.02,
                l = 0.005;
              c.inputState.pinching && o > s + l
                ? ((c.inputState.pinching = !1),
                  this.dispatchEvent({
                    type: `pinchend`,
                    handedness: e.handedness,
                    target: this,
                  }))
                : !c.inputState.pinching &&
                  o <= s - l &&
                  ((c.inputState.pinching = !0),
                  this.dispatchEvent({
                    type: `pinchstart`,
                    handedness: e.handedness,
                    target: this,
                  }));
            } else
              s !== null &&
                e.gripSpace &&
                ((i = t.getPose(e.gripSpace, n)),
                i !== null &&
                  (s.matrix.fromArray(i.transform.matrix),
                  s.matrix.decompose(s.position, s.rotation, s.scale),
                  i.linearVelocity
                    ? ((s.hasLinearVelocity = !0),
                      s.linearVelocity.copy(i.linearVelocity))
                    : (s.hasLinearVelocity = !1),
                  i.angularVelocity
                    ? ((s.hasAngularVelocity = !0),
                      s.angularVelocity.copy(i.angularVelocity))
                    : (s.hasAngularVelocity = !1)));
          return (
            o !== null && (o.visible = r !== null),
            s !== null && (s.visible = i !== null),
            c !== null && (c.visible = a !== null),
            this
          );
        }
      }),
      (ff = class extends Yc {
        constructor(e, t, n, r, i, a, o, s, c, l) {
          if (((l = l === void 0 ? Cs : l), l !== Cs && l !== ws))
            throw Error(
              `DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat`
            );
          n === void 0 && l === Cs && (n = ls),
            n === void 0 && l === ws && (n = _s),
            super(null, r, i, a, o, s, l, n, c),
            (this.image = { width: e, height: t }),
            (this.magFilter = o === void 0 ? Qo : o),
            (this.minFilter = s === void 0 ? Qo : s),
            (this.flipY = !1),
            (this.generateMipmaps = !1);
        }
      }),
      (ff.prototype.isDepthTexture = !0),
      (pf = class extends Bc {
        constructor(e, t) {
          super();
          let n = this,
            r = null,
            i = 1,
            a = null,
            o = `local-floor`,
            s = e.extensions.has(`WEBGL_multisampled_render_to_texture`),
            c = null,
            l = null,
            u = null,
            d = null,
            f = !1,
            p = null,
            m = t.getContextAttributes(),
            h = null,
            g = null,
            _ = [],
            v = new Map(),
            y = new nd();
          y.layers.enable(1), (y.viewport = new Xc());
          let b = new nd();
          b.layers.enable(2), (b.viewport = new Xc());
          let x = [y, b],
            S = new cf();
          S.layers.enable(1), S.layers.enable(2);
          let C = null,
            w = null;
          (this.cameraAutoUpdate = !0),
            (this.enabled = !1),
            (this.isPresenting = !1),
            (this.getController = function (e) {
              let t = _[e];
              return (
                t === void 0 && ((t = new df()), (_[e] = t)),
                t.getTargetRaySpace()
              );
            }),
            (this.getControllerGrip = function (e) {
              let t = _[e];
              return (
                t === void 0 && ((t = new df()), (_[e] = t)), t.getGripSpace()
              );
            }),
            (this.getHand = function (e) {
              let t = _[e];
              return (
                t === void 0 && ((t = new df()), (_[e] = t)), t.getHandSpace()
              );
            });
          function T(e) {
            let t = v.get(e.inputSource);
            t && t.dispatchEvent({ type: e.type, data: e.inputSource });
          }
          function E() {
            v.forEach(function (e, t) {
              e.disconnect(t);
            }),
              v.clear(),
              (C = null),
              (w = null),
              e.setRenderTarget(h),
              (d = null),
              (u = null),
              (l = null),
              (r = null),
              (g = null),
              P.stop(),
              (n.isPresenting = !1),
              n.dispatchEvent({ type: `sessionend` });
          }
          (this.setFramebufferScaleFactor = function (e) {
            (i = e),
              !0 === n.isPresenting &&
                console.warn(
                  `THREE.WebXRManager: Cannot change framebuffer scale while presenting.`
                );
          }),
            (this.setReferenceSpaceType = function (e) {
              (o = e),
                !0 === n.isPresenting &&
                  console.warn(
                    `THREE.WebXRManager: Cannot change reference space type while presenting.`
                  );
            }),
            (this.getReferenceSpace = function () {
              return a;
            }),
            (this.getBaseLayer = function () {
              return u === null ? d : u;
            }),
            (this.getBinding = function () {
              return l;
            }),
            (this.getFrame = function () {
              return p;
            }),
            (this.getSession = function () {
              return r;
            }),
            (this.setSession = async function (c) {
              if (((r = c), r !== null)) {
                if (
                  ((h = e.getRenderTarget()),
                  r.addEventListener(`select`, T),
                  r.addEventListener(`selectstart`, T),
                  r.addEventListener(`selectend`, T),
                  r.addEventListener(`squeeze`, T),
                  r.addEventListener(`squeezestart`, T),
                  r.addEventListener(`squeezeend`, T),
                  r.addEventListener(`end`, E),
                  r.addEventListener(`inputsourceschange`, D),
                  !0 !== m.xrCompatible && (await t.makeXRCompatible()),
                  r.renderState.layers === void 0 ||
                    !1 === e.capabilities.isWebGL2)
                ) {
                  let n = {
                    antialias: r.renderState.layers !== void 0 || m.antialias,
                    alpha: m.alpha,
                    depth: m.depth,
                    stencil: m.stencil,
                    framebufferScaleFactor: i,
                  };
                  (d = new XRWebGLLayer(r, t, n)),
                    r.updateRenderState({ baseLayer: d }),
                    (g = new Zc(d.framebufferWidth, d.framebufferHeight, {
                      format: bs,
                      type: os,
                      encoding: e.outputEncoding,
                    }));
                } else {
                  f = m.antialias;
                  let n = null,
                    a = null,
                    o = null;
                  m.depth &&
                    ((o = m.stencil ? 35056 : 33190),
                    (n = m.stencil ? ws : Cs),
                    (a = m.stencil ? _s : ls));
                  let c = {
                    colorFormat: m.alpha || f ? 32856 : 32849,
                    depthFormat: o,
                    scaleFactor: i,
                  };
                  (l = new XRWebGLBinding(r, t)),
                    (u = l.createProjectionLayer(c)),
                    r.updateRenderState({ layers: [u] }),
                    (g = f
                      ? new $c(u.textureWidth, u.textureHeight, {
                          format: bs,
                          type: os,
                          depthTexture: new ff(
                            u.textureWidth,
                            u.textureHeight,
                            a,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            n
                          ),
                          stencilBuffer: m.stencil,
                          ignoreDepth: u.ignoreDepthValues,
                          useRenderToTexture: s,
                          encoding: e.outputEncoding,
                        })
                      : new Zc(u.textureWidth, u.textureHeight, {
                          format: m.alpha ? bs : ys,
                          type: os,
                          depthTexture: new ff(
                            u.textureWidth,
                            u.textureHeight,
                            a,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            void 0,
                            n
                          ),
                          stencilBuffer: m.stencil,
                          ignoreDepth: u.ignoreDepthValues,
                          encoding: e.outputEncoding,
                        }));
                }
                this.setFoveation(1),
                  (a = await r.requestReferenceSpace(o)),
                  P.setContext(r),
                  P.start(),
                  (n.isPresenting = !0),
                  n.dispatchEvent({ type: `sessionstart` });
              }
            });
          function D(e) {
            let t = r.inputSources;
            for (let e = 0; e < _.length; e++) v.set(t[e], _[e]);
            for (let t = 0; t < e.removed.length; t++) {
              let n = e.removed[t],
                r = v.get(n);
              r &&
                (r.dispatchEvent({ type: `disconnected`, data: n }),
                v.delete(n));
            }
            for (let t = 0; t < e.added.length; t++) {
              let n = e.added[t],
                r = v.get(n);
              r && r.dispatchEvent({ type: `connected`, data: n });
            }
          }
          let O = new J(),
            k = new J();
          function A(e, t, n) {
            O.setFromMatrixPosition(t.matrixWorld),
              k.setFromMatrixPosition(n.matrixWorld);
            let r = O.distanceTo(k),
              i = t.projectionMatrix.elements,
              a = n.projectionMatrix.elements,
              o = i[14] / (i[10] - 1),
              s = i[14] / (i[10] + 1),
              c = (i[9] + 1) / i[5],
              l = (i[9] - 1) / i[5],
              u = (i[8] - 1) / i[0],
              d = (a[8] + 1) / a[0],
              f = o * u,
              p = o * d,
              m = r / (-u + d),
              h = m * -u;
            t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
              e.translateX(h),
              e.translateZ(m),
              e.matrixWorld.compose(e.position, e.quaternion, e.scale),
              e.matrixWorldInverse.copy(e.matrixWorld).invert();
            let g = o + m,
              _ = s + m,
              v = f - h,
              y = p + (r - h),
              b = ((c * s) / _) * g,
              x = ((l * s) / _) * g;
            e.projectionMatrix.makePerspective(v, y, b, x, g, _);
          }
          function j(e, t) {
            t === null
              ? e.matrixWorld.copy(e.matrix)
              : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
              e.matrixWorldInverse.copy(e.matrixWorld).invert();
          }
          (this.updateCamera = function (e) {
            if (r === null) return;
            (S.near = b.near = y.near = e.near),
              (S.far = b.far = y.far = e.far),
              (C !== S.near || w !== S.far) &&
                (r.updateRenderState({ depthNear: S.near, depthFar: S.far }),
                (C = S.near),
                (w = S.far));
            let t = e.parent,
              n = S.cameras;
            j(S, t);
            for (let e = 0; e < n.length; e++) j(n[e], t);
            S.matrixWorld.decompose(S.position, S.quaternion, S.scale),
              e.position.copy(S.position),
              e.quaternion.copy(S.quaternion),
              e.scale.copy(S.scale),
              e.matrix.copy(S.matrix),
              e.matrixWorld.copy(S.matrixWorld);
            let i = e.children;
            for (let e = 0, t = i.length; e < t; e++)
              i[e].updateMatrixWorld(!0);
            n.length === 2
              ? A(S, y, b)
              : S.projectionMatrix.copy(y.projectionMatrix);
          }),
            (this.getCamera = function () {
              return S;
            }),
            (this.getFoveation = function () {
              return u === null
                ? d === null
                  ? void 0
                  : d.fixedFoveation
                : u.fixedFoveation;
            }),
            (this.setFoveation = function (e) {
              u !== null && (u.fixedFoveation = e),
                d !== null &&
                  d.fixedFoveation !== void 0 &&
                  (d.fixedFoveation = e);
            });
          let M = null;
          function N(t, n) {
            if (((c = n.getViewerPose(a)), (p = n), c !== null)) {
              let t = c.views;
              d !== null &&
                (e.setRenderTargetFramebuffer(g, d.framebuffer),
                e.setRenderTarget(g));
              let n = !1;
              t.length !== S.cameras.length &&
                ((S.cameras.length = 0), (n = !0));
              for (let r = 0; r < t.length; r++) {
                let i = t[r],
                  a = null;
                if (d !== null) a = d.getViewport(i);
                else {
                  let t = l.getViewSubImage(u, i);
                  (a = t.viewport),
                    r === 0 &&
                      (e.setRenderTargetTextures(
                        g,
                        t.colorTexture,
                        u.ignoreDepthValues ? void 0 : t.depthStencilTexture
                      ),
                      e.setRenderTarget(g));
                }
                let o = x[r];
                o.matrix.fromArray(i.transform.matrix),
                  o.projectionMatrix.fromArray(i.projectionMatrix),
                  o.viewport.set(a.x, a.y, a.width, a.height),
                  r === 0 && S.matrix.copy(o.matrix),
                  !0 === n && S.cameras.push(o);
              }
            }
            let i = r.inputSources;
            for (let e = 0; e < _.length; e++) {
              let t = _[e],
                r = i[e];
              t.update(r, n, a);
            }
            M && M(t, n), (p = null);
          }
          let P = new In();
          P.setAnimationLoop(N),
            (this.setAnimationLoop = function (e) {
              M = e;
            }),
            (this.dispose = function () {});
        }
      }),
      (Ki.prototype.isWebGLRenderer = !0),
      (mf = class extends Ki {}),
      (mf.prototype.isWebGL1Renderer = !0),
      (hf = class e {
        constructor(e, t = 25e-5) {
          (this.name = ``), (this.color = new X(e)), (this.density = t);
        }
        clone() {
          return new e(this.color, this.density);
        }
        toJSON() {
          return {
            type: `FogExp2`,
            color: this.color.getHex(),
            density: this.density,
          };
        }
      }),
      (hf.prototype.isFogExp2 = !0),
      (gf = class e {
        constructor(e, t = 1, n = 1e3) {
          (this.name = ``),
            (this.color = new X(e)),
            (this.near = t),
            (this.far = n);
        }
        clone() {
          return new e(this.color, this.near, this.far);
        }
        toJSON() {
          return {
            type: `Fog`,
            color: this.color.getHex(),
            near: this.near,
            far: this.far,
          };
        }
      }),
      (gf.prototype.isFog = !0),
      (_f = class extends eu {
        constructor() {
          super(),
            (this.type = `Scene`),
            (this.background = null),
            (this.environment = null),
            (this.fog = null),
            (this.overrideMaterial = null),
            (this.autoUpdate = !0),
            typeof __THREE_DEVTOOLS__ < `u` &&
              __THREE_DEVTOOLS__.dispatchEvent(
                new CustomEvent(`observe`, { detail: this })
              );
        }
        copy(e, t) {
          return (
            super.copy(e, t),
            e.background !== null && (this.background = e.background.clone()),
            e.environment !== null &&
              (this.environment = e.environment.clone()),
            e.fog !== null && (this.fog = e.fog.clone()),
            e.overrideMaterial !== null &&
              (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.autoUpdate = e.autoUpdate),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
        }
      }),
      (_f.prototype.isScene = !0),
      (vf = class {
        constructor(e, t) {
          (this.array = e),
            (this.stride = t),
            (this.count = e === void 0 ? 0 : e.length / t),
            (this.usage = Lc),
            (this.updateRange = { offset: 0, count: -1 }),
            (this.version = 0),
            (this.uuid = an());
        }
        onUploadCallback() {}
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        setUsage(e) {
          return (this.usage = e), this;
        }
        copy(e) {
          return (
            (this.array = new e.array.constructor(e.array)),
            (this.count = e.count),
            (this.stride = e.stride),
            (this.usage = e.usage),
            this
          );
        }
        copyAt(e, t, n) {
          (e *= this.stride), (n *= t.stride);
          for (let r = 0, i = this.stride; r < i; r++)
            this.array[e + r] = t.array[n + r];
          return this;
        }
        set(e, t = 0) {
          return this.array.set(e, t), this;
        }
        clone(e) {
          e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
            this.array.buffer._uuid === void 0 &&
              (this.array.buffer._uuid = an()),
            e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
              (e.arrayBuffers[this.array.buffer._uuid] =
                this.array.slice(0).buffer);
          let t = new this.array.constructor(
              e.arrayBuffers[this.array.buffer._uuid]
            ),
            n = new this.constructor(t, this.stride);
          return n.setUsage(this.usage), n;
        }
        onUpload(e) {
          return (this.onUploadCallback = e), this;
        }
        toJSON(e) {
          return (
            e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
            this.array.buffer._uuid === void 0 &&
              (this.array.buffer._uuid = an()),
            e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
              (e.arrayBuffers[this.array.buffer._uuid] =
                Array.prototype.slice.call(new Uint32Array(this.array.buffer))),
            {
              uuid: this.uuid,
              buffer: this.array.buffer._uuid,
              type: this.array.constructor.name,
              stride: this.stride,
            }
          );
        }
      }),
      (vf.prototype.isInterleavedBuffer = !0),
      (yf = new J()),
      (bf = class e {
        constructor(e, t, n, r = !1) {
          (this.name = ``),
            (this.data = e),
            (this.itemSize = t),
            (this.offset = n),
            (this.normalized = !0 === r);
        }
        get count() {
          return this.data.count;
        }
        get array() {
          return this.data.array;
        }
        set needsUpdate(e) {
          this.data.needsUpdate = e;
        }
        applyMatrix4(e) {
          for (let t = 0, n = this.data.count; t < n; t++)
            (yf.x = this.getX(t)),
              (yf.y = this.getY(t)),
              (yf.z = this.getZ(t)),
              yf.applyMatrix4(e),
              this.setXYZ(t, yf.x, yf.y, yf.z);
          return this;
        }
        applyNormalMatrix(e) {
          for (let t = 0, n = this.count; t < n; t++)
            (yf.x = this.getX(t)),
              (yf.y = this.getY(t)),
              (yf.z = this.getZ(t)),
              yf.applyNormalMatrix(e),
              this.setXYZ(t, yf.x, yf.y, yf.z);
          return this;
        }
        transformDirection(e) {
          for (let t = 0, n = this.count; t < n; t++)
            (yf.x = this.getX(t)),
              (yf.y = this.getY(t)),
              (yf.z = this.getZ(t)),
              yf.transformDirection(e),
              this.setXYZ(t, yf.x, yf.y, yf.z);
          return this;
        }
        setX(e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset] = t), this
          );
        }
        setY(e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 1] = t), this
          );
        }
        setZ(e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 2] = t), this
          );
        }
        setW(e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 3] = t), this
          );
        }
        getX(e) {
          return this.data.array[e * this.data.stride + this.offset];
        }
        getY(e) {
          return this.data.array[e * this.data.stride + this.offset + 1];
        }
        getZ(e) {
          return this.data.array[e * this.data.stride + this.offset + 2];
        }
        getW(e) {
          return this.data.array[e * this.data.stride + this.offset + 3];
        }
        setXY(e, t, n) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            this
          );
        }
        setXYZ(e, t, n, r) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            this
          );
        }
        setXYZW(e, t, n, r, i) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = r),
            (this.data.array[e + 3] = i),
            this
          );
        }
        clone(t) {
          if (t === void 0) {
            console.log(
              `THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.`
            );
            let e = [];
            for (let t = 0; t < this.count; t++) {
              let n = t * this.data.stride + this.offset;
              for (let t = 0; t < this.itemSize; t++)
                e.push(this.data.array[n + t]);
            }
            return new bu(
              new this.array.constructor(e),
              this.itemSize,
              this.normalized
            );
          }
          return (
            t.interleavedBuffers === void 0 && (t.interleavedBuffers = {}),
            t.interleavedBuffers[this.data.uuid] === void 0 &&
              (t.interleavedBuffers[this.data.uuid] = this.data.clone(t)),
            new e(
              t.interleavedBuffers[this.data.uuid],
              this.itemSize,
              this.offset,
              this.normalized
            )
          );
        }
        toJSON(e) {
          if (e === void 0) {
            console.log(
              `THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.`
            );
            let e = [];
            for (let t = 0; t < this.count; t++) {
              let n = t * this.data.stride + this.offset;
              for (let t = 0; t < this.itemSize; t++)
                e.push(this.data.array[n + t]);
            }
            return {
              itemSize: this.itemSize,
              type: this.array.constructor.name,
              array: e,
              normalized: this.normalized,
            };
          }
          return (
            e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
            e.interleavedBuffers[this.data.uuid] === void 0 &&
              (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
            {
              isInterleavedBufferAttribute: !0,
              itemSize: this.itemSize,
              data: this.data.uuid,
              offset: this.offset,
              normalized: this.normalized,
            }
          );
        }
      }),
      (bf.prototype.isInterleavedBufferAttribute = !0),
      (xf = class extends pu {
        constructor(e) {
          super(),
            (this.type = `SpriteMaterial`),
            (this.color = new X(16777215)),
            (this.map = null),
            (this.alphaMap = null),
            (this.rotation = 0),
            (this.sizeAttenuation = !0),
            (this.transparent = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.rotation = e.rotation),
            (this.sizeAttenuation = e.sizeAttenuation),
            this
          );
        }
      }),
      (xf.prototype.isSpriteMaterial = !0),
      (Cf = new J()),
      (wf = new J()),
      (Tf = new J()),
      (Ef = new q()),
      (Df = new q()),
      (Of = new Y()),
      (kf = new J()),
      (Af = new J()),
      (jf = new J()),
      (Mf = new q()),
      (Nf = new q()),
      (Pf = new q()),
      (Ff = class extends eu {
        constructor(e) {
          if ((super(), (this.type = `Sprite`), Sf === void 0)) {
            Sf = new ju();
            let e = new Float32Array([
                -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1,
                -0.5, 0.5, 0, 0, 1,
              ]),
              t = new vf(e, 5);
            Sf.setIndex([0, 1, 2, 0, 2, 3]),
              Sf.setAttribute(`position`, new bf(t, 3, 0, !1)),
              Sf.setAttribute(`uv`, new bf(t, 2, 3, !1));
          }
          (this.geometry = Sf),
            (this.material = e === void 0 ? new xf() : e),
            (this.center = new q(0.5, 0.5));
        }
        raycast(e, t) {
          e.camera === null &&
            console.error(
              `THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.`
            ),
            wf.setFromMatrixScale(this.matrixWorld),
            Of.copy(e.camera.matrixWorld),
            this.modelViewMatrix.multiplyMatrices(
              e.camera.matrixWorldInverse,
              this.matrixWorld
            ),
            Tf.setFromMatrixPosition(this.modelViewMatrix),
            e.camera.isPerspectiveCamera &&
              !1 === this.material.sizeAttenuation &&
              wf.multiplyScalar(-Tf.z);
          let n = this.material.rotation,
            r,
            i;
          n !== 0 && ((i = Math.cos(n)), (r = Math.sin(n)));
          let a = this.center;
          qi(kf.set(-0.5, -0.5, 0), Tf, a, wf, r, i),
            qi(Af.set(0.5, -0.5, 0), Tf, a, wf, r, i),
            qi(jf.set(0.5, 0.5, 0), Tf, a, wf, r, i),
            Mf.set(0, 0),
            Nf.set(1, 0),
            Pf.set(1, 1);
          let o = e.ray.intersectTriangle(kf, Af, jf, !1, Cf);
          if (
            o === null &&
            (qi(Af.set(-0.5, 0.5, 0), Tf, a, wf, r, i),
            Nf.set(0, 1),
            (o = e.ray.intersectTriangle(kf, jf, Af, !1, Cf)),
            o === null)
          )
            return;
          let s = e.ray.origin.distanceTo(Cf);
          s < e.near ||
            s > e.far ||
            t.push({
              distance: s,
              point: Cf.clone(),
              uv: du.getUV(Cf, kf, Af, jf, Mf, Nf, Pf, new q()),
              face: null,
              object: this,
            });
        }
        copy(e) {
          return (
            super.copy(e),
            e.center !== void 0 && this.center.copy(e.center),
            (this.material = e.material),
            this
          );
        }
      }),
      (Ff.prototype.isSprite = !0),
      new J(),
      new J(),
      (If = new J()),
      (Lf = new Xc()),
      (Rf = new Xc()),
      (zf = new J()),
      (Bf = new Y()),
      (Vf = class extends Yu {
        constructor(e, t) {
          super(e, t),
            (this.type = `SkinnedMesh`),
            (this.bindMode = `attached`),
            (this.bindMatrix = new Y()),
            (this.bindMatrixInverse = new Y());
        }
        copy(e) {
          return (
            super.copy(e),
            (this.bindMode = e.bindMode),
            this.bindMatrix.copy(e.bindMatrix),
            this.bindMatrixInverse.copy(e.bindMatrixInverse),
            (this.skeleton = e.skeleton),
            this
          );
        }
        bind(e, t) {
          (this.skeleton = e),
            t === void 0 &&
              (this.updateMatrixWorld(!0),
              this.skeleton.calculateInverses(),
              (t = this.matrixWorld)),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.copy(t).invert();
        }
        pose() {
          this.skeleton.pose();
        }
        normalizeSkinWeights() {
          let e = new Xc(),
            t = this.geometry.attributes.skinWeight;
          for (let n = 0, r = t.count; n < r; n++) {
            (e.x = t.getX(n)),
              (e.y = t.getY(n)),
              (e.z = t.getZ(n)),
              (e.w = t.getW(n));
            let r = 1 / e.manhattanLength();
            r === 1 / 0 ? e.set(1, 0, 0, 0) : e.multiplyScalar(r),
              t.setXYZW(n, e.x, e.y, e.z, e.w);
          }
        }
        updateMatrixWorld(e) {
          super.updateMatrixWorld(e),
            this.bindMode === `attached`
              ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
              : this.bindMode === `detached`
              ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
              : console.warn(
                  `THREE.SkinnedMesh: Unrecognized bindMode: ` + this.bindMode
                );
        }
        boneTransform(e, t) {
          let n = this.skeleton,
            r = this.geometry;
          Lf.fromBufferAttribute(r.attributes.skinIndex, e),
            Rf.fromBufferAttribute(r.attributes.skinWeight, e),
            If.copy(t).applyMatrix4(this.bindMatrix),
            t.set(0, 0, 0);
          for (let e = 0; e < 4; e++) {
            let r = Rf.getComponent(e);
            if (r !== 0) {
              let i = Lf.getComponent(e);
              Bf.multiplyMatrices(n.bones[i].matrixWorld, n.boneInverses[i]),
                t.addScaledVector(zf.copy(If).applyMatrix4(Bf), r);
            }
          }
          return t.applyMatrix4(this.bindMatrixInverse);
        }
      }),
      (Vf.prototype.isSkinnedMesh = !0),
      (Hf = class extends eu {
        constructor() {
          super(), (this.type = `Bone`);
        }
      }),
      (Hf.prototype.isBone = !0),
      (Uf = class extends Yc {
        constructor(
          e = null,
          t = 1,
          n = 1,
          r,
          i,
          a,
          o,
          s,
          c = Qo,
          l = Qo,
          u,
          d
        ) {
          super(null, a, o, s, c, l, r, i, u, d),
            (this.image = { data: e, width: t, height: n }),
            (this.magFilter = c),
            (this.minFilter = l),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
        }
      }),
      (Uf.prototype.isDataTexture = !0),
      new Y(),
      new Y(),
      (Wf = class extends bu {
        constructor(e, t, n, r = 1) {
          typeof n == `number` &&
            ((r = n),
            (n = !1),
            console.error(
              `THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.`
            )),
            super(e, t, n),
            (this.meshPerAttribute = r);
        }
        copy(e) {
          return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.meshPerAttribute = this.meshPerAttribute),
            (e.isInstancedBufferAttribute = !0),
            e
          );
        }
      }),
      (Wf.prototype.isInstancedBufferAttribute = !0),
      (Gf = new Y()),
      (Kf = new Y()),
      (qf = []),
      (Jf = new Yu()),
      (Yf = class extends Yu {
        constructor(e, t, n) {
          super(e, t),
            (this.instanceMatrix = new Wf(new Float32Array(16 * n), 16)),
            (this.instanceColor = null),
            (this.count = n),
            (this.frustumCulled = !1);
        }
        copy(e) {
          return (
            super.copy(e),
            this.instanceMatrix.copy(e.instanceMatrix),
            e.instanceColor !== null &&
              (this.instanceColor = e.instanceColor.clone()),
            (this.count = e.count),
            this
          );
        }
        getColorAt(e, t) {
          t.fromArray(this.instanceColor.array, 3 * e);
        }
        getMatrixAt(e, t) {
          t.fromArray(this.instanceMatrix.array, 16 * e);
        }
        raycast(e, t) {
          let n = this.matrixWorld,
            r = this.count;
          if (
            ((Jf.geometry = this.geometry),
            (Jf.material = this.material),
            Jf.material !== void 0)
          )
            for (let i = 0; i < r; i++) {
              this.getMatrixAt(i, Gf),
                Kf.multiplyMatrices(n, Gf),
                (Jf.matrixWorld = Kf),
                Jf.raycast(e, qf);
              for (let e = 0, n = qf.length; e < n; e++) {
                let n = qf[e];
                (n.instanceId = i), (n.object = this), t.push(n);
              }
              qf.length = 0;
            }
        }
        setColorAt(e, t) {
          this.instanceColor === null &&
            (this.instanceColor = new Wf(
              new Float32Array(3 * this.instanceMatrix.count),
              3
            )),
            t.toArray(this.instanceColor.array, 3 * e);
        }
        setMatrixAt(e, t) {
          t.toArray(this.instanceMatrix.array, 16 * e);
        }
        updateMorphTargets() {}
        dispose() {
          this.dispatchEvent({ type: `dispose` });
        }
      }),
      (Yf.prototype.isInstancedMesh = !0),
      (Xf = class extends pu {
        constructor(e) {
          super(),
            (this.type = `LineBasicMaterial`),
            (this.color = new X(16777215)),
            (this.linewidth = 1),
            (this.linecap = `round`),
            (this.linejoin = `round`),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.linewidth = e.linewidth),
            (this.linecap = e.linecap),
            (this.linejoin = e.linejoin),
            this
          );
        }
      }),
      (Xf.prototype.isLineBasicMaterial = !0),
      (Zf = new J()),
      (Qf = new J()),
      ($f = new Y()),
      (ep = new kl()),
      (tp = new xl()),
      (np = class extends eu {
        constructor(e = new ju(), t = new Xf()) {
          super(),
            (this.type = `Line`),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.material = e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        computeLineDistances() {
          let e = this.geometry;
          if (e.isBufferGeometry)
            if (e.index === null) {
              let t = e.attributes.position,
                n = [0];
              for (let e = 1, r = t.count; e < r; e++)
                Zf.fromBufferAttribute(t, e - 1),
                  Qf.fromBufferAttribute(t, e),
                  (n[e] = n[e - 1]),
                  (n[e] += Zf.distanceTo(Qf));
              e.setAttribute(`lineDistance`, new Z(n, 1));
            } else
              console.warn(
                `THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.`
              );
          else
            e.isGeometry &&
              console.error(
                `THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
          return this;
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.matrixWorld,
            i = e.params.Line.threshold,
            a = n.drawRange;
          if (
            (n.boundingSphere === null && n.computeBoundingSphere(),
            tp.copy(n.boundingSphere),
            tp.applyMatrix4(r),
            (tp.radius += i),
            !1 === e.ray.intersectsSphere(tp))
          )
            return;
          $f.copy(r).invert(), ep.copy(e.ray).applyMatrix4($f);
          let o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            s = o * o,
            c = new J(),
            l = new J(),
            u = new J(),
            d = new J(),
            f = this.isLineSegments ? 2 : 1;
          if (n.isBufferGeometry) {
            let r = n.index,
              i = n.attributes.position;
            if (r !== null) {
              let n = Math.max(0, a.start),
                o = Math.min(r.count, a.start + a.count);
              for (let a = n, p = o - 1; a < p; a += f) {
                let n = r.getX(a),
                  o = r.getX(a + 1);
                if (
                  (c.fromBufferAttribute(i, n),
                  l.fromBufferAttribute(i, o),
                  ep.distanceSqToSegment(c, l, d, u) > s)
                )
                  continue;
                d.applyMatrix4(this.matrixWorld);
                let f = e.ray.origin.distanceTo(d);
                f < e.near ||
                  f > e.far ||
                  t.push({
                    distance: f,
                    point: u.clone().applyMatrix4(this.matrixWorld),
                    index: a,
                    face: null,
                    faceIndex: null,
                    object: this,
                  });
              }
            } else {
              let n = Math.max(0, a.start),
                r = Math.min(i.count, a.start + a.count);
              for (let a = n, o = r - 1; a < o; a += f) {
                if (
                  (c.fromBufferAttribute(i, a),
                  l.fromBufferAttribute(i, a + 1),
                  ep.distanceSqToSegment(c, l, d, u) > s)
                )
                  continue;
                d.applyMatrix4(this.matrixWorld);
                let n = e.ray.origin.distanceTo(d);
                n < e.near ||
                  n > e.far ||
                  t.push({
                    distance: n,
                    point: u.clone().applyMatrix4(this.matrixWorld),
                    index: a,
                    face: null,
                    faceIndex: null,
                    object: this,
                  });
              }
            }
          } else
            n.isGeometry &&
              console.error(
                `THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
        }
        updateMorphTargets() {
          let e = this.geometry;
          if (e.isBufferGeometry) {
            let t = e.morphAttributes,
              n = Object.keys(t);
            if (n.length > 0) {
              let e = t[n[0]];
              if (e !== void 0) {
                (this.morphTargetInfluences = []),
                  (this.morphTargetDictionary = {});
                for (let t = 0, n = e.length; t < n; t++) {
                  let n = e[t].name || String(t);
                  this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[n] = t);
                }
              }
            }
          } else {
            let t = e.morphTargets;
            t !== void 0 &&
              t.length > 0 &&
              console.error(
                `THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
          }
        }
      }),
      (np.prototype.isLine = !0),
      (rp = new J()),
      (ip = new J()),
      (ap = class extends np {
        constructor(e, t) {
          super(e, t), (this.type = `LineSegments`);
        }
        computeLineDistances() {
          let e = this.geometry;
          if (e.isBufferGeometry)
            if (e.index === null) {
              let t = e.attributes.position,
                n = [];
              for (let e = 0, r = t.count; e < r; e += 2)
                rp.fromBufferAttribute(t, e),
                  ip.fromBufferAttribute(t, e + 1),
                  (n[e] = e === 0 ? 0 : n[e - 1]),
                  (n[e + 1] = n[e] + rp.distanceTo(ip));
              e.setAttribute(`lineDistance`, new Z(n, 1));
            } else
              console.warn(
                `THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.`
              );
          else
            e.isGeometry &&
              console.error(
                `THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
          return this;
        }
      }),
      (ap.prototype.isLineSegments = !0),
      (op = class extends np {
        constructor(e, t) {
          super(e, t), (this.type = `LineLoop`);
        }
      }),
      (op.prototype.isLineLoop = !0),
      (sp = class extends pu {
        constructor(e) {
          super(),
            (this.type = `PointsMaterial`),
            (this.color = new X(16777215)),
            (this.map = null),
            (this.alphaMap = null),
            (this.size = 1),
            (this.sizeAttenuation = !0),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.size = e.size),
            (this.sizeAttenuation = e.sizeAttenuation),
            this
          );
        }
      }),
      (sp.prototype.isPointsMaterial = !0),
      (cp = new Y()),
      (lp = new kl()),
      (up = new xl()),
      (dp = new J()),
      (fp = class extends eu {
        constructor(e = new ju(), t = new sp()) {
          super(),
            (this.type = `Points`),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.material = e.material),
            (this.geometry = e.geometry),
            this
          );
        }
        raycast(e, t) {
          let n = this.geometry,
            r = this.matrixWorld,
            i = e.params.Points.threshold,
            a = n.drawRange;
          if (
            (n.boundingSphere === null && n.computeBoundingSphere(),
            up.copy(n.boundingSphere),
            up.applyMatrix4(r),
            (up.radius += i),
            !1 === e.ray.intersectsSphere(up))
          )
            return;
          cp.copy(r).invert(), lp.copy(e.ray).applyMatrix4(cp);
          let o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            s = o * o;
          if (n.isBufferGeometry) {
            let i = n.index,
              o = n.attributes.position;
            if (i !== null) {
              let n = Math.max(0, a.start),
                c = Math.min(i.count, a.start + a.count);
              for (let a = n, l = c; a < l; a++) {
                let n = i.getX(a);
                dp.fromBufferAttribute(o, n), Ji(dp, n, s, r, e, t, this);
              }
            } else {
              let n = Math.max(0, a.start),
                i = Math.min(o.count, a.start + a.count);
              for (let a = n, c = i; a < c; a++)
                dp.fromBufferAttribute(o, a), Ji(dp, a, s, r, e, t, this);
            }
          } else
            console.error(
              `THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.`
            );
        }
        updateMorphTargets() {
          let e = this.geometry;
          if (e.isBufferGeometry) {
            let t = e.morphAttributes,
              n = Object.keys(t);
            if (n.length > 0) {
              let e = t[n[0]];
              if (e !== void 0) {
                (this.morphTargetInfluences = []),
                  (this.morphTargetDictionary = {});
                for (let t = 0, n = e.length; t < n; t++) {
                  let n = e[t].name || String(t);
                  this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[n] = t);
                }
              }
            }
          } else {
            let t = e.morphTargets;
            t !== void 0 &&
              t.length > 0 &&
              console.error(
                `THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.`
              );
          }
        }
      }),
      (fp.prototype.isPoints = !0),
      (pp = class extends Yc {
        constructor(e, t, n, r, i, a, o, s, c) {
          super(e, t, n, r, i, a, o, s, c),
            (this.format = o === void 0 ? ys : o),
            (this.minFilter = a === void 0 ? ts : a),
            (this.magFilter = i === void 0 ? ts : i),
            (this.generateMipmaps = !1);
          let l = this;
          function u() {
            (l.needsUpdate = !0), e.requestVideoFrameCallback(u);
          }
          `requestVideoFrameCallback` in e && e.requestVideoFrameCallback(u);
        }
        clone() {
          return new this.constructor(this.image).copy(this);
        }
        update() {
          let e = this.image;
          `requestVideoFrameCallback` in e == 0 &&
            e.readyState >= e.HAVE_CURRENT_DATA &&
            (this.needsUpdate = !0);
        }
      }),
      (pp.prototype.isVideoTexture = !0),
      (mp = class extends Yc {
        constructor(e, t, n) {
          super({ width: e, height: t }),
            (this.format = n),
            (this.magFilter = Qo),
            (this.minFilter = Qo),
            (this.generateMipmaps = !1),
            (this.needsUpdate = !0);
        }
      }),
      (mp.prototype.isFramebufferTexture = !0),
      (hp = class extends Yc {
        constructor(e, t, n, r, i, a, o, s, c, l, u, d) {
          super(null, a, o, s, c, l, r, i, u, d),
            (this.image = { width: t, height: n }),
            (this.mipmaps = e),
            (this.flipY = !1),
            (this.generateMipmaps = !1);
        }
      }),
      (hp.prototype.isCompressedTexture = !0),
      (gp = class extends Yc {
        constructor(e, t, n, r, i, a, o, s, c) {
          super(e, t, n, r, i, a, o, s, c), (this.needsUpdate = !0);
        }
      }),
      (gp.prototype.isCanvasTexture = !0),
      (_p = class e extends ju {
        constructor(e = 1, t = 8, n = 0, r = 2 * Math.PI) {
          super(),
            (this.type = `CircleGeometry`),
            (this.parameters = {
              radius: e,
              segments: t,
              thetaStart: n,
              thetaLength: r,
            }),
            (t = Math.max(3, t));
          let i = [],
            a = [],
            o = [],
            s = [],
            c = new J(),
            l = new q();
          a.push(0, 0, 0), o.push(0, 0, 1), s.push(0.5, 0.5);
          for (let i = 0, u = 3; i <= t; i++, u += 3) {
            let d = n + (i / t) * r;
            (c.x = e * Math.cos(d)),
              (c.y = e * Math.sin(d)),
              a.push(c.x, c.y, c.z),
              o.push(0, 0, 1),
              (l.x = (a[u] / e + 1) / 2),
              (l.y = (a[u + 1] / e + 1) / 2),
              s.push(l.x, l.y);
          }
          for (let e = 1; e <= t; e++) i.push(e, e + 1, 0);
          this.setIndex(i),
            this.setAttribute(`position`, new Z(a, 3)),
            this.setAttribute(`normal`, new Z(o, 3)),
            this.setAttribute(`uv`, new Z(s, 2));
        }
        static fromJSON(t) {
          return new e(t.radius, t.segments, t.thetaStart, t.thetaLength);
        }
      }),
      (vp = class e extends ju {
        constructor(
          e = 1,
          t = 1,
          n = 1,
          r = 8,
          i = 1,
          a = !1,
          o = 0,
          s = 2 * Math.PI
        ) {
          super(),
            (this.type = `CylinderGeometry`),
            (this.parameters = {
              radiusTop: e,
              radiusBottom: t,
              height: n,
              radialSegments: r,
              heightSegments: i,
              openEnded: a,
              thetaStart: o,
              thetaLength: s,
            });
          let c = this;
          (r = Math.floor(r)), (i = Math.floor(i));
          let l = [],
            u = [],
            d = [],
            f = [],
            p = 0,
            m = [],
            h = n / 2,
            g = 0;
          _(),
            !1 === a && (e > 0 && v(!0), t > 0 && v(!1)),
            this.setIndex(l),
            this.setAttribute(`position`, new Z(u, 3)),
            this.setAttribute(`normal`, new Z(d, 3)),
            this.setAttribute(`uv`, new Z(f, 2));
          function _() {
            let a = new J(),
              _ = new J(),
              v = 0,
              y = (t - e) / n;
            for (let c = 0; c <= i; c++) {
              let l = [],
                g = c / i,
                v = g * (t - e) + e;
              for (let e = 0; e <= r; e++) {
                let t = e / r,
                  i = t * s + o,
                  c = Math.sin(i),
                  m = Math.cos(i);
                (_.x = v * c),
                  (_.y = -g * n + h),
                  (_.z = v * m),
                  u.push(_.x, _.y, _.z),
                  a.set(c, y, m).normalize(),
                  d.push(a.x, a.y, a.z),
                  f.push(t, 1 - g),
                  l.push(p++);
              }
              m.push(l);
            }
            for (let e = 0; e < r; e++)
              for (let t = 0; t < i; t++) {
                let n = m[t][e],
                  r = m[t + 1][e],
                  i = m[t + 1][e + 1],
                  a = m[t][e + 1];
                l.push(n, r, a), l.push(r, i, a), (v += 6);
              }
            c.addGroup(g, v, 0), (g += v);
          }
          function v(n) {
            let i = p,
              a = new q(),
              m = new J(),
              _ = 0,
              v = !0 === n ? e : t,
              y = !0 === n ? 1 : -1;
            for (let e = 1; e <= r; e++)
              u.push(0, h * y, 0), d.push(0, y, 0), f.push(0.5, 0.5), p++;
            let b = p;
            for (let e = 0; e <= r; e++) {
              let t = (e / r) * s + o,
                n = Math.cos(t),
                i = Math.sin(t);
              (m.x = v * i),
                (m.y = h * y),
                (m.z = v * n),
                u.push(m.x, m.y, m.z),
                d.push(0, y, 0),
                (a.x = 0.5 * n + 0.5),
                (a.y = 0.5 * i * y + 0.5),
                f.push(a.x, a.y),
                p++;
            }
            for (let e = 0; e < r; e++) {
              let t = i + e,
                r = b + e;
              !0 === n ? l.push(r, r + 1, t) : l.push(r + 1, r, t), (_ += 3);
            }
            c.addGroup(g, _, !0 === n ? 1 : 2), (g += _);
          }
        }
        static fromJSON(t) {
          return new e(
            t.radiusTop,
            t.radiusBottom,
            t.height,
            t.radialSegments,
            t.heightSegments,
            t.openEnded,
            t.thetaStart,
            t.thetaLength
          );
        }
      }),
      (yp = class e extends vp {
        constructor(
          e = 1,
          t = 1,
          n = 8,
          r = 1,
          i = !1,
          a = 0,
          o = 2 * Math.PI
        ) {
          super(0, e, t, n, r, i, a, o),
            (this.type = `ConeGeometry`),
            (this.parameters = {
              radius: e,
              height: t,
              radialSegments: n,
              heightSegments: r,
              openEnded: i,
              thetaStart: a,
              thetaLength: o,
            });
        }
        static fromJSON(t) {
          return new e(
            t.radius,
            t.height,
            t.radialSegments,
            t.heightSegments,
            t.openEnded,
            t.thetaStart,
            t.thetaLength
          );
        }
      }),
      (bp = class e extends ju {
        constructor(e = [], t = [], n = 1, r = 0) {
          super(),
            (this.type = `PolyhedronGeometry`),
            (this.parameters = {
              vertices: e,
              indices: t,
              radius: n,
              detail: r,
            });
          let i = [],
            a = [];
          o(r),
            c(n),
            l(),
            this.setAttribute(`position`, new Z(i, 3)),
            this.setAttribute(`normal`, new Z(i.slice(), 3)),
            this.setAttribute(`uv`, new Z(a, 2)),
            r === 0 ? this.computeVertexNormals() : this.normalizeNormals();
          function o(e) {
            let n = new J(),
              r = new J(),
              i = new J();
            for (let a = 0; a < t.length; a += 3)
              f(t[a + 0], n), f(t[a + 1], r), f(t[a + 2], i), s(n, r, i, e);
          }
          function s(e, t, n, r) {
            let i = r + 1,
              a = [];
            for (let r = 0; r <= i; r++) {
              a[r] = [];
              let o = e.clone().lerp(n, r / i),
                s = t.clone().lerp(n, r / i),
                c = i - r;
              for (let e = 0; e <= c; e++)
                a[r][e] = e === 0 && r === i ? o : o.clone().lerp(s, e / c);
            }
            for (let e = 0; e < i; e++)
              for (let t = 0; t < 2 * (i - e) - 1; t++) {
                let n = Math.floor(t / 2);
                t % 2 == 0
                  ? (d(a[e][n + 1]), d(a[e + 1][n]), d(a[e][n]))
                  : (d(a[e][n + 1]), d(a[e + 1][n + 1]), d(a[e + 1][n]));
              }
          }
          function c(e) {
            let t = new J();
            for (let n = 0; n < i.length; n += 3)
              (t.x = i[n + 0]),
                (t.y = i[n + 1]),
                (t.z = i[n + 2]),
                t.normalize().multiplyScalar(e),
                (i[n + 0] = t.x),
                (i[n + 1] = t.y),
                (i[n + 2] = t.z);
          }
          function l() {
            let e = new J();
            for (let t = 0; t < i.length; t += 3) {
              (e.x = i[t + 0]), (e.y = i[t + 1]), (e.z = i[t + 2]);
              let n = h(e) / 2 / Math.PI + 0.5,
                r = g(e) / Math.PI + 0.5;
              a.push(n, 1 - r);
            }
            p(), u();
          }
          function u() {
            for (let e = 0; e < a.length; e += 6) {
              let t = a[e + 0],
                n = a[e + 2],
                r = a[e + 4];
              Math.max(t, n, r) > 0.9 &&
                Math.min(t, n, r) < 0.1 &&
                (t < 0.2 && (a[e + 0] += 1),
                n < 0.2 && (a[e + 2] += 1),
                r < 0.2 && (a[e + 4] += 1));
            }
          }
          function d(e) {
            i.push(e.x, e.y, e.z);
          }
          function f(t, n) {
            let r = 3 * t;
            (n.x = e[r + 0]), (n.y = e[r + 1]), (n.z = e[r + 2]);
          }
          function p() {
            let e = new J(),
              t = new J(),
              n = new J(),
              r = new J(),
              o = new q(),
              s = new q(),
              c = new q();
            for (let l = 0, u = 0; l < i.length; l += 9, u += 6) {
              e.set(i[l + 0], i[l + 1], i[l + 2]),
                t.set(i[l + 3], i[l + 4], i[l + 5]),
                n.set(i[l + 6], i[l + 7], i[l + 8]),
                o.set(a[u + 0], a[u + 1]),
                s.set(a[u + 2], a[u + 3]),
                c.set(a[u + 4], a[u + 5]),
                r.copy(e).add(t).add(n).divideScalar(3);
              let d = h(r);
              m(o, u + 0, e, d), m(s, u + 2, t, d), m(c, u + 4, n, d);
            }
          }
          function m(e, t, n, r) {
            r < 0 && e.x === 1 && (a[t] = e.x - 1),
              n.x === 0 && n.z === 0 && (a[t] = r / 2 / Math.PI + 0.5);
          }
          function h(e) {
            return Math.atan2(e.z, -e.x);
          }
          function g(e) {
            return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));
          }
        }
        static fromJSON(t) {
          return new e(t.vertices, t.indices, t.radius, t.details);
        }
      }),
      (xp = class e extends bp {
        constructor(e = 1, t = 0) {
          let n = (1 + Math.sqrt(5)) / 2,
            r = 1 / n,
            i = [
              -1,
              -1,
              -1,
              -1,
              -1,
              1,
              -1,
              1,
              -1,
              -1,
              1,
              1,
              1,
              -1,
              -1,
              1,
              -1,
              1,
              1,
              1,
              -1,
              1,
              1,
              1,
              0,
              -r,
              -n,
              0,
              -r,
              n,
              0,
              r,
              -n,
              0,
              r,
              n,
              -r,
              -n,
              0,
              -r,
              n,
              0,
              r,
              -n,
              0,
              r,
              n,
              0,
              -n,
              0,
              -r,
              n,
              0,
              -r,
              -n,
              0,
              r,
              n,
              0,
              r,
            ];
          super(
            i,
            [
              3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17,
              4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12,
              1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18,
              2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4,
              12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14,
              4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
            ],
            e,
            t
          ),
            (this.type = `DodecahedronGeometry`),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(t) {
          return new e(t.radius, t.detail);
        }
      }),
      (Sp = new J()),
      (Cp = new J()),
      (wp = new J()),
      (Tp = new du()),
      (Ep = class extends ju {
        constructor(e = null, t = 1) {
          if (
            (super(),
            (this.type = `EdgesGeometry`),
            (this.parameters = { geometry: e, thresholdAngle: t }),
            e !== null)
          ) {
            let n = 10 ** 4,
              r = Math.cos(Uc * t),
              i = e.getIndex(),
              a = e.getAttribute(`position`),
              o = i ? i.count : a.count,
              s = [0, 0, 0],
              c = [`a`, `b`, `c`],
              l = [, , ,],
              u = {},
              d = [];
            for (let e = 0; e < o; e += 3) {
              i
                ? ((s[0] = i.getX(e)),
                  (s[1] = i.getX(e + 1)),
                  (s[2] = i.getX(e + 2)))
                : ((s[0] = e), (s[1] = e + 1), (s[2] = e + 2));
              let { a: t, b: o, c: f } = Tp;
              if (
                (t.fromBufferAttribute(a, s[0]),
                o.fromBufferAttribute(a, s[1]),
                f.fromBufferAttribute(a, s[2]),
                Tp.getNormal(wp),
                (l[0] = `${Math.round(t.x * n)},${Math.round(
                  t.y * n
                )},${Math.round(t.z * n)}`),
                (l[1] = `${Math.round(o.x * n)},${Math.round(
                  o.y * n
                )},${Math.round(o.z * n)}`),
                (l[2] = `${Math.round(f.x * n)},${Math.round(
                  f.y * n
                )},${Math.round(f.z * n)}`),
                l[0] !== l[1] && l[1] !== l[2] && l[2] !== l[0])
              )
                for (let e = 0; e < 3; e++) {
                  let t = (e + 1) % 3,
                    n = l[e],
                    i = l[t],
                    a = Tp[c[e]],
                    o = Tp[c[t]],
                    f = `${n}_${i}`,
                    p = `${i}_${n}`;
                  p in u && u[p]
                    ? (wp.dot(u[p].normal) <= r &&
                        (d.push(a.x, a.y, a.z), d.push(o.x, o.y, o.z)),
                      (u[p] = null))
                    : f in u ||
                      (u[f] = {
                        index0: s[e],
                        index1: s[t],
                        normal: wp.clone(),
                      });
                }
            }
            for (let e in u)
              if (u[e]) {
                let { index0: t, index1: n } = u[e];
                Sp.fromBufferAttribute(a, t),
                  Cp.fromBufferAttribute(a, n),
                  d.push(Sp.x, Sp.y, Sp.z),
                  d.push(Cp.x, Cp.y, Cp.z);
              }
            this.setAttribute(`position`, new Z(d, 3));
          }
        }
      }),
      (Dp = class {
        constructor() {
          (this.type = `Curve`), (this.arcLengthDivisions = 200);
        }
        getPoint() {
          return (
            console.warn(`THREE.Curve: .getPoint() not implemented.`), null
          );
        }
        getPointAt(e, t) {
          let n = this.getUtoTmapping(e);
          return this.getPoint(n, t);
        }
        getPoints(e = 5) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return t;
        }
        getSpacedPoints(e = 5) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
          return t;
        }
        getLength() {
          let e = this.getLengths();
          return e[e.length - 1];
        }
        getLengths(e = this.arcLengthDivisions) {
          if (
            this.cacheArcLengths &&
            this.cacheArcLengths.length === e + 1 &&
            !this.needsUpdate
          )
            return this.cacheArcLengths;
          this.needsUpdate = !1;
          let t = [],
            n,
            r = this.getPoint(0),
            i = 0;
          t.push(0);
          for (let a = 1; a <= e; a++)
            (n = this.getPoint(a / e)),
              (i += n.distanceTo(r)),
              t.push(i),
              (r = n);
          return (this.cacheArcLengths = t), t;
        }
        updateArcLengths() {
          (this.needsUpdate = !0), this.getLengths();
        }
        getUtoTmapping(e, t) {
          let n = this.getLengths(),
            r = 0,
            i = n.length,
            a;
          a = t || e * n[i - 1];
          let o,
            s = 0,
            c = i - 1;
          for (; s <= c; )
            if (((r = Math.floor(s + (c - s) / 2)), (o = n[r] - a), o < 0))
              s = r + 1;
            else {
              if (!(o > 0)) {
                c = r;
                break;
              }
              c = r - 1;
            }
          if (((r = c), n[r] === a)) return r / (i - 1);
          let l = n[r],
            u = n[r + 1] - l,
            d = (a - l) / u;
          return (r + d) / (i - 1);
        }
        getTangent(e, t) {
          let n = 1e-4,
            r = e - n,
            i = e + n;
          r < 0 && (r = 0), i > 1 && (i = 1);
          let a = this.getPoint(r),
            o = this.getPoint(i),
            s = t || (a.isVector2 ? new q() : new J());
          return s.copy(o).sub(a).normalize(), s;
        }
        getTangentAt(e, t) {
          let n = this.getUtoTmapping(e);
          return this.getTangent(n, t);
        }
        computeFrenetFrames(e, t) {
          let n = new J(),
            r = [],
            i = [],
            a = [],
            o = new J(),
            s = new Y();
          for (let t = 0; t <= e; t++) {
            let n = t / e;
            r[t] = this.getTangentAt(n, new J());
          }
          (i[0] = new J()), (a[0] = new J());
          let c = Number.MAX_VALUE,
            l = Math.abs(r[0].x),
            u = Math.abs(r[0].y),
            d = Math.abs(r[0].z);
          l <= c && ((c = l), n.set(1, 0, 0)),
            u <= c && ((c = u), n.set(0, 1, 0)),
            d <= c && n.set(0, 0, 1),
            o.crossVectors(r[0], n).normalize(),
            i[0].crossVectors(r[0], o),
            a[0].crossVectors(r[0], i[0]);
          for (let t = 1; t <= e; t++) {
            if (
              ((i[t] = i[t - 1].clone()),
              (a[t] = a[t - 1].clone()),
              o.crossVectors(r[t - 1], r[t]),
              o.length() > 2 ** -52)
            ) {
              o.normalize();
              let e = Math.acos(on(r[t - 1].dot(r[t]), -1, 1));
              i[t].applyMatrix4(s.makeRotationAxis(o, e));
            }
            a[t].crossVectors(r[t], i[t]);
          }
          if (!0 === t) {
            let t = Math.acos(on(i[0].dot(i[e]), -1, 1));
            (t /= e), r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (t = -t);
            for (let n = 1; n <= e; n++)
              i[n].applyMatrix4(s.makeRotationAxis(r[n], t * n)),
                a[n].crossVectors(r[n], i[n]);
          }
          return { tangents: r, normals: i, binormals: a };
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        }
        toJSON() {
          let e = {
            metadata: {
              version: 4.5,
              type: `Curve`,
              generator: `Curve.toJSON`,
            },
          };
          return (
            (e.arcLengthDivisions = this.arcLengthDivisions),
            (e.type = this.type),
            e
          );
        }
        fromJSON(e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        }
      }),
      (Op = class extends Dp {
        constructor(
          e = 0,
          t = 0,
          n = 1,
          r = 1,
          i = 0,
          a = 2 * Math.PI,
          o = !1,
          s = 0
        ) {
          super(),
            (this.type = `EllipseCurve`),
            (this.aX = e),
            (this.aY = t),
            (this.xRadius = n),
            (this.yRadius = r),
            (this.aStartAngle = i),
            (this.aEndAngle = a),
            (this.aClockwise = o),
            (this.aRotation = s);
        }
        getPoint(e, t) {
          let n = t || new q(),
            r = 2 * Math.PI,
            i = this.aEndAngle - this.aStartAngle,
            a = Math.abs(i) < 2 ** -52;
          for (; i < 0; ) i += r;
          for (; i > r; ) i -= r;
          i < 2 ** -52 && (i = a ? 0 : r),
            !0 !== this.aClockwise || a || (i === r ? (i = -r) : (i -= r));
          let o = this.aStartAngle + e * i,
            s = this.aX + this.xRadius * Math.cos(o),
            c = this.aY + this.yRadius * Math.sin(o);
          if (this.aRotation !== 0) {
            let e = Math.cos(this.aRotation),
              t = Math.sin(this.aRotation),
              n = s - this.aX,
              r = c - this.aY;
            (s = n * e - r * t + this.aX), (c = n * t + r * e + this.aY);
          }
          return n.set(s, c);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.aX = this.aX),
            (e.aY = this.aY),
            (e.xRadius = this.xRadius),
            (e.yRadius = this.yRadius),
            (e.aStartAngle = this.aStartAngle),
            (e.aEndAngle = this.aEndAngle),
            (e.aClockwise = this.aClockwise),
            (e.aRotation = this.aRotation),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
          );
        }
      }),
      (Op.prototype.isEllipseCurve = !0),
      (kp = class extends Op {
        constructor(e, t, n, r, i, a) {
          super(e, t, n, n, r, i, a), (this.type = `ArcCurve`);
        }
      }),
      (kp.prototype.isArcCurve = !0),
      (Ap = new J()),
      (jp = new Yi()),
      (Mp = new Yi()),
      (Np = new Yi()),
      (Pp = class extends Dp {
        constructor(e = [], t = !1, n = `centripetal`, r = 0.5) {
          super(),
            (this.type = `CatmullRomCurve3`),
            (this.points = e),
            (this.closed = t),
            (this.curveType = n),
            (this.tension = r);
        }
        getPoint(e, t = new J()) {
          let n = t,
            r = this.points,
            i = r.length,
            a = (i - (this.closed ? 0 : 1)) * e,
            o = Math.floor(a),
            s = a - o;
          this.closed
            ? (o += o > 0 ? 0 : (Math.floor(Math.abs(o) / i) + 1) * i)
            : s === 0 && o === i - 1 && ((o = i - 2), (s = 1));
          let c, l;
          this.closed || o > 0
            ? (c = r[(o - 1) % i])
            : (Ap.subVectors(r[0], r[1]).add(r[0]), (c = Ap));
          let u = r[o % i],
            d = r[(o + 1) % i];
          if (
            (this.closed || o + 2 < i
              ? (l = r[(o + 2) % i])
              : (Ap.subVectors(r[i - 1], r[i - 2]).add(r[i - 1]), (l = Ap)),
            this.curveType === `centripetal` || this.curveType === `chordal`)
          ) {
            let e = this.curveType === `chordal` ? 0.5 : 0.25,
              t = c.distanceToSquared(u) ** +e,
              n = u.distanceToSquared(d) ** +e,
              r = d.distanceToSquared(l) ** +e;
            n < 1e-4 && (n = 1),
              t < 1e-4 && (t = n),
              r < 1e-4 && (r = n),
              jp.initNonuniformCatmullRom(c.x, u.x, d.x, l.x, t, n, r),
              Mp.initNonuniformCatmullRom(c.y, u.y, d.y, l.y, t, n, r),
              Np.initNonuniformCatmullRom(c.z, u.z, d.z, l.z, t, n, r);
          } else
            this.curveType === `catmullrom` &&
              (jp.initCatmullRom(c.x, u.x, d.x, l.x, this.tension),
              Mp.initCatmullRom(c.y, u.y, d.y, l.y, this.tension),
              Np.initCatmullRom(c.z, u.z, d.z, l.z, this.tension));
          return n.set(jp.calc(s), Mp.calc(s), Np.calc(s)), n;
        }
        copy(e) {
          super.copy(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(n.clone());
          }
          return (
            (this.closed = e.closed),
            (this.curveType = e.curveType),
            (this.tension = e.tension),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          e.points = [];
          for (let t = 0, n = this.points.length; t < n; t++) {
            let n = this.points[t];
            e.points.push(n.toArray());
          }
          return (
            (e.closed = this.closed),
            (e.curveType = this.curveType),
            (e.tension = this.tension),
            e
          );
        }
        fromJSON(e) {
          super.fromJSON(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(new J().fromArray(n));
          }
          return (
            (this.closed = e.closed),
            (this.curveType = e.curveType),
            (this.tension = e.tension),
            this
          );
        }
      }),
      (Pp.prototype.isCatmullRomCurve3 = !0),
      (Fp = class extends Dp {
        constructor(e = new q(), t = new q(), n = new q(), r = new q()) {
          super(),
            (this.type = `CubicBezierCurve`),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n),
            (this.v3 = r);
        }
        getPoint(e, t = new q()) {
          let n = t,
            r = this.v0,
            i = this.v1,
            a = this.v2,
            o = this.v3;
          return n.set(aa(e, r.x, i.x, a.x, o.x), aa(e, r.y, i.y, a.y, o.y)), n;
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            (e.v3 = this.v3.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this.v3.fromArray(e.v3),
            this
          );
        }
      }),
      (Fp.prototype.isCubicBezierCurve = !0),
      (Ip = class extends Dp {
        constructor(e = new J(), t = new J(), n = new J(), r = new J()) {
          super(),
            (this.type = `CubicBezierCurve3`),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n),
            (this.v3 = r);
        }
        getPoint(e, t = new J()) {
          let n = t,
            r = this.v0,
            i = this.v1,
            a = this.v2,
            o = this.v3;
          return (
            n.set(
              aa(e, r.x, i.x, a.x, o.x),
              aa(e, r.y, i.y, a.y, o.y),
              aa(e, r.z, i.z, a.z, o.z)
            ),
            n
          );
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            (e.v3 = this.v3.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this.v3.fromArray(e.v3),
            this
          );
        }
      }),
      (Ip.prototype.isCubicBezierCurve3 = !0),
      (Lp = class extends Dp {
        constructor(e = new q(), t = new q()) {
          super(), (this.type = `LineCurve`), (this.v1 = e), (this.v2 = t);
        }
        getPoint(e, t = new q()) {
          let n = t;
          return (
            e === 1
              ? n.copy(this.v2)
              : (n.copy(this.v2).sub(this.v1),
                n.multiplyScalar(e).add(this.v1)),
            n
          );
        }
        getPointAt(e, t) {
          return this.getPoint(e, t);
        }
        getTangent(e, t) {
          let n = t || new q();
          return n.copy(this.v2).sub(this.v1).normalize(), n;
        }
        copy(e) {
          return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }),
      (Lp.prototype.isLineCurve = !0),
      (Rp = class extends Dp {
        constructor(e = new J(), t = new J()) {
          super(),
            (this.type = `LineCurve3`),
            (this.isLineCurve3 = !0),
            (this.v1 = e),
            (this.v2 = t);
        }
        getPoint(e, t = new J()) {
          let n = t;
          return (
            e === 1
              ? n.copy(this.v2)
              : (n.copy(this.v2).sub(this.v1),
                n.multiplyScalar(e).add(this.v1)),
            n
          );
        }
        getPointAt(e, t) {
          return this.getPoint(e, t);
        }
        copy(e) {
          return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }),
      (zp = class extends Dp {
        constructor(e = new q(), t = new q(), n = new q()) {
          super(),
            (this.type = `QuadraticBezierCurve`),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
        }
        getPoint(e, t = new q()) {
          let n = t,
            r = this.v0,
            i = this.v1,
            a = this.v2;
          return n.set(ea(e, r.x, i.x, a.x), ea(e, r.y, i.y, a.y)), n;
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }),
      (zp.prototype.isQuadraticBezierCurve = !0),
      (Bp = class extends Dp {
        constructor(e = new J(), t = new J(), n = new J()) {
          super(),
            (this.type = `QuadraticBezierCurve3`),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
        }
        getPoint(e, t = new J()) {
          let n = t,
            r = this.v0,
            i = this.v1,
            a = this.v2;
          return (
            n.set(
              ea(e, r.x, i.x, a.x),
              ea(e, r.y, i.y, a.y),
              ea(e, r.z, i.z, a.z)
            ),
            n
          );
        }
        copy(e) {
          return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
          );
        }
        toJSON() {
          let e = super.toJSON();
          return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
          );
        }
        fromJSON(e) {
          return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
          );
        }
      }),
      (Bp.prototype.isQuadraticBezierCurve3 = !0),
      (Vp = class extends Dp {
        constructor(e = []) {
          super(), (this.type = `SplineCurve`), (this.points = e);
        }
        getPoint(e, t = new q()) {
          let n = t,
            r = this.points,
            i = (r.length - 1) * e,
            a = Math.floor(i),
            o = i - a,
            s = r[a === 0 ? a : a - 1],
            c = r[a],
            l = r[a > r.length - 2 ? r.length - 1 : a + 1],
            u = r[a > r.length - 3 ? r.length - 1 : a + 2];
          return n.set(Xi(o, s.x, c.x, l.x, u.x), Xi(o, s.y, c.y, l.y, u.y)), n;
        }
        copy(e) {
          super.copy(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(n.clone());
          }
          return this;
        }
        toJSON() {
          let e = super.toJSON();
          e.points = [];
          for (let t = 0, n = this.points.length; t < n; t++) {
            let n = this.points[t];
            e.points.push(n.toArray());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.points = []);
          for (let t = 0, n = e.points.length; t < n; t++) {
            let n = e.points[t];
            this.points.push(new q().fromArray(n));
          }
          return this;
        }
      }),
      (Vp.prototype.isSplineCurve = !0),
      (Hp = Object.freeze({
        __proto__: null,
        ArcCurve: kp,
        CatmullRomCurve3: Pp,
        CubicBezierCurve: Fp,
        CubicBezierCurve3: Ip,
        EllipseCurve: Op,
        LineCurve: Lp,
        LineCurve3: Rp,
        QuadraticBezierCurve: zp,
        QuadraticBezierCurve3: Bp,
        SplineCurve: Vp,
      })),
      (Up = class extends Dp {
        constructor() {
          super(),
            (this.type = `CurvePath`),
            (this.curves = []),
            (this.autoClose = !1);
        }
        add(e) {
          this.curves.push(e);
        }
        closePath() {
          let e = this.curves[0].getPoint(0),
            t = this.curves[this.curves.length - 1].getPoint(1);
          e.equals(t) || this.curves.push(new Lp(t, e));
        }
        getPoint(e, t) {
          let n = e * this.getLength(),
            r = this.getCurveLengths(),
            i = 0;
          for (; i < r.length; ) {
            if (r[i] >= n) {
              let e = r[i] - n,
                a = this.curves[i],
                o = a.getLength(),
                s = o === 0 ? 0 : 1 - e / o;
              return a.getPointAt(s, t);
            }
            i++;
          }
          return null;
        }
        getLength() {
          let e = this.getCurveLengths();
          return e[e.length - 1];
        }
        updateArcLengths() {
          (this.needsUpdate = !0),
            (this.cacheLengths = null),
            this.getCurveLengths();
        }
        getCurveLengths() {
          if (
            this.cacheLengths &&
            this.cacheLengths.length === this.curves.length
          )
            return this.cacheLengths;
          let e = [],
            t = 0;
          for (let n = 0, r = this.curves.length; n < r; n++)
            (t += this.curves[n].getLength()), e.push(t);
          return (this.cacheLengths = e), e;
        }
        getSpacedPoints(e = 40) {
          let t = [];
          for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return this.autoClose && t.push(t[0]), t;
        }
        getPoints(e = 12) {
          let t = [],
            n;
          for (let r = 0, i = this.curves; r < i.length; r++) {
            let a = i[r],
              o =
                a && a.isEllipseCurve
                  ? 2 * e
                  : a && (a.isLineCurve || a.isLineCurve3)
                  ? 1
                  : a && a.isSplineCurve
                  ? e * a.points.length
                  : e,
              s = a.getPoints(o);
            for (let e = 0; e < s.length; e++) {
              let r = s[e];
              (!n || !n.equals(r)) && (t.push(r), (n = r));
            }
          }
          return (
            this.autoClose &&
              t.length > 1 &&
              !t[t.length - 1].equals(t[0]) &&
              t.push(t[0]),
            t
          );
        }
        copy(e) {
          super.copy(e), (this.curves = []);
          for (let t = 0, n = e.curves.length; t < n; t++) {
            let n = e.curves[t];
            this.curves.push(n.clone());
          }
          return (this.autoClose = e.autoClose), this;
        }
        toJSON() {
          let e = super.toJSON();
          (e.autoClose = this.autoClose), (e.curves = []);
          for (let t = 0, n = this.curves.length; t < n; t++) {
            let n = this.curves[t];
            e.curves.push(n.toJSON());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
          for (let t = 0, n = e.curves.length; t < n; t++) {
            let n = e.curves[t];
            this.curves.push(new Hp[n.type]().fromJSON(n));
          }
          return this;
        }
      }),
      (Wp = class extends Up {
        constructor(e) {
          super(),
            (this.type = `Path`),
            (this.currentPoint = new q()),
            e && this.setFromPoints(e);
        }
        setFromPoints(e) {
          this.moveTo(e[0].x, e[0].y);
          for (let t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
          return this;
        }
        moveTo(e, t) {
          return this.currentPoint.set(e, t), this;
        }
        lineTo(e, t) {
          let n = new Lp(this.currentPoint.clone(), new q(e, t));
          return this.curves.push(n), this.currentPoint.set(e, t), this;
        }
        quadraticCurveTo(e, t, n, r) {
          let i = new zp(this.currentPoint.clone(), new q(e, t), new q(n, r));
          return this.curves.push(i), this.currentPoint.set(n, r), this;
        }
        bezierCurveTo(e, t, n, r, i, a) {
          let o = new Fp(
            this.currentPoint.clone(),
            new q(e, t),
            new q(n, r),
            new q(i, a)
          );
          return this.curves.push(o), this.currentPoint.set(i, a), this;
        }
        splineThru(e) {
          let t = [this.currentPoint.clone()].concat(e),
            n = new Vp(t);
          return (
            this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
          );
        }
        arc(e, t, n, r, i, a) {
          let o = this.currentPoint.x,
            s = this.currentPoint.y;
          return this.absarc(e + o, t + s, n, r, i, a), this;
        }
        absarc(e, t, n, r, i, a) {
          return this.absellipse(e, t, n, n, r, i, a), this;
        }
        ellipse(e, t, n, r, i, a, o, s) {
          let c = this.currentPoint.x,
            l = this.currentPoint.y;
          return this.absellipse(e + c, t + l, n, r, i, a, o, s), this;
        }
        absellipse(e, t, n, r, i, a, o, s) {
          let c = new Op(e, t, n, r, i, a, o, s);
          if (this.curves.length > 0) {
            let e = c.getPoint(0);
            e.equals(this.currentPoint) || this.lineTo(e.x, e.y);
          }
          this.curves.push(c);
          let l = c.getPoint(1);
          return this.currentPoint.copy(l), this;
        }
        copy(e) {
          return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
        }
        toJSON() {
          let e = super.toJSON();
          return (e.currentPoint = this.currentPoint.toArray()), e;
        }
        fromJSON(e) {
          return (
            super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this
          );
        }
      }),
      (Gp = class extends Wp {
        constructor(e) {
          super(e),
            (this.uuid = an()),
            (this.type = `Shape`),
            (this.holes = []);
        }
        getPointsHoles(e) {
          let t = [];
          for (let n = 0, r = this.holes.length; n < r; n++)
            t[n] = this.holes[n].getPoints(e);
          return t;
        }
        extractPoints(e) {
          return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
        }
        copy(e) {
          super.copy(e), (this.holes = []);
          for (let t = 0, n = e.holes.length; t < n; t++) {
            let n = e.holes[t];
            this.holes.push(n.clone());
          }
          return this;
        }
        toJSON() {
          let e = super.toJSON();
          (e.uuid = this.uuid), (e.holes = []);
          for (let t = 0, n = this.holes.length; t < n; t++) {
            let n = this.holes[t];
            e.holes.push(n.toJSON());
          }
          return e;
        }
        fromJSON(e) {
          super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
          for (let t = 0, n = e.holes.length; t < n; t++) {
            let n = e.holes[t];
            this.holes.push(new Wp().fromJSON(n));
          }
          return this;
        }
      }),
      (Kp = {
        triangulate: function (e, t, n = 2) {
          let r = t && t.length,
            i = r ? t[0] * n : e.length,
            a = oa(e, 0, i, n, !0),
            o = [];
          if (!a || a.next === a.prev) return o;
          let s, c, l, u, d, f, p;
          if ((r && (a = pa(e, t, a, n)), e.length > 80 * n)) {
            (s = l = e[0]), (c = u = e[1]);
            for (let t = n; t < i; t += n)
              (d = e[t]),
                (f = e[t + 1]),
                d < s && (s = d),
                f < c && (c = f),
                d > l && (l = d),
                f > u && (u = f);
            (p = Math.max(l - s, u - c)), (p = p === 0 ? 0 : 1 / p);
          }
          return ca(a, o, n, s, c, p), o;
        },
      }),
      (qp = class e {
        static area(e) {
          let t = e.length,
            n = 0;
          for (let r = t - 1, i = 0; i < t; r = i++)
            n += e[r].x * e[i].y - e[i].x * e[r].y;
          return 0.5 * n;
        }
        static isClockWise(t) {
          return e.area(t) < 0;
        }
        static triangulateShape(e, t) {
          let n = [],
            r = [],
            i = [];
          La(e), Ra(n, e);
          let a = e.length;
          t.forEach(La);
          for (let e = 0; e < t.length; e++)
            r.push(a), (a += t[e].length), Ra(n, t[e]);
          let o = Kp.triangulate(n, r);
          for (let e = 0; e < o.length; e += 3) i.push(o.slice(e, e + 3));
          return i;
        }
      }),
      (Jp = class e extends ju {
        constructor(
          e = new Gp([
            new q(0.5, 0.5),
            new q(-0.5, 0.5),
            new q(-0.5, -0.5),
            new q(0.5, -0.5),
          ]),
          t = {}
        ) {
          super(),
            (this.type = `ExtrudeGeometry`),
            (this.parameters = { shapes: e, options: t }),
            (e = Array.isArray(e) ? e : [e]);
          let n = this,
            r = [],
            i = [];
          for (let t = 0, n = e.length; t < n; t++) {
            let n = e[t];
            a(n);
          }
          this.setAttribute(`position`, new Z(r, 3)),
            this.setAttribute(`uv`, new Z(i, 2)),
            this.computeVertexNormals();
          function a(e) {
            let a = [],
              o = t.curveSegments === void 0 ? 12 : t.curveSegments,
              s = t.steps === void 0 ? 1 : t.steps,
              c = t.depth === void 0 ? 1 : t.depth,
              l = t.bevelEnabled === void 0 || t.bevelEnabled,
              u = t.bevelThickness === void 0 ? 0.2 : t.bevelThickness,
              d = t.bevelSize === void 0 ? u - 0.1 : t.bevelSize,
              f = t.bevelOffset === void 0 ? 0 : t.bevelOffset,
              p = t.bevelSegments === void 0 ? 3 : t.bevelSegments,
              m = t.extrudePath,
              h = t.UVGenerator === void 0 ? Yp : t.UVGenerator;
            t.amount !== void 0 &&
              (console.warn(
                `THREE.ExtrudeBufferGeometry: amount has been renamed to depth.`
              ),
              (c = t.amount));
            let g,
              _ = !1,
              v,
              y,
              b,
              x;
            m &&
              ((g = m.getSpacedPoints(s)),
              (_ = !0),
              (l = !1),
              (v = m.computeFrenetFrames(s, !1)),
              (y = new J()),
              (b = new J()),
              (x = new J())),
              l || ((p = 0), (u = 0), (d = 0), (f = 0));
            let S = e.extractPoints(o),
              C = S.shape,
              w = S.holes;
            if (!qp.isClockWise(C)) {
              C = C.reverse();
              for (let e = 0, t = w.length; e < t; e++) {
                let t = w[e];
                qp.isClockWise(t) && (w[e] = t.reverse());
              }
            }
            let T = qp.triangulateShape(C, w),
              E = C;
            for (let e = 0, t = w.length; e < t; e++) {
              let t = w[e];
              C = C.concat(t);
            }
            function D(e, t, n) {
              return (
                t || console.error(`THREE.ExtrudeGeometry: vec does not exist`),
                t.clone().multiplyScalar(n).add(e)
              );
            }
            let O = C.length,
              k = T.length;
            function A(e, t, n) {
              let r,
                i,
                a,
                o = e.x - t.x,
                s = e.y - t.y,
                c = n.x - e.x,
                l = n.y - e.y,
                u = o * o + s * s,
                d = o * l - s * c;
              if (Math.abs(d) > 2 ** -52) {
                let d = Math.sqrt(u),
                  f = Math.sqrt(c * c + l * l),
                  p = t.x - s / d,
                  m = t.y + o / d,
                  h = n.x - l / f,
                  g = n.y + c / f,
                  _ = ((h - p) * l - (g - m) * c) / (o * l - s * c);
                (r = p + o * _ - e.x), (i = m + s * _ - e.y);
                let v = r * r + i * i;
                if (v <= 2) return new q(r, i);
                a = Math.sqrt(v / 2);
              } else {
                let e = !1;
                o > 2 ** -52
                  ? c > 2 ** -52 && (e = !0)
                  : o < -(2 ** -52)
                  ? c < -(2 ** -52) && (e = !0)
                  : Math.sign(s) === Math.sign(l) && (e = !0),
                  e
                    ? ((r = -s), (i = o), (a = Math.sqrt(u)))
                    : ((r = o), (i = s), (a = Math.sqrt(u / 2)));
              }
              return new q(r / a, i / a);
            }
            let j = [];
            for (
              let e = 0, t = E.length, n = t - 1, r = e + 1;
              e < t;
              e++, n++, r++
            )
              n === t && (n = 0),
                r === t && (r = 0),
                (j[e] = A(E[e], E[n], E[r]));
            let M = [],
              N,
              P = j.concat();
            for (let e = 0, t = w.length; e < t; e++) {
              let t = w[e];
              N = [];
              for (
                let e = 0, n = t.length, r = n - 1, i = e + 1;
                e < n;
                e++, r++, i++
              )
                r === n && (r = 0),
                  i === n && (i = 0),
                  (N[e] = A(t[e], t[r], t[i]));
              M.push(N), (P = P.concat(N));
            }
            for (let e = 0; e < p; e++) {
              let t = e / p,
                n = u * Math.cos((t * Math.PI) / 2),
                r = d * Math.sin((t * Math.PI) / 2) + f;
              for (let e = 0, t = E.length; e < t; e++) {
                let t = D(E[e], j[e], r);
                L(t.x, t.y, -n);
              }
              for (let e = 0, t = w.length; e < t; e++) {
                let t = w[e];
                N = M[e];
                for (let e = 0, i = t.length; e < i; e++) {
                  let i = D(t[e], N[e], r);
                  L(i.x, i.y, -n);
                }
              }
            }
            let F = d + f;
            for (let e = 0; e < O; e++) {
              let t = l ? D(C[e], P[e], F) : C[e];
              _
                ? (b.copy(v.normals[0]).multiplyScalar(t.x),
                  y.copy(v.binormals[0]).multiplyScalar(t.y),
                  x.copy(g[0]).add(b).add(y),
                  L(x.x, x.y, x.z))
                : L(t.x, t.y, 0);
            }
            for (let e = 1; e <= s; e++)
              for (let t = 0; t < O; t++) {
                let n = l ? D(C[t], P[t], F) : C[t];
                _
                  ? (b.copy(v.normals[e]).multiplyScalar(n.x),
                    y.copy(v.binormals[e]).multiplyScalar(n.y),
                    x.copy(g[e]).add(b).add(y),
                    L(x.x, x.y, x.z))
                  : L(n.x, n.y, (c / s) * e);
              }
            for (let e = p - 1; e >= 0; e--) {
              let t = e / p,
                n = u * Math.cos((t * Math.PI) / 2),
                r = d * Math.sin((t * Math.PI) / 2) + f;
              for (let e = 0, t = E.length; e < t; e++) {
                let t = D(E[e], j[e], r);
                L(t.x, t.y, c + n);
              }
              for (let e = 0, t = w.length; e < t; e++) {
                let t = w[e];
                N = M[e];
                for (let e = 0, i = t.length; e < i; e++) {
                  let i = D(t[e], N[e], r);
                  _
                    ? L(i.x, i.y + g[s - 1].y, g[s - 1].x + n)
                    : L(i.x, i.y, c + n);
                }
              }
            }
            ee(), te();
            function ee() {
              let e = r.length / 3;
              if (l) {
                let e = 0,
                  t = O * e;
                for (let e = 0; e < k; e++) {
                  let n = T[e];
                  ne(n[2] + t, n[1] + t, n[0] + t);
                }
                (e = s + 2 * p), (t = O * e);
                for (let e = 0; e < k; e++) {
                  let n = T[e];
                  ne(n[0] + t, n[1] + t, n[2] + t);
                }
              } else {
                for (let e = 0; e < k; e++) {
                  let t = T[e];
                  ne(t[2], t[1], t[0]);
                }
                for (let e = 0; e < k; e++) {
                  let t = T[e];
                  ne(t[0] + O * s, t[1] + O * s, t[2] + O * s);
                }
              }
              n.addGroup(e, r.length / 3 - e, 0);
            }
            function te() {
              let e = r.length / 3,
                t = 0;
              I(E, t), (t += E.length);
              for (let e = 0, n = w.length; e < n; e++) {
                let n = w[e];
                I(n, t), (t += n.length);
              }
              n.addGroup(e, r.length / 3 - e, 1);
            }
            function I(e, t) {
              let n = e.length;
              for (; --n >= 0; ) {
                let r = n,
                  i = n - 1;
                i < 0 && (i = e.length - 1);
                for (let e = 0, n = s + 2 * p; e < n; e++) {
                  let n = O * e,
                    a = O * (e + 1),
                    o = t + r + n,
                    s = t + i + n,
                    c = t + i + a,
                    l = t + r + a;
                  re(o, s, c, l);
                }
              }
            }
            function L(e, t, n) {
              a.push(e), a.push(t), a.push(n);
            }
            function ne(e, t, i) {
              R(e), R(t), R(i);
              let a = r.length / 3,
                o = h.generateTopUV(n, r, a - 3, a - 2, a - 1);
              z(o[0]), z(o[1]), z(o[2]);
            }
            function re(e, t, i, a) {
              R(e), R(t), R(a), R(t), R(i), R(a);
              let o = r.length / 3,
                s = h.generateSideWallUV(n, r, o - 6, o - 3, o - 2, o - 1);
              z(s[0]), z(s[1]), z(s[3]), z(s[1]), z(s[2]), z(s[3]);
            }
            function R(e) {
              r.push(a[3 * e + 0]), r.push(a[3 * e + 1]), r.push(a[3 * e + 2]);
            }
            function z(e) {
              i.push(e.x), i.push(e.y);
            }
          }
        }
        toJSON() {
          let e = super.toJSON(),
            t = this.parameters.shapes,
            n = this.parameters.options;
          return za(t, n, e);
        }
        static fromJSON(t, n) {
          let r = [];
          for (let e = 0, i = t.shapes.length; e < i; e++) {
            let i = n[t.shapes[e]];
            r.push(i);
          }
          let i = t.options.extrudePath;
          return (
            i !== void 0 &&
              (t.options.extrudePath = new Hp[i.type]().fromJSON(i)),
            new e(r, t.options)
          );
        }
      }),
      (Yp = {
        generateTopUV: function (e, t, n, r, i) {
          let a = t[3 * n],
            o = t[3 * n + 1],
            s = t[3 * r],
            c = t[3 * r + 1],
            l = t[3 * i],
            u = t[3 * i + 1];
          return [new q(a, o), new q(s, c), new q(l, u)];
        },
        generateSideWallUV: function (e, t, n, r, i, a) {
          let o = t[3 * n],
            s = t[3 * n + 1],
            c = t[3 * n + 2],
            l = t[3 * r],
            u = t[3 * r + 1],
            d = t[3 * r + 2],
            f = t[3 * i],
            p = t[3 * i + 1],
            m = t[3 * i + 2],
            h = t[3 * a],
            g = t[3 * a + 1],
            _ = t[3 * a + 2];
          return Math.abs(s - u) < Math.abs(o - l)
            ? [
                new q(o, 1 - c),
                new q(l, 1 - d),
                new q(f, 1 - m),
                new q(h, 1 - _),
              ]
            : [
                new q(s, 1 - c),
                new q(u, 1 - d),
                new q(p, 1 - m),
                new q(g, 1 - _),
              ];
        },
      }),
      (Xp = class e extends bp {
        constructor(e = 1, t = 0) {
          let n = (1 + Math.sqrt(5)) / 2,
            r = [
              -1,
              n,
              0,
              1,
              n,
              0,
              -1,
              -n,
              0,
              1,
              -n,
              0,
              0,
              -1,
              n,
              0,
              1,
              n,
              0,
              -1,
              -n,
              0,
              1,
              -n,
              n,
              0,
              -1,
              n,
              0,
              1,
              -n,
              0,
              -1,
              -n,
              0,
              1,
            ];
          super(
            r,
            [
              0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11,
              4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6,
              8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
            ],
            e,
            t
          ),
            (this.type = `IcosahedronGeometry`),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(t) {
          return new e(t.radius, t.detail);
        }
      }),
      (Zp = class e extends ju {
        constructor(
          e = [new q(0, 0.5), new q(0.5, 0), new q(0, -0.5)],
          t = 12,
          n = 0,
          r = 2 * Math.PI
        ) {
          super(),
            (this.type = `LatheGeometry`),
            (this.parameters = {
              points: e,
              segments: t,
              phiStart: n,
              phiLength: r,
            }),
            (t = Math.floor(t)),
            (r = on(r, 0, 2 * Math.PI));
          let i = [],
            a = [],
            o = [],
            s = [],
            c = [],
            l = 1 / t,
            u = new J(),
            d = new q(),
            f = new J(),
            p = new J(),
            m = new J(),
            h = 0,
            g = 0;
          for (let t = 0; t <= e.length - 1; t++)
            switch (t) {
              case 0:
                (h = e[t + 1].x - e[t].x),
                  (g = e[t + 1].y - e[t].y),
                  (f.x = 1 * g),
                  (f.y = -h),
                  (f.z = 0 * g),
                  m.copy(f),
                  f.normalize(),
                  s.push(f.x, f.y, f.z);
                break;
              case e.length - 1:
                s.push(m.x, m.y, m.z);
                break;
              default:
                (h = e[t + 1].x - e[t].x),
                  (g = e[t + 1].y - e[t].y),
                  (f.x = 1 * g),
                  (f.y = -h),
                  (f.z = 0 * g),
                  p.copy(f),
                  (f.x += m.x),
                  (f.y += m.y),
                  (f.z += m.z),
                  f.normalize(),
                  s.push(f.x, f.y, f.z),
                  m.copy(p);
            }
          for (let i = 0; i <= t; i++) {
            let f = n + i * l * r,
              p = Math.sin(f),
              m = Math.cos(f);
            for (let n = 0; n <= e.length - 1; n++) {
              (u.x = e[n].x * p),
                (u.y = e[n].y),
                (u.z = e[n].x * m),
                a.push(u.x, u.y, u.z),
                (d.x = i / t),
                (d.y = n / (e.length - 1)),
                o.push(d.x, d.y);
              let r = s[3 * n + 0] * p,
                l = s[3 * n + 1],
                f = s[3 * n + 0] * m;
              c.push(r, l, f);
            }
          }
          for (let n = 0; n < t; n++)
            for (let t = 0; t < e.length - 1; t++) {
              let r = t + n * e.length,
                a = r,
                o = r + e.length,
                s = r + e.length + 1,
                c = r + 1;
              i.push(a, o, c), i.push(o, s, c);
            }
          this.setIndex(i),
            this.setAttribute(`position`, new Z(a, 3)),
            this.setAttribute(`uv`, new Z(o, 2)),
            this.setAttribute(`normal`, new Z(c, 3));
        }
        static fromJSON(t) {
          return new e(t.points, t.segments, t.phiStart, t.phiLength);
        }
      }),
      (Qp = class e extends bp {
        constructor(e = 1, t = 0) {
          super(
            [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
            [
              0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1,
              4, 2,
            ],
            e,
            t
          ),
            (this.type = `OctahedronGeometry`),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(t) {
          return new e(t.radius, t.detail);
        }
      }),
      ($p = class e extends ju {
        constructor(e = 0.5, t = 1, n = 8, r = 1, i = 0, a = 2 * Math.PI) {
          super(),
            (this.type = `RingGeometry`),
            (this.parameters = {
              innerRadius: e,
              outerRadius: t,
              thetaSegments: n,
              phiSegments: r,
              thetaStart: i,
              thetaLength: a,
            }),
            (n = Math.max(3, n)),
            (r = Math.max(1, r));
          let o = [],
            s = [],
            c = [],
            l = [],
            u = e,
            d = (t - e) / r,
            f = new J(),
            p = new q();
          for (let e = 0; e <= r; e++) {
            for (let e = 0; e <= n; e++) {
              let r = i + (e / n) * a;
              (f.x = u * Math.cos(r)),
                (f.y = u * Math.sin(r)),
                s.push(f.x, f.y, f.z),
                c.push(0, 0, 1),
                (p.x = (f.x / t + 1) / 2),
                (p.y = (f.y / t + 1) / 2),
                l.push(p.x, p.y);
            }
            u += d;
          }
          for (let e = 0; e < r; e++) {
            let t = e * (n + 1);
            for (let e = 0; e < n; e++) {
              let r = e + t,
                i = r,
                a = r + n + 1,
                s = r + n + 2,
                c = r + 1;
              o.push(i, a, c), o.push(a, s, c);
            }
          }
          this.setIndex(o),
            this.setAttribute(`position`, new Z(s, 3)),
            this.setAttribute(`normal`, new Z(c, 3)),
            this.setAttribute(`uv`, new Z(l, 2));
        }
        static fromJSON(t) {
          return new e(
            t.innerRadius,
            t.outerRadius,
            t.thetaSegments,
            t.phiSegments,
            t.thetaStart,
            t.thetaLength
          );
        }
      }),
      (em = class e extends ju {
        constructor(
          e = new Gp([new q(0, 0.5), new q(-0.5, -0.5), new q(0.5, -0.5)]),
          t = 12
        ) {
          super(),
            (this.type = `ShapeGeometry`),
            (this.parameters = { shapes: e, curveSegments: t });
          let n = [],
            r = [],
            i = [],
            a = [],
            o = 0,
            s = 0;
          if (!1 === Array.isArray(e)) c(e);
          else
            for (let t = 0; t < e.length; t++)
              c(e[t]), this.addGroup(o, s, t), (o += s), (s = 0);
          this.setIndex(n),
            this.setAttribute(`position`, new Z(r, 3)),
            this.setAttribute(`normal`, new Z(i, 3)),
            this.setAttribute(`uv`, new Z(a, 2));
          function c(e) {
            let o = r.length / 3,
              c = e.extractPoints(t),
              l = c.shape,
              u = c.holes;
            !1 === qp.isClockWise(l) && (l = l.reverse());
            for (let e = 0, t = u.length; e < t; e++) {
              let t = u[e];
              !0 === qp.isClockWise(t) && (u[e] = t.reverse());
            }
            let d = qp.triangulateShape(l, u);
            for (let e = 0, t = u.length; e < t; e++) {
              let t = u[e];
              l = l.concat(t);
            }
            for (let e = 0, t = l.length; e < t; e++) {
              let t = l[e];
              r.push(t.x, t.y, 0), i.push(0, 0, 1), a.push(t.x, t.y);
            }
            for (let e = 0, t = d.length; e < t; e++) {
              let t = d[e],
                r = t[0] + o,
                i = t[1] + o,
                a = t[2] + o;
              n.push(r, i, a), (s += 3);
            }
          }
        }
        toJSON() {
          let e = super.toJSON(),
            t = this.parameters.shapes;
          return Ba(t, e);
        }
        static fromJSON(t, n) {
          let r = [];
          for (let e = 0, i = t.shapes.length; e < i; e++) {
            let i = n[t.shapes[e]];
            r.push(i);
          }
          return new e(r, t.curveSegments);
        }
      }),
      (tm = class e extends ju {
        constructor(
          e = 1,
          t = 32,
          n = 16,
          r = 0,
          i = 2 * Math.PI,
          a = 0,
          o = Math.PI
        ) {
          super(),
            (this.type = `SphereGeometry`),
            (this.parameters = {
              radius: e,
              widthSegments: t,
              heightSegments: n,
              phiStart: r,
              phiLength: i,
              thetaStart: a,
              thetaLength: o,
            }),
            (t = Math.max(3, Math.floor(t))),
            (n = Math.max(2, Math.floor(n)));
          let s = Math.min(a + o, Math.PI),
            c = 0,
            l = [],
            u = new J(),
            d = new J(),
            f = [],
            p = [],
            m = [],
            h = [];
          for (let f = 0; f <= n; f++) {
            let g = [],
              _ = f / n,
              v = 0;
            f == 0 && a == 0
              ? (v = 0.5 / t)
              : f == n && s == Math.PI && (v = -0.5 / t);
            for (let n = 0; n <= t; n++) {
              let s = n / t;
              (u.x = -e * Math.cos(r + s * i) * Math.sin(a + _ * o)),
                (u.y = e * Math.cos(a + _ * o)),
                (u.z = e * Math.sin(r + s * i) * Math.sin(a + _ * o)),
                p.push(u.x, u.y, u.z),
                d.copy(u).normalize(),
                m.push(d.x, d.y, d.z),
                h.push(s + v, 1 - _),
                g.push(c++);
            }
            l.push(g);
          }
          for (let e = 0; e < n; e++)
            for (let r = 0; r < t; r++) {
              let t = l[e][r + 1],
                i = l[e][r],
                o = l[e + 1][r],
                c = l[e + 1][r + 1];
              (e !== 0 || a > 0) && f.push(t, i, c),
                (e !== n - 1 || s < Math.PI) && f.push(i, o, c);
            }
          this.setIndex(f),
            this.setAttribute(`position`, new Z(p, 3)),
            this.setAttribute(`normal`, new Z(m, 3)),
            this.setAttribute(`uv`, new Z(h, 2));
        }
        static fromJSON(t) {
          return new e(
            t.radius,
            t.widthSegments,
            t.heightSegments,
            t.phiStart,
            t.phiLength,
            t.thetaStart,
            t.thetaLength
          );
        }
      }),
      (nm = class e extends bp {
        constructor(e = 1, t = 0) {
          super(
            [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
            [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
            e,
            t
          ),
            (this.type = `TetrahedronGeometry`),
            (this.parameters = { radius: e, detail: t });
        }
        static fromJSON(t) {
          return new e(t.radius, t.detail);
        }
      }),
      (rm = class e extends ju {
        constructor(e = 1, t = 0.4, n = 8, r = 6, i = 2 * Math.PI) {
          super(),
            (this.type = `TorusGeometry`),
            (this.parameters = {
              radius: e,
              tube: t,
              radialSegments: n,
              tubularSegments: r,
              arc: i,
            }),
            (n = Math.floor(n)),
            (r = Math.floor(r));
          let a = [],
            o = [],
            s = [],
            c = [],
            l = new J(),
            u = new J(),
            d = new J();
          for (let a = 0; a <= n; a++)
            for (let f = 0; f <= r; f++) {
              let p = (f / r) * i,
                m = (a / n) * Math.PI * 2;
              (u.x = (e + t * Math.cos(m)) * Math.cos(p)),
                (u.y = (e + t * Math.cos(m)) * Math.sin(p)),
                (u.z = t * Math.sin(m)),
                o.push(u.x, u.y, u.z),
                (l.x = e * Math.cos(p)),
                (l.y = e * Math.sin(p)),
                d.subVectors(u, l).normalize(),
                s.push(d.x, d.y, d.z),
                c.push(f / r),
                c.push(a / n);
            }
          for (let e = 1; e <= n; e++)
            for (let t = 1; t <= r; t++) {
              let n = (r + 1) * e + t - 1,
                i = (r + 1) * (e - 1) + t - 1,
                o = (r + 1) * (e - 1) + t,
                s = (r + 1) * e + t;
              a.push(n, i, s), a.push(i, o, s);
            }
          this.setIndex(a),
            this.setAttribute(`position`, new Z(o, 3)),
            this.setAttribute(`normal`, new Z(s, 3)),
            this.setAttribute(`uv`, new Z(c, 2));
        }
        static fromJSON(t) {
          return new e(
            t.radius,
            t.tube,
            t.radialSegments,
            t.tubularSegments,
            t.arc
          );
        }
      }),
      (im = class e extends ju {
        constructor(e = 1, t = 0.4, n = 64, r = 8, i = 2, a = 3) {
          super(),
            (this.type = `TorusKnotGeometry`),
            (this.parameters = {
              radius: e,
              tube: t,
              tubularSegments: n,
              radialSegments: r,
              p: i,
              q: a,
            }),
            (n = Math.floor(n)),
            (r = Math.floor(r));
          let o = [],
            s = [],
            c = [],
            l = [],
            u = new J(),
            d = new J(),
            f = new J(),
            p = new J(),
            m = new J(),
            h = new J(),
            g = new J();
          for (let o = 0; o <= n; ++o) {
            let v = (o / n) * i * Math.PI * 2;
            _(v, i, a, e, f),
              _(v + 0.01, i, a, e, p),
              h.subVectors(p, f),
              g.addVectors(p, f),
              m.crossVectors(h, g),
              g.crossVectors(m, h),
              m.normalize(),
              g.normalize();
            for (let e = 0; e <= r; ++e) {
              let i = (e / r) * Math.PI * 2,
                a = -t * Math.cos(i),
                p = t * Math.sin(i);
              (u.x = f.x + (a * g.x + p * m.x)),
                (u.y = f.y + (a * g.y + p * m.y)),
                (u.z = f.z + (a * g.z + p * m.z)),
                s.push(u.x, u.y, u.z),
                d.subVectors(u, f).normalize(),
                c.push(d.x, d.y, d.z),
                l.push(o / n),
                l.push(e / r);
            }
          }
          for (let e = 1; e <= n; e++)
            for (let t = 1; t <= r; t++) {
              let n = (r + 1) * (e - 1) + (t - 1),
                i = (r + 1) * e + (t - 1),
                a = (r + 1) * e + t,
                s = (r + 1) * (e - 1) + t;
              o.push(n, i, s), o.push(i, a, s);
            }
          this.setIndex(o),
            this.setAttribute(`position`, new Z(s, 3)),
            this.setAttribute(`normal`, new Z(c, 3)),
            this.setAttribute(`uv`, new Z(l, 2));
          function _(e, t, n, r, i) {
            let a = Math.cos(e),
              o = Math.sin(e),
              s = (n / t) * e,
              c = Math.cos(s);
            (i.x = r * (2 + c) * 0.5 * a),
              (i.y = r * (2 + c) * o * 0.5),
              (i.z = r * Math.sin(s) * 0.5);
          }
        }
        static fromJSON(t) {
          return new e(
            t.radius,
            t.tube,
            t.tubularSegments,
            t.radialSegments,
            t.p,
            t.q
          );
        }
      }),
      (am = class e extends ju {
        constructor(
          e = new Bp(new J(-1, -1, 0), new J(-1, 1, 0), new J(1, 1, 0)),
          t = 64,
          n = 1,
          r = 8,
          i = !1
        ) {
          super(),
            (this.type = `TubeGeometry`),
            (this.parameters = {
              path: e,
              tubularSegments: t,
              radius: n,
              radialSegments: r,
              closed: i,
            });
          let a = e.computeFrenetFrames(t, i);
          (this.tangents = a.tangents),
            (this.normals = a.normals),
            (this.binormals = a.binormals);
          let o = new J(),
            s = new J(),
            c = new q(),
            l = new J(),
            u = [],
            d = [],
            f = [],
            p = [];
          m(),
            this.setIndex(p),
            this.setAttribute(`position`, new Z(u, 3)),
            this.setAttribute(`normal`, new Z(d, 3)),
            this.setAttribute(`uv`, new Z(f, 2));
          function m() {
            for (let e = 0; e < t; e++) h(e);
            h(!1 === i ? t : 0), _(), g();
          }
          function h(i) {
            l = e.getPointAt(i / t, l);
            let c = a.normals[i],
              f = a.binormals[i];
            for (let e = 0; e <= r; e++) {
              let t = (e / r) * Math.PI * 2,
                i = Math.sin(t),
                a = -Math.cos(t);
              (s.x = a * c.x + i * f.x),
                (s.y = a * c.y + i * f.y),
                (s.z = a * c.z + i * f.z),
                s.normalize(),
                d.push(s.x, s.y, s.z),
                (o.x = l.x + n * s.x),
                (o.y = l.y + n * s.y),
                (o.z = l.z + n * s.z),
                u.push(o.x, o.y, o.z);
            }
          }
          function g() {
            for (let e = 1; e <= t; e++)
              for (let t = 1; t <= r; t++) {
                let n = (r + 1) * (e - 1) + (t - 1),
                  i = (r + 1) * e + (t - 1),
                  a = (r + 1) * e + t,
                  o = (r + 1) * (e - 1) + t;
                p.push(n, i, o), p.push(i, a, o);
              }
          }
          function _() {
            for (let e = 0; e <= t; e++)
              for (let n = 0; n <= r; n++)
                (c.x = e / t), (c.y = n / r), f.push(c.x, c.y);
          }
        }
        toJSON() {
          let e = super.toJSON();
          return (e.path = this.parameters.path.toJSON()), e;
        }
        static fromJSON(t) {
          return new e(
            new Hp[t.path.type]().fromJSON(t.path),
            t.tubularSegments,
            t.radius,
            t.radialSegments,
            t.closed
          );
        }
      }),
      (om = class extends ju {
        constructor(e = null) {
          if (
            (super(),
            (this.type = `WireframeGeometry`),
            (this.parameters = { geometry: e }),
            e !== null)
          ) {
            let t = [],
              n = new Set(),
              r = new J(),
              i = new J();
            if (e.index !== null) {
              let a = e.attributes.position,
                o = e.index,
                s = e.groups;
              s.length === 0 &&
                (s = [{ start: 0, count: o.count, materialIndex: 0 }]);
              for (let e = 0, c = s.length; e < c; ++e) {
                let c = s[e],
                  l = c.start,
                  u = c.count;
                for (let e = l, s = l + u; e < s; e += 3)
                  for (let s = 0; s < 3; s++) {
                    let c = o.getX(e + s),
                      l = o.getX(e + ((s + 1) % 3));
                    r.fromBufferAttribute(a, c),
                      i.fromBufferAttribute(a, l),
                      !0 === Va(r, i, n) &&
                        (t.push(r.x, r.y, r.z), t.push(i.x, i.y, i.z));
                  }
              }
            } else {
              let a = e.attributes.position;
              for (let e = 0, o = a.count / 3; e < o; e++)
                for (let o = 0; o < 3; o++) {
                  let s = 3 * e + o,
                    c = 3 * e + ((o + 1) % 3);
                  r.fromBufferAttribute(a, s),
                    i.fromBufferAttribute(a, c),
                    !0 === Va(r, i, n) &&
                      (t.push(r.x, r.y, r.z), t.push(i.x, i.y, i.z));
                }
            }
            this.setAttribute(`position`, new Z(t, 3));
          }
        }
      }),
      Object.freeze({
        __proto__: null,
        BoxGeometry: Xu,
        BoxBufferGeometry: Xu,
        CircleGeometry: _p,
        CircleBufferGeometry: _p,
        ConeGeometry: yp,
        ConeBufferGeometry: yp,
        CylinderGeometry: vp,
        CylinderBufferGeometry: vp,
        DodecahedronGeometry: xp,
        DodecahedronBufferGeometry: xp,
        EdgesGeometry: Ep,
        ExtrudeGeometry: Jp,
        ExtrudeBufferGeometry: Jp,
        IcosahedronGeometry: Xp,
        IcosahedronBufferGeometry: Xp,
        LatheGeometry: Zp,
        LatheBufferGeometry: Zp,
        OctahedronGeometry: Qp,
        OctahedronBufferGeometry: Qp,
        PlaneGeometry: hd,
        PlaneBufferGeometry: hd,
        PolyhedronGeometry: bp,
        PolyhedronBufferGeometry: bp,
        RingGeometry: $p,
        RingBufferGeometry: $p,
        ShapeGeometry: em,
        ShapeBufferGeometry: em,
        SphereGeometry: tm,
        SphereBufferGeometry: tm,
        TetrahedronGeometry: nm,
        TetrahedronBufferGeometry: nm,
        TorusGeometry: rm,
        TorusBufferGeometry: rm,
        TorusKnotGeometry: im,
        TorusKnotBufferGeometry: im,
        TubeGeometry: am,
        TubeBufferGeometry: am,
        WireframeGeometry: om,
      }),
      (sm = class extends pu {
        constructor(e) {
          super(),
            (this.type = `ShadowMaterial`),
            (this.color = new X(0)),
            (this.transparent = !0),
            this.setValues(e);
        }
        copy(e) {
          return super.copy(e), this.color.copy(e.color), this;
        }
      }),
      (sm.prototype.isShadowMaterial = !0),
      (cm = class extends pu {
        constructor(e) {
          super(),
            (this.defines = { STANDARD: `` }),
            (this.type = `MeshStandardMaterial`),
            (this.color = new X(16777215)),
            (this.roughness = 1),
            (this.metalness = 0),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new X(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Nc),
            (this.normalScale = new q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.roughnessMap = null),
            (this.metalnessMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapIntensity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = `round`),
            (this.wireframeLinejoin = `round`),
            (this.flatShading = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.defines = { STANDARD: `` }),
            this.color.copy(e.color),
            (this.roughness = e.roughness),
            (this.metalness = e.metalness),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.roughnessMap = e.roughnessMap),
            (this.metalnessMap = e.metalnessMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.envMapIntensity = e.envMapIntensity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            this
          );
        }
      }),
      (cm.prototype.isMeshStandardMaterial = !0),
      (lm = class extends cm {
        constructor(e) {
          super(),
            (this.defines = { STANDARD: ``, PHYSICAL: `` }),
            (this.type = `MeshPhysicalMaterial`),
            (this.clearcoatMap = null),
            (this.clearcoatRoughness = 0),
            (this.clearcoatRoughnessMap = null),
            (this.clearcoatNormalScale = new q(1, 1)),
            (this.clearcoatNormalMap = null),
            (this.ior = 1.5),
            Object.defineProperty(this, `reflectivity`, {
              get: function () {
                return on((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
              },
              set: function (e) {
                this.ior = (1 + 0.4 * e) / (1 - 0.4 * e);
              },
            }),
            (this.sheenColor = new X(0)),
            (this.sheenColorMap = null),
            (this.sheenRoughness = 1),
            (this.sheenRoughnessMap = null),
            (this.transmissionMap = null),
            (this.thickness = 0),
            (this.thicknessMap = null),
            (this.attenuationDistance = 0),
            (this.attenuationColor = new X(1, 1, 1)),
            (this.specularIntensity = 1),
            (this.specularIntensityMap = null),
            (this.specularColor = new X(1, 1, 1)),
            (this.specularColorMap = null),
            (this._sheen = 0),
            (this._clearcoat = 0),
            (this._transmission = 0),
            this.setValues(e);
        }
        get sheen() {
          return this._sheen;
        }
        set sheen(e) {
          this._sheen > 0 != e > 0 && this.version++, (this._sheen = e);
        }
        get clearcoat() {
          return this._clearcoat;
        }
        set clearcoat(e) {
          this._clearcoat > 0 != e > 0 && this.version++, (this._clearcoat = e);
        }
        get transmission() {
          return this._transmission;
        }
        set transmission(e) {
          this._transmission > 0 != e > 0 && this.version++,
            (this._transmission = e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.defines = { STANDARD: ``, PHYSICAL: `` }),
            (this.clearcoat = e.clearcoat),
            (this.clearcoatMap = e.clearcoatMap),
            (this.clearcoatRoughness = e.clearcoatRoughness),
            (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
            (this.clearcoatNormalMap = e.clearcoatNormalMap),
            this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
            (this.ior = e.ior),
            (this.sheen = e.sheen),
            this.sheenColor.copy(e.sheenColor),
            (this.sheenColorMap = e.sheenColorMap),
            (this.sheenRoughness = e.sheenRoughness),
            (this.sheenRoughnessMap = e.sheenRoughnessMap),
            (this.transmission = e.transmission),
            (this.transmissionMap = e.transmissionMap),
            (this.thickness = e.thickness),
            (this.thicknessMap = e.thicknessMap),
            (this.attenuationDistance = e.attenuationDistance),
            this.attenuationColor.copy(e.attenuationColor),
            (this.specularIntensity = e.specularIntensity),
            (this.specularIntensityMap = e.specularIntensityMap),
            this.specularColor.copy(e.specularColor),
            (this.specularColorMap = e.specularColorMap),
            this
          );
        }
      }),
      (lm.prototype.isMeshPhysicalMaterial = !0),
      (um = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshPhongMaterial`),
            (this.color = new X(16777215)),
            (this.specular = new X(1118481)),
            (this.shininess = 30),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new X(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Nc),
            (this.normalScale = new q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.combine = No),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = `round`),
            (this.wireframeLinejoin = `round`),
            (this.flatShading = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            this.specular.copy(e.specular),
            (this.shininess = e.shininess),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            this
          );
        }
      }),
      (um.prototype.isMeshPhongMaterial = !0),
      (dm = class extends pu {
        constructor(e) {
          super(),
            (this.defines = { TOON: `` }),
            (this.type = `MeshToonMaterial`),
            (this.color = new X(16777215)),
            (this.map = null),
            (this.gradientMap = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new X(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Nc),
            (this.normalScale = new q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.alphaMap = null),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = `round`),
            (this.wireframeLinejoin = `round`),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.gradientMap = e.gradientMap),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.alphaMap = e.alphaMap),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            this
          );
        }
      }),
      (dm.prototype.isMeshToonMaterial = !0),
      (fm = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshNormalMaterial`),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Nc),
            (this.normalScale = new q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.fog = !1),
            (this.flatShading = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.flatShading = e.flatShading),
            this
          );
        }
      }),
      (fm.prototype.isMeshNormalMaterial = !0),
      (pm = class extends pu {
        constructor(e) {
          super(),
            (this.type = `MeshLambertMaterial`),
            (this.color = new X(16777215)),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new X(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.combine = No),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = `round`),
            (this.wireframeLinejoin = `round`),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            this
          );
        }
      }),
      (pm.prototype.isMeshLambertMaterial = !0),
      (mm = class extends pu {
        constructor(e) {
          super(),
            (this.defines = { MATCAP: `` }),
            (this.type = `MeshMatcapMaterial`),
            (this.color = new X(16777215)),
            (this.matcap = null),
            (this.map = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Nc),
            (this.normalScale = new q(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.alphaMap = null),
            (this.flatShading = !1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.defines = { MATCAP: `` }),
            this.color.copy(e.color),
            (this.matcap = e.matcap),
            (this.map = e.map),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.alphaMap = e.alphaMap),
            (this.flatShading = e.flatShading),
            this
          );
        }
      }),
      (mm.prototype.isMeshMatcapMaterial = !0),
      (hm = class extends Xf {
        constructor(e) {
          super(),
            (this.type = `LineDashedMaterial`),
            (this.scale = 1),
            (this.dashSize = 3),
            (this.gapSize = 1),
            this.setValues(e);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.scale = e.scale),
            (this.dashSize = e.dashSize),
            (this.gapSize = e.gapSize),
            this
          );
        }
      }),
      (hm.prototype.isLineDashedMaterial = !0),
      Object.freeze({
        __proto__: null,
        ShadowMaterial: sm,
        SpriteMaterial: xf,
        RawShaderMaterial: vd,
        ShaderMaterial: ed,
        PointsMaterial: sp,
        MeshPhysicalMaterial: lm,
        MeshStandardMaterial: cm,
        MeshPhongMaterial: um,
        MeshToonMaterial: dm,
        MeshNormalMaterial: fm,
        MeshLambertMaterial: pm,
        MeshDepthMaterial: nf,
        MeshDistanceMaterial: rf,
        MeshBasicMaterial: _u,
        MeshMatcapMaterial: mm,
        LineDashedMaterial: hm,
        LineBasicMaterial: Xf,
        Material: pu,
      }),
      (gm = {
        arraySlice: function (e, t, n) {
          return gm.isTypedArray(e)
            ? new e.constructor(e.subarray(t, n === void 0 ? e.length : n))
            : e.slice(t, n);
        },
        convertArray: function (e, t, n) {
          return !e || (!n && e.constructor === t)
            ? e
            : typeof t.BYTES_PER_ELEMENT == `number`
            ? new t(e)
            : Array.prototype.slice.call(e);
        },
        isTypedArray: function (e) {
          return ArrayBuffer.isView(e) && !(e instanceof DataView);
        },
        getKeyframeOrder: function (e) {
          function t(t, n) {
            return e[t] - e[n];
          }
          let n = e.length,
            r = Array(n);
          for (let e = 0; e !== n; ++e) r[e] = e;
          return r.sort(t), r;
        },
        sortedArray: function (e, t, n) {
          let r = e.length,
            i = new e.constructor(r);
          for (let a = 0, o = 0; o !== r; ++a) {
            let r = n[a] * t;
            for (let n = 0; n !== t; ++n) i[o++] = e[r + n];
          }
          return i;
        },
        flattenJSON: function (e, t, n, r) {
          let i = 1,
            a = e[0];
          for (; a !== void 0 && a[r] === void 0; ) a = e[i++];
          if (a === void 0) return;
          let o = a[r];
          if (o !== void 0)
            if (Array.isArray(o))
              do
                (o = a[r]),
                  o !== void 0 && (t.push(a.time), n.push.apply(n, o)),
                  (a = e[i++]);
              while (a !== void 0);
            else if (o.toArray !== void 0)
              do
                (o = a[r]),
                  o !== void 0 && (t.push(a.time), o.toArray(n, n.length)),
                  (a = e[i++]);
              while (a !== void 0);
            else
              do
                (o = a[r]),
                  o !== void 0 && (t.push(a.time), n.push(o)),
                  (a = e[i++]);
              while (a !== void 0);
        },
        subclip: function (e, t, n, r, i = 30) {
          let a = e.clone();
          a.name = t;
          let o = [];
          for (let e = 0; e < a.tracks.length; ++e) {
            let t = a.tracks[e],
              s = t.getValueSize(),
              c = [],
              l = [];
            for (let e = 0; e < t.times.length; ++e) {
              let a = t.times[e] * i;
              if (!(a < n || a >= r)) {
                c.push(t.times[e]);
                for (let n = 0; n < s; ++n) l.push(t.values[e * s + n]);
              }
            }
            c.length !== 0 &&
              ((t.times = gm.convertArray(c, t.times.constructor)),
              (t.values = gm.convertArray(l, t.values.constructor)),
              o.push(t));
          }
          a.tracks = o;
          let s = 1 / 0;
          for (let e = 0; e < a.tracks.length; ++e)
            s > a.tracks[e].times[0] && (s = a.tracks[e].times[0]);
          for (let e = 0; e < a.tracks.length; ++e) a.tracks[e].shift(-1 * s);
          return a.resetDuration(), a;
        },
        makeClipAdditive: function (e, t = 0, n = e, r = 30) {
          r <= 0 && (r = 30);
          let i = n.tracks.length,
            a = t / r;
          for (let t = 0; t < i; ++t) {
            let r = n.tracks[t],
              i = r.ValueTypeName;
            if (i === `bool` || i === `string`) continue;
            let o = e.tracks.find(function (e) {
              return e.name === r.name && e.ValueTypeName === i;
            });
            if (o === void 0) continue;
            let s = 0,
              c = r.getValueSize();
            r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
              (s = c / 3);
            let l = 0,
              u = o.getValueSize();
            o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
              (l = u / 3);
            let d = r.times.length - 1,
              f;
            if (a <= r.times[0]) {
              let e = s,
                t = c - s;
              f = gm.arraySlice(r.values, e, t);
            } else if (a >= r.times[d]) {
              let e = d * c + s,
                t = e + c - s;
              f = gm.arraySlice(r.values, e, t);
            } else {
              let e = r.createInterpolant(),
                t = s,
                n = c - s;
              e.evaluate(a), (f = gm.arraySlice(e.resultBuffer, t, n));
            }
            i === `quaternion` &&
              new el().fromArray(f).normalize().conjugate().toArray(f);
            let p = o.times.length;
            for (let e = 0; e < p; ++e) {
              let t = e * u + l;
              if (i === `quaternion`)
                el.multiplyQuaternionsFlat(o.values, t, f, 0, o.values, t);
              else {
                let e = u - 2 * l;
                for (let n = 0; n < e; ++n) o.values[t + n] -= f[n];
              }
            }
          }
          return (e.blendMode = Dc), e;
        },
      }),
      (_m = class {
        constructor(e, t, n, r) {
          (this.parameterPositions = e),
            (this._cachedIndex = 0),
            (this.resultBuffer = r === void 0 ? new t.constructor(n) : r),
            (this.sampleValues = t),
            (this.valueSize = n),
            (this.settings = null),
            (this.DefaultSettings_ = {});
        }
        evaluate(e) {
          let t = this.parameterPositions,
            n = this._cachedIndex,
            r = t[n],
            i = t[n - 1];
          e: {
            t: {
              let a;
              n: {
                r: if (!(e < r)) {
                  for (let a = n + 2; ; ) {
                    if (r === void 0) {
                      if (e < i) break r;
                      return (
                        (n = t.length),
                        (this._cachedIndex = n),
                        this.afterEnd_(n - 1, e, i)
                      );
                    }
                    if (n === a) break;
                    if (((i = r), (r = t[++n]), e < r)) break t;
                  }
                  a = t.length;
                  break n;
                }
                if (e >= i) break e;
                {
                  let o = t[1];
                  e < o && ((n = 2), (i = o));
                  for (let a = n - 2; ; ) {
                    if (i === void 0)
                      return (
                        (this._cachedIndex = 0), this.beforeStart_(0, e, r)
                      );
                    if (n === a) break;
                    if (((r = i), (i = t[--n - 1]), e >= i)) break t;
                  }
                  (a = n), (n = 0);
                }
              }
              for (; n < a; ) {
                let r = (n + a) >>> 1;
                e < t[r] ? (a = r) : (n = r + 1);
              }
              if (((r = t[n]), (i = t[n - 1]), i === void 0))
                return (this._cachedIndex = 0), this.beforeStart_(0, e, r);
              if (r === void 0)
                return (
                  (n = t.length),
                  (this._cachedIndex = n),
                  this.afterEnd_(n - 1, i, e)
                );
            }
            (this._cachedIndex = n), this.intervalChanged_(n, i, r);
          }
          return this.interpolate_(n, i, e, r);
        }
        getSettings_() {
          return this.settings || this.DefaultSettings_;
        }
        copySampleValue_(e) {
          let t = this.resultBuffer,
            n = this.sampleValues,
            r = this.valueSize,
            i = e * r;
          for (let e = 0; e !== r; ++e) t[e] = n[i + e];
          return t;
        }
        interpolate_() {
          throw Error(`call to abstract method`);
        }
        intervalChanged_() {}
      }),
      (_m.prototype.beforeStart_ = _m.prototype.copySampleValue_),
      (_m.prototype.afterEnd_ = _m.prototype.copySampleValue_),
      (vm = class extends _m {
        constructor(e, t, n, r) {
          super(e, t, n, r),
            (this._weightPrev = -0),
            (this._offsetPrev = -0),
            (this._weightNext = -0),
            (this._offsetNext = -0),
            (this.DefaultSettings_ = { endingStart: Cc, endingEnd: Cc });
        }
        intervalChanged_(e, t, n) {
          let r = this.parameterPositions,
            i = e - 2,
            a = e + 1,
            o = r[i],
            s = r[a];
          if (o === void 0)
            switch (this.getSettings_().endingStart) {
              case wc:
                (i = e), (o = 2 * t - n);
                break;
              case Tc:
                (i = r.length - 2), (o = t + r[i] - r[i + 1]);
                break;
              default:
                (i = e), (o = n);
            }
          if (s === void 0)
            switch (this.getSettings_().endingEnd) {
              case wc:
                (a = e), (s = 2 * n - t);
                break;
              case Tc:
                (a = 1), (s = n + r[1] - r[0]);
                break;
              default:
                (a = e - 1), (s = t);
            }
          let c = 0.5 * (n - t),
            l = this.valueSize;
          (this._weightPrev = c / (t - o)),
            (this._weightNext = c / (s - n)),
            (this._offsetPrev = i * l),
            (this._offsetNext = a * l);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            a = this.sampleValues,
            o = this.valueSize,
            s = e * o,
            c = s - o,
            l = this._offsetPrev,
            u = this._offsetNext,
            d = this._weightPrev,
            f = this._weightNext,
            p = (n - t) / (r - t),
            m = p * p,
            h = m * p,
            g = -d * h + 2 * d * m - d * p,
            _ = (1 + d) * h + (-1.5 - 2 * d) * m + (-0.5 + d) * p + 1,
            v = (-1 - f) * h + (1.5 + f) * m + 0.5 * p,
            y = f * h - f * m;
          for (let e = 0; e !== o; ++e)
            i[e] = g * a[l + e] + _ * a[c + e] + v * a[s + e] + y * a[u + e];
          return i;
        }
      }),
      (ym = class extends _m {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            a = this.sampleValues,
            o = this.valueSize,
            s = e * o,
            c = s - o,
            l = (n - t) / (r - t),
            u = 1 - l;
          for (let e = 0; e !== o; ++e) i[e] = a[c + e] * u + a[s + e] * l;
          return i;
        }
      }),
      (bm = class extends _m {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e) {
          return this.copySampleValue_(e - 1);
        }
      }),
      (xm = class {
        constructor(e, t, n, r) {
          if (e === void 0)
            throw Error(`THREE.KeyframeTrack: track name is undefined`);
          if (t === void 0 || t.length === 0)
            throw Error(
              `THREE.KeyframeTrack: no keyframes in track named ` + e
            );
          (this.name = e),
            (this.times = gm.convertArray(t, this.TimeBufferType)),
            (this.values = gm.convertArray(n, this.ValueBufferType)),
            this.setInterpolation(r || this.DefaultInterpolation);
        }
        static toJSON(e) {
          let t = e.constructor,
            n;
          if (t.toJSON !== this.toJSON) n = t.toJSON(e);
          else {
            n = {
              name: e.name,
              times: gm.convertArray(e.times, Array),
              values: gm.convertArray(e.values, Array),
            };
            let t = e.getInterpolation();
            t !== e.DefaultInterpolation && (n.interpolation = t);
          }
          return (n.type = e.ValueTypeName), n;
        }
        InterpolantFactoryMethodDiscrete(e) {
          return new bm(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodLinear(e) {
          return new ym(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodSmooth(e) {
          return new vm(this.times, this.values, this.getValueSize(), e);
        }
        setInterpolation(e) {
          let t;
          switch (e) {
            case bc:
              t = this.InterpolantFactoryMethodDiscrete;
              break;
            case xc:
              t = this.InterpolantFactoryMethodLinear;
              break;
            case Sc:
              t = this.InterpolantFactoryMethodSmooth;
              break;
          }
          if (t === void 0) {
            let t =
              `unsupported interpolation for ` +
              this.ValueTypeName +
              ` keyframe track named ` +
              this.name;
            if (this.createInterpolant === void 0) {
              if (e === this.DefaultInterpolation) throw Error(t);
              this.setInterpolation(this.DefaultInterpolation);
            }
            return console.warn(`THREE.KeyframeTrack:`, t), this;
          }
          return (this.createInterpolant = t), this;
        }
        getInterpolation() {
          switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
              return bc;
            case this.InterpolantFactoryMethodLinear:
              return xc;
            case this.InterpolantFactoryMethodSmooth:
              return Sc;
          }
        }
        getValueSize() {
          return this.values.length / this.times.length;
        }
        shift(e) {
          if (e !== 0) {
            let t = this.times;
            for (let n = 0, r = t.length; n !== r; ++n) t[n] += e;
          }
          return this;
        }
        scale(e) {
          if (e !== 1) {
            let t = this.times;
            for (let n = 0, r = t.length; n !== r; ++n) t[n] *= e;
          }
          return this;
        }
        trim(e, t) {
          let n = this.times,
            r = n.length,
            i = 0,
            a = r - 1;
          for (; i !== r && n[i] < e; ) ++i;
          for (; a !== -1 && n[a] > t; ) --a;
          if ((++a, i !== 0 || a !== r)) {
            i >= a && ((a = Math.max(a, 1)), (i = a - 1));
            let e = this.getValueSize();
            (this.times = gm.arraySlice(n, i, a)),
              (this.values = gm.arraySlice(this.values, i * e, a * e));
          }
          return this;
        }
        validate() {
          let e = !0,
            t = this.getValueSize();
          t - Math.floor(t) !== 0 &&
            (console.error(
              `THREE.KeyframeTrack: Invalid value size in track.`,
              this
            ),
            (e = !1));
          let n = this.times,
            r = this.values,
            i = n.length;
          i === 0 &&
            (console.error(`THREE.KeyframeTrack: Track is empty.`, this),
            (e = !1));
          let a = null;
          for (let t = 0; t !== i; t++) {
            let r = n[t];
            if (typeof r == `number` && isNaN(r)) {
              console.error(
                `THREE.KeyframeTrack: Time is not a valid number.`,
                this,
                t,
                r
              ),
                (e = !1);
              break;
            }
            if (a !== null && a > r) {
              console.error(
                `THREE.KeyframeTrack: Out of order keys.`,
                this,
                t,
                r,
                a
              ),
                (e = !1);
              break;
            }
            a = r;
          }
          if (r !== void 0 && gm.isTypedArray(r))
            for (let t = 0, n = r.length; t !== n; ++t) {
              let n = r[t];
              if (isNaN(n)) {
                console.error(
                  `THREE.KeyframeTrack: Value is not a valid number.`,
                  this,
                  t,
                  n
                ),
                  (e = !1);
                break;
              }
            }
          return e;
        }
        optimize() {
          let e = gm.arraySlice(this.times),
            t = gm.arraySlice(this.values),
            n = this.getValueSize(),
            r = this.getInterpolation() === Sc,
            i = e.length - 1,
            a = 1;
          for (let o = 1; o < i; ++o) {
            let i = !1,
              s = e[o],
              c = e[o + 1];
            if (s !== c && (o !== 1 || s !== e[0]))
              if (r) i = !0;
              else {
                let e = o * n,
                  r = e - n,
                  a = e + n;
                for (let o = 0; o !== n; ++o) {
                  let n = t[e + o];
                  if (n !== t[r + o] || n !== t[a + o]) {
                    i = !0;
                    break;
                  }
                }
              }
            if (i) {
              if (o !== a) {
                e[a] = e[o];
                let r = o * n,
                  i = a * n;
                for (let e = 0; e !== n; ++e) t[i + e] = t[r + e];
              }
              ++a;
            }
          }
          if (i > 0) {
            e[a] = e[i];
            for (let e = i * n, r = a * n, o = 0; o !== n; ++o)
              t[r + o] = t[e + o];
            ++a;
          }
          return (
            a === e.length
              ? ((this.times = e), (this.values = t))
              : ((this.times = gm.arraySlice(e, 0, a)),
                (this.values = gm.arraySlice(t, 0, a * n))),
            this
          );
        }
        clone() {
          let e = gm.arraySlice(this.times, 0),
            t = gm.arraySlice(this.values, 0),
            n = this.constructor,
            r = new n(this.name, e, t);
          return (r.createInterpolant = this.createInterpolant), r;
        }
      }),
      (xm.prototype.TimeBufferType = Float32Array),
      (xm.prototype.ValueBufferType = Float32Array),
      (xm.prototype.DefaultInterpolation = xc),
      (Sm = class extends xm {}),
      (Sm.prototype.ValueTypeName = `bool`),
      (Sm.prototype.ValueBufferType = Array),
      (Sm.prototype.DefaultInterpolation = bc),
      (Sm.prototype.InterpolantFactoryMethodLinear = void 0),
      (Sm.prototype.InterpolantFactoryMethodSmooth = void 0),
      (Cm = class extends xm {}),
      (Cm.prototype.ValueTypeName = `color`),
      (wm = class extends xm {}),
      (wm.prototype.ValueTypeName = `number`),
      (Tm = class extends _m {
        constructor(e, t, n, r) {
          super(e, t, n, r);
        }
        interpolate_(e, t, n, r) {
          let i = this.resultBuffer,
            a = this.sampleValues,
            o = this.valueSize,
            s = (n - t) / (r - t),
            c = e * o;
          for (let e = c + o; c !== e; c += 4)
            el.slerpFlat(i, 0, a, c - o, a, c, s);
          return i;
        }
      }),
      (Em = class extends xm {
        InterpolantFactoryMethodLinear(e) {
          return new Tm(this.times, this.values, this.getValueSize(), e);
        }
      }),
      (Em.prototype.ValueTypeName = `quaternion`),
      (Em.prototype.DefaultInterpolation = xc),
      (Em.prototype.InterpolantFactoryMethodSmooth = void 0),
      (Dm = class extends xm {}),
      (Dm.prototype.ValueTypeName = `string`),
      (Dm.prototype.ValueBufferType = Array),
      (Dm.prototype.DefaultInterpolation = bc),
      (Dm.prototype.InterpolantFactoryMethodLinear = void 0),
      (Dm.prototype.InterpolantFactoryMethodSmooth = void 0),
      (Om = class extends xm {}),
      (Om.prototype.ValueTypeName = `vector`),
      (km = class {
        constructor(e, t = -1, n, r = Ec) {
          (this.name = e),
            (this.tracks = n),
            (this.duration = t),
            (this.blendMode = r),
            (this.uuid = an()),
            this.duration < 0 && this.resetDuration();
        }
        static parse(e) {
          let t = [],
            n = e.tracks,
            r = 1 / (e.fps || 1);
          for (let e = 0, i = n.length; e !== i; ++e) t.push(Ua(n[e]).scale(r));
          let i = new this(e.name, e.duration, t, e.blendMode);
          return (i.uuid = e.uuid), i;
        }
        static toJSON(e) {
          let t = [],
            n = e.tracks,
            r = {
              name: e.name,
              duration: e.duration,
              tracks: t,
              uuid: e.uuid,
              blendMode: e.blendMode,
            };
          for (let e = 0, r = n.length; e !== r; ++e) t.push(xm.toJSON(n[e]));
          return r;
        }
        static CreateFromMorphTargetSequence(e, t, n, r) {
          let i = t.length,
            a = [];
          for (let e = 0; e < i; e++) {
            let o = [],
              s = [];
            o.push((e + i - 1) % i, e, (e + 1) % i), s.push(0, 1, 0);
            let c = gm.getKeyframeOrder(o);
            (o = gm.sortedArray(o, 1, c)),
              (s = gm.sortedArray(s, 1, c)),
              !r && o[0] === 0 && (o.push(i), s.push(s[0])),
              a.push(
                new wm(`.morphTargetInfluences[` + t[e].name + `]`, o, s).scale(
                  1 / n
                )
              );
          }
          return new this(e, -1, a);
        }
        static findByName(e, t) {
          let n = e;
          if (!Array.isArray(e)) {
            let t = e;
            n = (t.geometry && t.geometry.animations) || t.animations;
          }
          for (let e = 0; e < n.length; e++) if (n[e].name === t) return n[e];
          return null;
        }
        static CreateClipsFromMorphTargetSequences(e, t, n) {
          let r = {},
            i = /^([\w-]*?)([\d]+)$/;
          for (let t = 0, n = e.length; t < n; t++) {
            let n = e[t],
              a = n.name.match(i);
            if (a && a.length > 1) {
              let e = a[1],
                t = r[e];
              t || (r[e] = t = []), t.push(n);
            }
          }
          let a = [];
          for (let e in r)
            a.push(this.CreateFromMorphTargetSequence(e, r[e], t, n));
          return a;
        }
        static parseAnimation(e, t) {
          if (!e)
            return (
              console.error(
                `THREE.AnimationClip: No animation in JSONLoader data.`
              ),
              null
            );
          let n = function (e, t, n, r, i) {
              if (n.length !== 0) {
                let a = [],
                  o = [];
                gm.flattenJSON(n, a, o, r),
                  a.length !== 0 && i.push(new e(t, a, o));
              }
            },
            r = [],
            i = e.name || `default`,
            a = e.fps || 30,
            o = e.blendMode,
            s = e.length || -1,
            c = e.hierarchy || [];
          for (let e = 0; e < c.length; e++) {
            let i = c[e].keys;
            if (i && i.length !== 0)
              if (i[0].morphTargets) {
                let e = {},
                  t;
                for (t = 0; t < i.length; t++)
                  if (i[t].morphTargets)
                    for (let n = 0; n < i[t].morphTargets.length; n++)
                      e[i[t].morphTargets[n]] = -1;
                for (let n in e) {
                  let e = [],
                    a = [];
                  for (let r = 0; r !== i[t].morphTargets.length; ++r) {
                    let r = i[t];
                    e.push(r.time), a.push(r.morphTarget === n ? 1 : 0);
                  }
                  r.push(new wm(`.morphTargetInfluence[` + n + `]`, e, a));
                }
                s = e.length * (a || 1);
              } else {
                let a = `.bones[` + t[e].name + `]`;
                n(Om, a + `.position`, i, `pos`, r),
                  n(Em, a + `.quaternion`, i, `rot`, r),
                  n(Om, a + `.scale`, i, `scl`, r);
              }
          }
          return r.length === 0 ? null : new this(i, s, r, o);
        }
        resetDuration() {
          let e = this.tracks,
            t = 0;
          for (let n = 0, r = e.length; n !== r; ++n) {
            let e = this.tracks[n];
            t = Math.max(t, e.times[e.times.length - 1]);
          }
          return (this.duration = t), this;
        }
        trim() {
          for (let e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
          return this;
        }
        validate() {
          let e = !0;
          for (let t = 0; t < this.tracks.length; t++)
            e &&= this.tracks[t].validate();
          return e;
        }
        optimize() {
          for (let e = 0; e < this.tracks.length; e++)
            this.tracks[e].optimize();
          return this;
        }
        clone() {
          let e = [];
          for (let t = 0; t < this.tracks.length; t++)
            e.push(this.tracks[t].clone());
          return new this.constructor(
            this.name,
            this.duration,
            e,
            this.blendMode
          );
        }
        toJSON() {
          return this.constructor.toJSON(this);
        }
      }),
      (Am = {
        enabled: !1,
        files: {},
        add: function (e, t) {
          !1 !== this.enabled && (this.files[e] = t);
        },
        get: function (e) {
          if (!1 !== this.enabled) return this.files[e];
        },
        remove: function (e) {
          delete this.files[e];
        },
        clear: function () {
          this.files = {};
        },
      }),
      (jm = class {
        constructor(e, t, n) {
          let r = this,
            i = !1,
            a = 0,
            o = 0,
            s,
            c = [];
          (this.onStart = void 0),
            (this.onLoad = e),
            (this.onProgress = t),
            (this.onError = n),
            (this.itemStart = function (e) {
              o++,
                !1 === i && r.onStart !== void 0 && r.onStart(e, a, o),
                (i = !0);
            }),
            (this.itemEnd = function (e) {
              a++,
                r.onProgress !== void 0 && r.onProgress(e, a, o),
                a === o && ((i = !1), r.onLoad !== void 0 && r.onLoad());
            }),
            (this.itemError = function (e) {
              r.onError !== void 0 && r.onError(e);
            }),
            (this.resolveURL = function (e) {
              return s ? s(e) : e;
            }),
            (this.setURLModifier = function (e) {
              return (s = e), this;
            }),
            (this.addHandler = function (e, t) {
              return c.push(e, t), this;
            }),
            (this.removeHandler = function (e) {
              let t = c.indexOf(e);
              return t !== -1 && c.splice(t, 2), this;
            }),
            (this.getHandler = function (e) {
              for (let t = 0, n = c.length; t < n; t += 2) {
                let n = c[t],
                  r = c[t + 1];
                if ((n.global && (n.lastIndex = 0), n.test(e))) return r;
              }
              return null;
            });
        }
      }),
      (Mm = new jm()),
      (Nm = class {
        constructor(e) {
          (this.manager = e === void 0 ? Mm : e),
            (this.crossOrigin = `anonymous`),
            (this.withCredentials = !1),
            (this.path = ``),
            (this.resourcePath = ``),
            (this.requestHeader = {});
        }
        load() {}
        loadAsync(e, t) {
          let n = this;
          return new Promise(function (r, i) {
            n.load(e, r, t, i);
          });
        }
        parse() {}
        setCrossOrigin(e) {
          return (this.crossOrigin = e), this;
        }
        setWithCredentials(e) {
          return (this.withCredentials = e), this;
        }
        setPath(e) {
          return (this.path = e), this;
        }
        setResourcePath(e) {
          return (this.resourcePath = e), this;
        }
        setRequestHeader(e) {
          return (this.requestHeader = e), this;
        }
      }),
      (Pm = {}),
      (Fm = class extends Nm {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          e === void 0 && (e = ``),
            this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = Am.get(e);
          if (i !== void 0)
            return (
              this.manager.itemStart(e),
              setTimeout(() => {
                t && t(i), this.manager.itemEnd(e);
              }, 0),
              i
            );
          if (Pm[e] !== void 0) {
            Pm[e].push({ onLoad: t, onProgress: n, onError: r });
            return;
          }
          (Pm[e] = []), Pm[e].push({ onLoad: t, onProgress: n, onError: r });
          let a = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? `include` : `same-origin`,
          });
          fetch(a)
            .then((t) => {
              if (t.status === 200 || t.status === 0) {
                if (
                  (t.status === 0 &&
                    console.warn(`THREE.FileLoader: HTTP Status 0 received.`),
                  typeof ReadableStream > `u` || t.body.getReader === void 0)
                )
                  return t;
                let n = Pm[e],
                  r = t.body.getReader(),
                  i = t.headers.get(`Content-Length`),
                  a = i ? parseInt(i) : 0,
                  o = a !== 0,
                  s = 0,
                  c = new ReadableStream({
                    start(e) {
                      t();
                      function t() {
                        r.read().then(({ done: r, value: i }) => {
                          if (r) e.close();
                          else {
                            s += i.byteLength;
                            let r = new ProgressEvent(`progress`, {
                              lengthComputable: o,
                              loaded: s,
                              total: a,
                            });
                            for (let e = 0, t = n.length; e < t; e++) {
                              let t = n[e];
                              t.onProgress && t.onProgress(r);
                            }
                            e.enqueue(i), t();
                          }
                        });
                      }
                    },
                  });
                return new Response(c);
              }
              throw Error(
                `fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`
              );
            })
            .then((e) => {
              switch (this.responseType) {
                case `arraybuffer`:
                  return e.arrayBuffer();
                case `blob`:
                  return e.blob();
                case `document`:
                  return e
                    .text()
                    .then((e) =>
                      new DOMParser().parseFromString(e, this.mimeType)
                    );
                case `json`:
                  return e.json();
                default:
                  return e.text();
              }
            })
            .then((t) => {
              Am.add(e, t);
              let n = Pm[e];
              delete Pm[e];
              for (let e = 0, r = n.length; e < r; e++) {
                let r = n[e];
                r.onLoad && r.onLoad(t);
              }
            })
            .catch((t) => {
              let n = Pm[e];
              if (n === void 0) throw (this.manager.itemError(e), t);
              delete Pm[e];
              for (let e = 0, r = n.length; e < r; e++) {
                let r = n[e];
                r.onError && r.onError(t);
              }
              this.manager.itemError(e);
            })
            .finally(() => {
              this.manager.itemEnd(e);
            }),
            this.manager.itemStart(e);
        }
        setResponseType(e) {
          return (this.responseType = e), this;
        }
        setMimeType(e) {
          return (this.mimeType = e), this;
        }
      }),
      (Im = class extends Nm {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = this,
            a = Am.get(e);
          if (a !== void 0)
            return (
              i.manager.itemStart(e),
              setTimeout(function () {
                t && t(a), i.manager.itemEnd(e);
              }, 0),
              a
            );
          let o = En(`img`);
          function s() {
            l(), Am.add(e, this), t && t(this), i.manager.itemEnd(e);
          }
          function c(t) {
            l(), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
          }
          function l() {
            o.removeEventListener(`load`, s, !1),
              o.removeEventListener(`error`, c, !1);
          }
          return (
            o.addEventListener(`load`, s, !1),
            o.addEventListener(`error`, c, !1),
            e.substr(0, 5) !== `data:` &&
              this.crossOrigin !== void 0 &&
              (o.crossOrigin = this.crossOrigin),
            i.manager.itemStart(e),
            (o.src = e),
            o
          );
        }
      }),
      (Lm = class extends Nm {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          let i = new od(),
            a = new Im(this.manager);
          a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
          let o = 0;
          function s(n) {
            a.load(
              e[n],
              function (e) {
                (i.images[n] = e),
                  o++,
                  o === 6 && ((i.needsUpdate = !0), t && t(i));
              },
              void 0,
              r
            );
          }
          for (let t = 0; t < e.length; ++t) s(t);
          return i;
        }
      }),
      (Rm = class extends Nm {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          let i = new Yc(),
            a = new Im(this.manager);
          return (
            a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path),
            a.load(
              e,
              function (e) {
                (i.image = e), (i.needsUpdate = !0), t !== void 0 && t(i);
              },
              n,
              r
            ),
            i
          );
        }
      }),
      (zm = class extends eu {
        constructor(e, t = 1) {
          super(),
            (this.type = `Light`),
            (this.color = new X(e)),
            (this.intensity = t);
        }
        dispose() {}
        copy(e) {
          return (
            super.copy(e),
            this.color.copy(e.color),
            (this.intensity = e.intensity),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.color = this.color.getHex()),
            (t.object.intensity = this.intensity),
            this.groundColor !== void 0 &&
              (t.object.groundColor = this.groundColor.getHex()),
            this.distance !== void 0 && (t.object.distance = this.distance),
            this.angle !== void 0 && (t.object.angle = this.angle),
            this.decay !== void 0 && (t.object.decay = this.decay),
            this.penumbra !== void 0 && (t.object.penumbra = this.penumbra),
            this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()),
            t
          );
        }
      }),
      (zm.prototype.isLight = !0),
      (Bm = class extends zm {
        constructor(e, t, n) {
          super(e, n),
            (this.type = `HemisphereLight`),
            this.position.copy(eu.DefaultUp),
            this.updateMatrix(),
            (this.groundColor = new X(t));
        }
        copy(e) {
          return (
            zm.prototype.copy.call(this, e),
            this.groundColor.copy(e.groundColor),
            this
          );
        }
      }),
      (Bm.prototype.isHemisphereLight = !0),
      (Vm = new Y()),
      (Hm = new J()),
      (Um = new J()),
      (Wm = class {
        constructor(e) {
          (this.camera = e),
            (this.bias = 0),
            (this.normalBias = 0),
            (this.radius = 1),
            (this.blurSamples = 8),
            (this.mapSize = new q(512, 512)),
            (this.map = null),
            (this.mapPass = null),
            (this.matrix = new Y()),
            (this.autoUpdate = !0),
            (this.needsUpdate = !1),
            (this._frustum = new md()),
            (this._frameExtents = new q(1, 1)),
            (this._viewportCount = 1),
            (this._viewports = [new Xc(0, 0, 1, 1)]);
        }
        getViewportCount() {
          return this._viewportCount;
        }
        getFrustum() {
          return this._frustum;
        }
        updateMatrices(e) {
          let t = this.camera,
            n = this.matrix;
          Hm.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(Hm),
            Um.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(Um),
            t.updateMatrixWorld(),
            Vm.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(Vm),
            n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
            n.multiply(t.projectionMatrix),
            n.multiply(t.matrixWorldInverse);
        }
        getViewport(e) {
          return this._viewports[e];
        }
        getFrameExtents() {
          return this._frameExtents;
        }
        dispose() {
          this.map && this.map.dispose(),
            this.mapPass && this.mapPass.dispose();
        }
        copy(e) {
          return (
            (this.camera = e.camera.clone()),
            (this.bias = e.bias),
            (this.radius = e.radius),
            this.mapSize.copy(e.mapSize),
            this
          );
        }
        clone() {
          return new this.constructor().copy(this);
        }
        toJSON() {
          let e = {};
          return (
            this.bias !== 0 && (e.bias = this.bias),
            this.normalBias !== 0 && (e.normalBias = this.normalBias),
            this.radius !== 1 && (e.radius = this.radius),
            (this.mapSize.x === 512 && this.mapSize.y === 512) ||
              (e.mapSize = this.mapSize.toArray()),
            (e.camera = this.camera.toJSON(!1).object),
            delete e.camera.matrix,
            e
          );
        }
      }),
      (Gm = class extends Wm {
        constructor() {
          super(new nd(50, 1, 0.5, 500)), (this.focus = 1);
        }
        updateMatrices(e) {
          let t = this.camera,
            n = 2 * Wc * e.angle * this.focus,
            r = this.mapSize.width / this.mapSize.height,
            i = e.distance || t.far;
          (n !== t.fov || r !== t.aspect || i !== t.far) &&
            ((t.fov = n),
            (t.aspect = r),
            (t.far = i),
            t.updateProjectionMatrix()),
            super.updateMatrices(e);
        }
        copy(e) {
          return super.copy(e), (this.focus = e.focus), this;
        }
      }),
      (Gm.prototype.isSpotLightShadow = !0),
      (Km = class extends zm {
        constructor(e, t, n = 0, r = Math.PI / 3, i = 0, a = 1) {
          super(e, t),
            (this.type = `SpotLight`),
            this.position.copy(eu.DefaultUp),
            this.updateMatrix(),
            (this.target = new eu()),
            (this.distance = n),
            (this.angle = r),
            (this.penumbra = i),
            (this.decay = a),
            (this.shadow = new Gm());
        }
        get power() {
          return this.intensity * Math.PI;
        }
        set power(e) {
          this.intensity = e / Math.PI;
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.distance = e.distance),
            (this.angle = e.angle),
            (this.penumbra = e.penumbra),
            (this.decay = e.decay),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }),
      (Km.prototype.isSpotLight = !0),
      (qm = new Y()),
      (Jm = new J()),
      (Ym = new J()),
      (Xm = class extends Wm {
        constructor() {
          super(new nd(90, 1, 0.5, 500)),
            (this._frameExtents = new q(4, 2)),
            (this._viewportCount = 6),
            (this._viewports = [
              new Xc(2, 1, 1, 1),
              new Xc(0, 1, 1, 1),
              new Xc(3, 1, 1, 1),
              new Xc(1, 1, 1, 1),
              new Xc(3, 0, 1, 1),
              new Xc(1, 0, 1, 1),
            ]),
            (this._cubeDirections = [
              new J(1, 0, 0),
              new J(-1, 0, 0),
              new J(0, 0, 1),
              new J(0, 0, -1),
              new J(0, 1, 0),
              new J(0, -1, 0),
            ]),
            (this._cubeUps = [
              new J(0, 1, 0),
              new J(0, 1, 0),
              new J(0, 1, 0),
              new J(0, 1, 0),
              new J(0, 0, 1),
              new J(0, 0, -1),
            ]);
        }
        updateMatrices(e, t = 0) {
          let n = this.camera,
            r = this.matrix,
            i = e.distance || n.far;
          i !== n.far && ((n.far = i), n.updateProjectionMatrix()),
            Jm.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(Jm),
            Ym.copy(n.position),
            Ym.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(Ym),
            n.updateMatrixWorld(),
            r.makeTranslation(-Jm.x, -Jm.y, -Jm.z),
            qm.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(qm);
        }
      }),
      (Xm.prototype.isPointLightShadow = !0),
      (Zm = class extends zm {
        constructor(e, t, n = 0, r = 1) {
          super(e, t),
            (this.type = `PointLight`),
            (this.distance = n),
            (this.decay = r),
            (this.shadow = new Xm());
        }
        get power() {
          return 4 * this.intensity * Math.PI;
        }
        set power(e) {
          this.intensity = e / (4 * Math.PI);
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.distance = e.distance),
            (this.decay = e.decay),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }),
      (Zm.prototype.isPointLight = !0),
      (Qm = class extends Wm {
        constructor() {
          super(new _d(-5, 5, 5, -5, 0.5, 500));
        }
      }),
      (Qm.prototype.isDirectionalLightShadow = !0),
      ($m = class extends zm {
        constructor(e, t) {
          super(e, t),
            (this.type = `DirectionalLight`),
            this.position.copy(eu.DefaultUp),
            this.updateMatrix(),
            (this.target = new eu()),
            (this.shadow = new Qm());
        }
        dispose() {
          this.shadow.dispose();
        }
        copy(e) {
          return (
            super.copy(e),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        }
      }),
      ($m.prototype.isDirectionalLight = !0),
      (eh = class extends zm {
        constructor(e, t) {
          super(e, t), (this.type = `AmbientLight`);
        }
      }),
      (eh.prototype.isAmbientLight = !0),
      (th = class extends zm {
        constructor(e, t, n = 10, r = 10) {
          super(e, t),
            (this.type = `RectAreaLight`),
            (this.width = n),
            (this.height = r);
        }
        get power() {
          return this.intensity * this.width * this.height * Math.PI;
        }
        set power(e) {
          this.intensity = e / (this.width * this.height * Math.PI);
        }
        copy(e) {
          return (
            super.copy(e),
            (this.width = e.width),
            (this.height = e.height),
            this
          );
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.object.width = this.width), (t.object.height = this.height), t
          );
        }
      }),
      (th.prototype.isRectAreaLight = !0),
      (nh = class {
        constructor() {
          this.coefficients = [];
          for (let e = 0; e < 9; e++) this.coefficients.push(new J());
        }
        set(e) {
          for (let t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
          return this;
        }
        zero() {
          for (let e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
          return this;
        }
        getAt(e, t) {
          let n = e.x,
            r = e.y,
            i = e.z,
            a = this.coefficients;
          return (
            t.copy(a[0]).multiplyScalar(0.282095),
            t.addScaledVector(a[1], 0.488603 * r),
            t.addScaledVector(a[2], 0.488603 * i),
            t.addScaledVector(a[3], 0.488603 * n),
            t.addScaledVector(a[4], n * r * 1.092548),
            t.addScaledVector(a[5], r * i * 1.092548),
            t.addScaledVector(a[6], 0.315392 * (3 * i * i - 1)),
            t.addScaledVector(a[7], n * i * 1.092548),
            t.addScaledVector(a[8], 0.546274 * (n * n - r * r)),
            t
          );
        }
        getIrradianceAt(e, t) {
          let n = e.x,
            r = e.y,
            i = e.z,
            a = this.coefficients;
          return (
            t.copy(a[0]).multiplyScalar(0.886227),
            t.addScaledVector(a[1], 1.023328 * r),
            t.addScaledVector(a[2], 1.023328 * i),
            t.addScaledVector(a[3], 1.023328 * n),
            t.addScaledVector(a[4], 0.858086 * n * r),
            t.addScaledVector(a[5], 0.858086 * r * i),
            t.addScaledVector(a[6], 0.743125 * i * i - 0.247708),
            t.addScaledVector(a[7], 0.858086 * n * i),
            t.addScaledVector(a[8], 0.429043 * (n * n - r * r)),
            t
          );
        }
        add(e) {
          for (let t = 0; t < 9; t++)
            this.coefficients[t].add(e.coefficients[t]);
          return this;
        }
        addScaledSH(e, t) {
          for (let n = 0; n < 9; n++)
            this.coefficients[n].addScaledVector(e.coefficients[n], t);
          return this;
        }
        scale(e) {
          for (let t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
          return this;
        }
        lerp(e, t) {
          for (let n = 0; n < 9; n++)
            this.coefficients[n].lerp(e.coefficients[n], t);
          return this;
        }
        equals(e) {
          for (let t = 0; t < 9; t++)
            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
          return !0;
        }
        copy(e) {
          return this.set(e.coefficients);
        }
        clone() {
          return new this.constructor().copy(this);
        }
        fromArray(e, t = 0) {
          let n = this.coefficients;
          for (let r = 0; r < 9; r++) n[r].fromArray(e, t + 3 * r);
          return this;
        }
        toArray(e = [], t = 0) {
          let n = this.coefficients;
          for (let r = 0; r < 9; r++) n[r].toArray(e, t + 3 * r);
          return e;
        }
        static getBasisAt(e, t) {
          let n = e.x,
            r = e.y,
            i = e.z;
          (t[0] = 0.282095),
            (t[1] = 0.488603 * r),
            (t[2] = 0.488603 * i),
            (t[3] = 0.488603 * n),
            (t[4] = 1.092548 * n * r),
            (t[5] = 1.092548 * r * i),
            (t[6] = 0.315392 * (3 * i * i - 1)),
            (t[7] = 1.092548 * n * i),
            (t[8] = 0.546274 * (n * n - r * r));
        }
      }),
      (nh.prototype.isSphericalHarmonics3 = !0),
      (rh = class extends zm {
        constructor(e = new nh(), t = 1) {
          super(void 0, t), (this.sh = e);
        }
        copy(e) {
          return super.copy(e), this.sh.copy(e.sh), this;
        }
        fromJSON(e) {
          return (this.intensity = e.intensity), this.sh.fromArray(e.sh), this;
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (t.object.sh = this.sh.toArray()), t;
        }
      }),
      (rh.prototype.isLightProbe = !0),
      (ih = class {
        static decodeText(e) {
          if (typeof TextDecoder < `u`) return new TextDecoder().decode(e);
          let t = ``;
          for (let n = 0, r = e.length; n < r; n++)
            t += String.fromCharCode(e[n]);
          try {
            return decodeURIComponent(escape(t));
          } catch {
            return t;
          }
        }
        static extractUrlBase(e) {
          let t = e.lastIndexOf(`/`);
          return t === -1 ? `./` : e.substr(0, t + 1);
        }
        static resolveURL(e, t) {
          return typeof e != `string` || e === ``
            ? ``
            : (/^https?:\/\//i.test(t) &&
                /^\//.test(e) &&
                (t = t.replace(/(^https?:\/\/[^\/]+).*/i, `$1`)),
              /^(https?:)?\/\//i.test(e) ||
              /^data:.*,.*$/i.test(e) ||
              /^blob:.*$/i.test(e)
                ? e
                : t + e);
        }
      }),
      (ah = class extends ju {
        constructor() {
          super(),
            (this.type = `InstancedBufferGeometry`),
            (this.instanceCount = 1 / 0);
        }
        copy(e) {
          return super.copy(e), (this.instanceCount = e.instanceCount), this;
        }
        clone() {
          return new this.constructor().copy(this);
        }
        toJSON() {
          let e = super.toJSON(this);
          return (
            (e.instanceCount = this.instanceCount),
            (e.isInstancedBufferGeometry = !0),
            e
          );
        }
      }),
      (ah.prototype.isInstancedBufferGeometry = !0),
      (oh = class extends Nm {
        constructor(e) {
          super(e),
            typeof createImageBitmap > `u` &&
              console.warn(
                `THREE.ImageBitmapLoader: createImageBitmap() not supported.`
              ),
            typeof fetch > `u` &&
              console.warn(`THREE.ImageBitmapLoader: fetch() not supported.`),
            (this.options = { premultiplyAlpha: `none` });
        }
        setOptions(e) {
          return (this.options = e), this;
        }
        load(e, t, n, r) {
          e === void 0 && (e = ``),
            this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          let i = this,
            a = Am.get(e);
          if (a !== void 0)
            return (
              i.manager.itemStart(e),
              setTimeout(function () {
                t && t(a), i.manager.itemEnd(e);
              }, 0),
              a
            );
          let o = {};
          (o.credentials =
            this.crossOrigin === `anonymous` ? `same-origin` : `include`),
            (o.headers = this.requestHeader),
            fetch(e, o)
              .then(function (e) {
                return e.blob();
              })
              .then(function (e) {
                return createImageBitmap(
                  e,
                  Object.assign(i.options, { colorSpaceConversion: `none` })
                );
              })
              .then(function (n) {
                Am.add(e, n), t && t(n), i.manager.itemEnd(e);
              })
              .catch(function (t) {
                r && r(t), i.manager.itemError(e), i.manager.itemEnd(e);
              }),
            i.manager.itemStart(e);
        }
      }),
      (oh.prototype.isImageBitmapLoader = !0),
      (ch = {
        getContext: function () {
          return (
            sh === void 0 &&
              (sh = new (v.AudioContext || v.webkitAudioContext)()),
            sh
          );
        },
        setContext: function (e) {
          sh = e;
        },
      }),
      (lh = class extends Nm {
        constructor(e) {
          super(e);
        }
        load(e, t, n, r) {
          let i = this,
            a = new Fm(this.manager);
          a.setResponseType(`arraybuffer`),
            a.setPath(this.path),
            a.setRequestHeader(this.requestHeader),
            a.setWithCredentials(this.withCredentials),
            a.load(
              e,
              function (n) {
                try {
                  let e = n.slice(0);
                  ch.getContext().decodeAudioData(e, function (e) {
                    t(e);
                  });
                } catch (t) {
                  r ? r(t) : console.error(t), i.manager.itemError(e);
                }
              },
              n,
              r
            );
        }
      }),
      (uh = class extends rh {
        constructor(e, t, n = 1) {
          super(void 0, n);
          let r = new X().set(e),
            i = new X().set(t),
            a = new J(r.r, r.g, r.b),
            o = new J(i.r, i.g, i.b),
            s = Math.sqrt(Math.PI),
            c = s * Math.sqrt(0.75);
          this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),
            this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c);
        }
      }),
      (uh.prototype.isHemisphereLightProbe = !0),
      (dh = class extends rh {
        constructor(e, t = 1) {
          super(void 0, t);
          let n = new X().set(e);
          this.sh.coefficients[0]
            .set(n.r, n.g, n.b)
            .multiplyScalar(2 * Math.sqrt(Math.PI));
        }
      }),
      (dh.prototype.isAmbientLightProbe = !0),
      new Y(),
      new Y(),
      new Y(),
      new J(),
      new el(),
      new J(),
      new J(),
      (fh = class extends eu {
        constructor(e) {
          super(),
            (this.type = `Audio`),
            (this.listener = e),
            (this.context = e.context),
            (this.gain = this.context.createGain()),
            this.gain.connect(e.getInput()),
            (this.autoplay = !1),
            (this.buffer = null),
            (this.detune = 0),
            (this.loop = !1),
            (this.loopStart = 0),
            (this.loopEnd = 0),
            (this.offset = 0),
            (this.duration = void 0),
            (this.playbackRate = 1),
            (this.isPlaying = !1),
            (this.hasPlaybackControl = !0),
            (this.source = null),
            (this.sourceType = `empty`),
            (this._startedAt = 0),
            (this._progress = 0),
            (this._connected = !1),
            (this.filters = []);
        }
        getOutput() {
          return this.gain;
        }
        setNodeSource(e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = `audioNode`),
            (this.source = e),
            this.connect(),
            this
          );
        }
        setMediaElementSource(e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = `mediaNode`),
            (this.source = this.context.createMediaElementSource(e)),
            this.connect(),
            this
          );
        }
        setMediaStreamSource(e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = `mediaStreamNode`),
            (this.source = this.context.createMediaStreamSource(e)),
            this.connect(),
            this
          );
        }
        setBuffer(e) {
          return (
            (this.buffer = e),
            (this.sourceType = `buffer`),
            this.autoplay && this.play(),
            this
          );
        }
        play(e = 0) {
          if (!0 === this.isPlaying) {
            console.warn(`THREE.Audio: Audio is already playing.`);
            return;
          }
          if (!1 === this.hasPlaybackControl) {
            console.warn(`THREE.Audio: this Audio has no playback control.`);
            return;
          }
          this._startedAt = this.context.currentTime + e;
          let t = this.context.createBufferSource();
          return (
            (t.buffer = this.buffer),
            (t.loop = this.loop),
            (t.loopStart = this.loopStart),
            (t.loopEnd = this.loopEnd),
            (t.onended = this.onEnded.bind(this)),
            t.start(
              this._startedAt,
              this._progress + this.offset,
              this.duration
            ),
            (this.isPlaying = !0),
            (this.source = t),
            this.setDetune(this.detune),
            this.setPlaybackRate(this.playbackRate),
            this.connect()
          );
        }
        pause() {
          if (!1 !== this.hasPlaybackControl)
            return (
              !0 === this.isPlaying &&
                ((this._progress +=
                  Math.max(this.context.currentTime - this._startedAt, 0) *
                  this.playbackRate),
                !0 === this.loop &&
                  (this._progress %= this.duration || this.buffer.duration),
                this.source.stop(),
                (this.source.onended = null),
                (this.isPlaying = !1)),
              this
            );
          console.warn(`THREE.Audio: this Audio has no playback control.`);
        }
        stop() {
          if (!1 !== this.hasPlaybackControl)
            return (
              (this._progress = 0),
              this.source.stop(),
              (this.source.onended = null),
              (this.isPlaying = !1),
              this
            );
          console.warn(`THREE.Audio: this Audio has no playback control.`);
        }
        connect() {
          if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (let e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
          } else this.source.connect(this.getOutput());
          return (this._connected = !0), this;
        }
        disconnect() {
          if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for (let e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
          } else this.source.disconnect(this.getOutput());
          return (this._connected = !1), this;
        }
        getFilters() {
          return this.filters;
        }
        setFilters(e) {
          return (
            (e ||= []),
            !0 === this._connected
              ? (this.disconnect(), (this.filters = e.slice()), this.connect())
              : (this.filters = e.slice()),
            this
          );
        }
        setDetune(e) {
          if (((this.detune = e), this.source.detune !== void 0))
            return (
              !0 === this.isPlaying &&
                this.source.detune.setTargetAtTime(
                  this.detune,
                  this.context.currentTime,
                  0.01
                ),
              this
            );
        }
        getDetune() {
          return this.detune;
        }
        getFilter() {
          return this.getFilters()[0];
        }
        setFilter(e) {
          return this.setFilters(e ? [e] : []);
        }
        setPlaybackRate(e) {
          if (!1 !== this.hasPlaybackControl)
            return (
              (this.playbackRate = e),
              !0 === this.isPlaying &&
                this.source.playbackRate.setTargetAtTime(
                  this.playbackRate,
                  this.context.currentTime,
                  0.01
                ),
              this
            );
          console.warn(`THREE.Audio: this Audio has no playback control.`);
        }
        getPlaybackRate() {
          return this.playbackRate;
        }
        onEnded() {
          this.isPlaying = !1;
        }
        getLoop() {
          return !1 === this.hasPlaybackControl
            ? (console.warn(`THREE.Audio: this Audio has no playback control.`),
              !1)
            : this.loop;
        }
        setLoop(e) {
          if (!1 !== this.hasPlaybackControl)
            return (
              (this.loop = e),
              !0 === this.isPlaying && (this.source.loop = this.loop),
              this
            );
          console.warn(`THREE.Audio: this Audio has no playback control.`);
        }
        setLoopStart(e) {
          return (this.loopStart = e), this;
        }
        setLoopEnd(e) {
          return (this.loopEnd = e), this;
        }
        getVolume() {
          return this.gain.gain.value;
        }
        setVolume(e) {
          return (
            this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01),
            this
          );
        }
      }),
      new J(),
      new el(),
      new J(),
      new J(),
      (ph = class {
        constructor(e, t = 2048) {
          (this.analyser = e.context.createAnalyser()),
            (this.analyser.fftSize = t),
            (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
            e.getOutput().connect(this.analyser);
        }
        getFrequencyData() {
          return this.analyser.getByteFrequencyData(this.data), this.data;
        }
        getAverageFrequency() {
          let e = 0,
            t = this.getFrequencyData();
          for (let n = 0; n < t.length; n++) e += t[n];
          return e / t.length;
        }
      }),
      (mh = class {
        constructor(e, t, n) {
          (this.binding = e), (this.valueSize = n);
          let r, i, a;
          switch (t) {
            case `quaternion`:
              (r = this._slerp),
                (i = this._slerpAdditive),
                (a = this._setAdditiveIdentityQuaternion),
                (this.buffer = new Float64Array(6 * n)),
                (this._workIndex = 5);
              break;
            case `string`:
            case `bool`:
              (r = this._select),
                (i = this._select),
                (a = this._setAdditiveIdentityOther),
                (this.buffer = Array(5 * n));
              break;
            default:
              (r = this._lerp),
                (i = this._lerpAdditive),
                (a = this._setAdditiveIdentityNumeric),
                (this.buffer = new Float64Array(5 * n));
          }
          (this._mixBufferRegion = r),
            (this._mixBufferRegionAdditive = i),
            (this._setIdentity = a),
            (this._origIndex = 3),
            (this._addIndex = 4),
            (this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0),
            (this.useCount = 0),
            (this.referenceCount = 0);
        }
        accumulate(e, t) {
          let n = this.buffer,
            r = this.valueSize,
            i = e * r + r,
            a = this.cumulativeWeight;
          if (a === 0) {
            for (let e = 0; e !== r; ++e) n[i + e] = n[e];
            a = t;
          } else {
            a += t;
            let e = t / a;
            this._mixBufferRegion(n, i, 0, e, r);
          }
          this.cumulativeWeight = a;
        }
        accumulateAdditive(e) {
          let t = this.buffer,
            n = this.valueSize,
            r = n * this._addIndex;
          this.cumulativeWeightAdditive === 0 && this._setIdentity(),
            this._mixBufferRegionAdditive(t, r, 0, e, n),
            (this.cumulativeWeightAdditive += e);
        }
        apply(e) {
          let t = this.valueSize,
            n = this.buffer,
            r = e * t + t,
            i = this.cumulativeWeight,
            a = this.cumulativeWeightAdditive,
            o = this.binding;
          if (
            ((this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0),
            i < 1)
          ) {
            let e = t * this._origIndex;
            this._mixBufferRegion(n, r, e, 1 - i, t);
          }
          a > 0 &&
            this._mixBufferRegionAdditive(n, r, this._addIndex * t, 1, t);
          for (let e = t, i = t + t; e !== i; ++e)
            if (n[e] !== n[e + t]) {
              o.setValue(n, r);
              break;
            }
        }
        saveOriginalState() {
          let e = this.binding,
            t = this.buffer,
            n = this.valueSize,
            r = n * this._origIndex;
          e.getValue(t, r);
          for (let e = n, i = r; e !== i; ++e) t[e] = t[r + (e % n)];
          this._setIdentity(),
            (this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0);
        }
        restoreOriginalState() {
          let e = 3 * this.valueSize;
          this.binding.setValue(this.buffer, e);
        }
        _setAdditiveIdentityNumeric() {
          let e = this._addIndex * this.valueSize,
            t = e + this.valueSize;
          for (let n = e; n < t; n++) this.buffer[n] = 0;
        }
        _setAdditiveIdentityQuaternion() {
          this._setAdditiveIdentityNumeric(),
            (this.buffer[this._addIndex * this.valueSize + 3] = 1);
        }
        _setAdditiveIdentityOther() {
          let e = this._origIndex * this.valueSize,
            t = this._addIndex * this.valueSize;
          for (let n = 0; n < this.valueSize; n++)
            this.buffer[t + n] = this.buffer[e + n];
        }
        _select(e, t, n, r, i) {
          if (r >= 0.5) for (let r = 0; r !== i; ++r) e[t + r] = e[n + r];
        }
        _slerp(e, t, n, r) {
          el.slerpFlat(e, t, e, t, e, n, r);
        }
        _slerpAdditive(e, t, n, r, i) {
          let a = this._workIndex * i;
          el.multiplyQuaternionsFlat(e, a, e, t, e, n),
            el.slerpFlat(e, t, e, t, e, a, r);
        }
        _lerp(e, t, n, r, i) {
          let a = 1 - r;
          for (let o = 0; o !== i; ++o) {
            let i = t + o;
            e[i] = e[i] * a + e[n + o] * r;
          }
        }
        _lerpAdditive(e, t, n, r, i) {
          for (let a = 0; a !== i; ++a) {
            let i = t + a;
            e[i] = e[i] + e[n + a] * r;
          }
        }
      }),
      (hh = `\\[\\]\\.:\\/`),
      (gh = RegExp(`[` + hh + `]`, `g`)),
      (_h = `[^` + hh + `]`),
      (vh = `[^` + hh.replace(`\\.`, ``) + `]`),
      (yh = `((?:WC+[\\/:])*)`.replace(`WC`, _h)),
      (bh = `(WCOD+)?`.replace(`WCOD`, vh)),
      (xh = `(?:\\.(WC+)(?:\\[(.+)\\])?)?`.replace(`WC`, _h)),
      (Sh = `\\.(WC+)(?:\\[(.+)\\])?`.replace(`WC`, _h)),
      (Ch = RegExp(`^` + yh + bh + xh + Sh + `$`)),
      (wh = [`material`, `materials`, `bones`]),
      (Th = class {
        constructor(e, t, n) {
          let r = n || Eh.parseTrackName(t);
          (this._targetGroup = e), (this._bindings = e.subscribe_(t, r));
        }
        getValue(e, t) {
          this.bind();
          let n = this._targetGroup.nCachedObjects_,
            r = this._bindings[n];
          r !== void 0 && r.getValue(e, t);
        }
        setValue(e, t) {
          let n = this._bindings;
          for (
            let r = this._targetGroup.nCachedObjects_, i = n.length;
            r !== i;
            ++r
          )
            n[r].setValue(e, t);
        }
        bind() {
          let e = this._bindings;
          for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
          )
            e[t].bind();
        }
        unbind() {
          let e = this._bindings;
          for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
          )
            e[t].unbind();
        }
      }),
      (Eh = class e {
        constructor(t, n, r) {
          (this.path = n),
            (this.parsedPath = r || e.parseTrackName(n)),
            (this.node = e.findNode(t, this.parsedPath.nodeName) || t),
            (this.rootNode = t),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        }
        static create(t, n, r) {
          return t && t.isAnimationObjectGroup
            ? new e.Composite(t, n, r)
            : new e(t, n, r);
        }
        static sanitizeNodeName(e) {
          return e.replace(/\s/g, `_`).replace(gh, ``);
        }
        static parseTrackName(e) {
          let t = Ch.exec(e);
          if (!t) throw Error(`PropertyBinding: Cannot parse trackName: ` + e);
          let n = {
              nodeName: t[2],
              objectName: t[3],
              objectIndex: t[4],
              propertyName: t[5],
              propertyIndex: t[6],
            },
            r = n.nodeName && n.nodeName.lastIndexOf(`.`);
          if (r !== void 0 && r !== -1) {
            let e = n.nodeName.substring(r + 1);
            wh.indexOf(e) !== -1 &&
              ((n.nodeName = n.nodeName.substring(0, r)), (n.objectName = e));
          }
          if (n.propertyName === null || n.propertyName.length === 0)
            throw Error(
              `PropertyBinding: can not parse propertyName from trackName: ` + e
            );
          return n;
        }
        static findNode(e, t) {
          if (
            !t ||
            t === `` ||
            t === `.` ||
            t === -1 ||
            t === e.name ||
            t === e.uuid
          )
            return e;
          if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
          }
          if (e.children) {
            let n = function (e) {
                for (let r = 0; r < e.length; r++) {
                  let i = e[r];
                  if (i.name === t || i.uuid === t) return i;
                  let a = n(i.children);
                  if (a) return a;
                }
                return null;
              },
              r = n(e.children);
            if (r) return r;
          }
          return null;
        }
        _getValue_unavailable() {}
        _setValue_unavailable() {}
        _getValue_direct(e, t) {
          e[t] = this.targetObject[this.propertyName];
        }
        _getValue_array(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) e[t++] = n[r];
        }
        _getValue_arrayElement(e, t) {
          e[t] = this.resolvedProperty[this.propertyIndex];
        }
        _getValue_toArray(e, t) {
          this.resolvedProperty.toArray(e, t);
        }
        _setValue_direct(e, t) {
          this.targetObject[this.propertyName] = e[t];
        }
        _setValue_direct_setNeedsUpdate(e, t) {
          (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
          (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _setValue_array(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
        }
        _setValue_array_setNeedsUpdate(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
          this.targetObject.needsUpdate = !0;
        }
        _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
          let n = this.resolvedProperty;
          for (let r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
          this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_arrayElement(e, t) {
          this.resolvedProperty[this.propertyIndex] = e[t];
        }
        _setValue_arrayElement_setNeedsUpdate(e, t) {
          (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
          (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _setValue_fromArray(e, t) {
          this.resolvedProperty.fromArray(e, t);
        }
        _setValue_fromArray_setNeedsUpdate(e, t) {
          this.resolvedProperty.fromArray(e, t),
            (this.targetObject.needsUpdate = !0);
        }
        _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
          this.resolvedProperty.fromArray(e, t),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
        }
        _getValue_unbound(e, t) {
          this.bind(), this.getValue(e, t);
        }
        _setValue_unbound(e, t) {
          this.bind(), this.setValue(e, t);
        }
        bind() {
          let t = this.node,
            n = this.parsedPath,
            r = n.objectName,
            i = n.propertyName,
            a = n.propertyIndex;
          if (
            (t ||
              ((t = e.findNode(this.rootNode, n.nodeName) || this.rootNode),
              (this.node = t)),
            (this.getValue = this._getValue_unavailable),
            (this.setValue = this._setValue_unavailable),
            !t)
          ) {
            console.error(
              `THREE.PropertyBinding: Trying to update node for track: ` +
                this.path +
                ` but it wasn't found.`
            );
            return;
          }
          if (r) {
            let e = n.objectIndex;
            switch (r) {
              case `materials`:
                if (!t.material) {
                  console.error(
                    `THREE.PropertyBinding: Can not bind to material as node does not have a material.`,
                    this
                  );
                  return;
                }
                if (!t.material.materials) {
                  console.error(
                    `THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.`,
                    this
                  );
                  return;
                }
                t = t.material.materials;
                break;
              case `bones`:
                if (!t.skeleton) {
                  console.error(
                    `THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.`,
                    this
                  );
                  return;
                }
                t = t.skeleton.bones;
                for (let n = 0; n < t.length; n++)
                  if (t[n].name === e) {
                    e = n;
                    break;
                  }
                break;
              default:
                if (t[r] === void 0) {
                  console.error(
                    `THREE.PropertyBinding: Can not bind to objectName of node undefined.`,
                    this
                  );
                  return;
                }
                t = t[r];
            }
            if (e !== void 0) {
              if (t[e] === void 0) {
                console.error(
                  `THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.`,
                  this,
                  t
                );
                return;
              }
              t = t[e];
            }
          }
          let o = t[i];
          if (o === void 0) {
            let e = n.nodeName;
            console.error(
              `THREE.PropertyBinding: Trying to update property for track: ` +
                e +
                `.` +
                i +
                ` but it wasn't found.`,
              t
            );
            return;
          }
          let s = this.Versioning.None;
          (this.targetObject = t),
            t.needsUpdate === void 0
              ? t.matrixWorldNeedsUpdate !== void 0 &&
                (s = this.Versioning.MatrixWorldNeedsUpdate)
              : (s = this.Versioning.NeedsUpdate);
          let c = this.BindingType.Direct;
          if (a !== void 0) {
            if (i === `morphTargetInfluences`) {
              if (!t.geometry) {
                console.error(
                  `THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.`,
                  this
                );
                return;
              }
              if (!t.geometry.isBufferGeometry) {
                console.error(
                  `THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.`,
                  this
                );
                return;
              }
              if (!t.geometry.morphAttributes) {
                console.error(
                  `THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.`,
                  this
                );
                return;
              }
              t.morphTargetDictionary[a] !== void 0 &&
                (a = t.morphTargetDictionary[a]);
            }
            (c = this.BindingType.ArrayElement),
              (this.resolvedProperty = o),
              (this.propertyIndex = a);
          } else
            o.fromArray !== void 0 && o.toArray !== void 0
              ? ((c = this.BindingType.HasFromToArray),
                (this.resolvedProperty = o))
              : Array.isArray(o)
              ? ((c = this.BindingType.EntireArray),
                (this.resolvedProperty = o))
              : (this.propertyName = i);
          (this.getValue = this.GetterByBindingType[c]),
            (this.setValue = this.SetterByBindingTypeAndVersioning[c][s]);
        }
        unbind() {
          (this.node = null),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        }
      }),
      (Eh.Composite = Th),
      (Eh.prototype.BindingType = {
        Direct: 0,
        EntireArray: 1,
        ArrayElement: 2,
        HasFromToArray: 3,
      }),
      (Eh.prototype.Versioning = {
        None: 0,
        NeedsUpdate: 1,
        MatrixWorldNeedsUpdate: 2,
      }),
      (Eh.prototype.GetterByBindingType = [
        Eh.prototype._getValue_direct,
        Eh.prototype._getValue_array,
        Eh.prototype._getValue_arrayElement,
        Eh.prototype._getValue_toArray,
      ]),
      (Eh.prototype.SetterByBindingTypeAndVersioning = [
        [
          Eh.prototype._setValue_direct,
          Eh.prototype._setValue_direct_setNeedsUpdate,
          Eh.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
        ],
        [
          Eh.prototype._setValue_array,
          Eh.prototype._setValue_array_setNeedsUpdate,
          Eh.prototype._setValue_array_setMatrixWorldNeedsUpdate,
        ],
        [
          Eh.prototype._setValue_arrayElement,
          Eh.prototype._setValue_arrayElement_setNeedsUpdate,
          Eh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
        ],
        [
          Eh.prototype._setValue_fromArray,
          Eh.prototype._setValue_fromArray_setNeedsUpdate,
          Eh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
        ],
      ]),
      (Dh = class {
        constructor() {
          (this.uuid = an()),
            (this._objects = Array.prototype.slice.call(arguments)),
            (this.nCachedObjects_ = 0);
          let e = {};
          this._indicesByUUID = e;
          for (let t = 0, n = arguments.length; t !== n; ++t)
            e[arguments[t].uuid] = t;
          (this._paths = []),
            (this._parsedPaths = []),
            (this._bindings = []),
            (this._bindingsIndicesByPath = {});
          let t = this;
          this.stats = {
            objects: {
              get total() {
                return t._objects.length;
              },
              get inUse() {
                return this.total - t.nCachedObjects_;
              },
            },
            get bindingsPerObject() {
              return t._bindings.length;
            },
          };
        }
        add() {
          let e = this._objects,
            t = this._indicesByUUID,
            n = this._paths,
            r = this._parsedPaths,
            i = this._bindings,
            a = i.length,
            o,
            s = e.length,
            c = this.nCachedObjects_;
          for (let l = 0, u = arguments.length; l !== u; ++l) {
            let u = arguments[l],
              d = u.uuid,
              f = t[d];
            if (f === void 0) {
              (f = s++), (t[d] = f), e.push(u);
              for (let e = 0, t = a; e !== t; ++e)
                i[e].push(new Eh(u, n[e], r[e]));
            } else if (f < c) {
              o = e[f];
              let s = --c,
                l = e[s];
              (t[l.uuid] = f), (e[f] = l), (t[d] = s), (e[s] = u);
              for (let e = 0, t = a; e !== t; ++e) {
                let t = i[e],
                  a = t[s],
                  o = t[f];
                (t[f] = a),
                  o === void 0 && (o = new Eh(u, n[e], r[e])),
                  (t[s] = o);
              }
            } else
              e[f] !== o &&
                console.error(
                  `THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.`
                );
          }
          this.nCachedObjects_ = c;
        }
        remove() {
          let e = this._objects,
            t = this._indicesByUUID,
            n = this._bindings,
            r = n.length,
            i = this.nCachedObjects_;
          for (let a = 0, o = arguments.length; a !== o; ++a) {
            let o = arguments[a],
              s = o.uuid,
              c = t[s];
            if (c !== void 0 && c >= i) {
              let a = i++,
                l = e[a];
              (t[l.uuid] = c), (e[c] = l), (t[s] = a), (e[a] = o);
              for (let e = 0, t = r; e !== t; ++e) {
                let t = n[e],
                  r = t[a],
                  i = t[c];
                (t[c] = r), (t[a] = i);
              }
            }
          }
          this.nCachedObjects_ = i;
        }
        uncache() {
          let e = this._objects,
            t = this._indicesByUUID,
            n = this._bindings,
            r = n.length,
            i = this.nCachedObjects_,
            a = e.length;
          for (let o = 0, s = arguments.length; o !== s; ++o) {
            let s = arguments[o],
              c = s.uuid,
              l = t[c];
            if (l !== void 0)
              if ((delete t[c], l < i)) {
                let o = --i,
                  s = e[o],
                  c = --a,
                  u = e[c];
                (t[s.uuid] = l),
                  (e[l] = s),
                  (t[u.uuid] = o),
                  (e[o] = u),
                  e.pop();
                for (let e = 0, t = r; e !== t; ++e) {
                  let t = n[e],
                    r = t[o],
                    i = t[c];
                  (t[l] = r), (t[o] = i), t.pop();
                }
              } else {
                let i = --a,
                  o = e[i];
                i > 0 && (t[o.uuid] = l), (e[l] = o), e.pop();
                for (let e = 0, t = r; e !== t; ++e) {
                  let t = n[e];
                  (t[l] = t[i]), t.pop();
                }
              }
          }
          this.nCachedObjects_ = i;
        }
        subscribe_(e, t) {
          let n = this._bindingsIndicesByPath,
            r = n[e],
            i = this._bindings;
          if (r !== void 0) return i[r];
          let a = this._paths,
            o = this._parsedPaths,
            s = this._objects,
            c = s.length,
            l = this.nCachedObjects_,
            u = Array(c);
          (r = i.length), (n[e] = r), a.push(e), o.push(t), i.push(u);
          for (let n = l, r = s.length; n !== r; ++n) {
            let r = s[n];
            u[n] = new Eh(r, e, t);
          }
          return u;
        }
        unsubscribe_(e) {
          let t = this._bindingsIndicesByPath,
            n = t[e];
          if (n !== void 0) {
            let r = this._paths,
              i = this._parsedPaths,
              a = this._bindings,
              o = a.length - 1,
              s = a[o],
              c = e[o];
            (t[c] = n),
              (a[n] = s),
              a.pop(),
              (i[n] = i[o]),
              i.pop(),
              (r[n] = r[o]),
              r.pop();
          }
        }
      }),
      (Dh.prototype.isAnimationObjectGroup = !0),
      (Oh = class {
        constructor(e, t, n = null, r = t.blendMode) {
          (this._mixer = e),
            (this._clip = t),
            (this._localRoot = n),
            (this.blendMode = r);
          let i = t.tracks,
            a = i.length,
            o = Array(a),
            s = { endingStart: Cc, endingEnd: Cc };
          for (let e = 0; e !== a; ++e) {
            let t = i[e].createInterpolant(null);
            (o[e] = t), (t.settings = s);
          }
          (this._interpolantSettings = s),
            (this._interpolants = o),
            (this._propertyBindings = Array(a)),
            (this._cacheIndex = null),
            (this._byClipCacheIndex = null),
            (this._timeScaleInterpolant = null),
            (this._weightInterpolant = null),
            (this.loop = vc),
            (this._loopCount = -1),
            (this._startTime = null),
            (this.time = 0),
            (this.timeScale = 1),
            (this._effectiveTimeScale = 1),
            (this.weight = 1),
            (this._effectiveWeight = 1),
            (this.repetitions = 1 / 0),
            (this.paused = !1),
            (this.enabled = !0),
            (this.clampWhenFinished = !1),
            (this.zeroSlopeAtStart = !0),
            (this.zeroSlopeAtEnd = !0);
        }
        play() {
          return this._mixer._activateAction(this), this;
        }
        stop() {
          return this._mixer._deactivateAction(this), this.reset();
        }
        reset() {
          return (
            (this.paused = !1),
            (this.enabled = !0),
            (this.time = 0),
            (this._loopCount = -1),
            (this._startTime = null),
            this.stopFading().stopWarping()
          );
        }
        isRunning() {
          return (
            this.enabled &&
            !this.paused &&
            this.timeScale !== 0 &&
            this._startTime === null &&
            this._mixer._isActiveAction(this)
          );
        }
        isScheduled() {
          return this._mixer._isActiveAction(this);
        }
        startAt(e) {
          return (this._startTime = e), this;
        }
        setLoop(e, t) {
          return (this.loop = e), (this.repetitions = t), this;
        }
        setEffectiveWeight(e) {
          return (
            (this.weight = e),
            (this._effectiveWeight = this.enabled ? e : 0),
            this.stopFading()
          );
        }
        getEffectiveWeight() {
          return this._effectiveWeight;
        }
        fadeIn(e) {
          return this._scheduleFading(e, 0, 1);
        }
        fadeOut(e) {
          return this._scheduleFading(e, 1, 0);
        }
        crossFadeFrom(e, t, n) {
          if ((e.fadeOut(t), this.fadeIn(t), n)) {
            let n = this._clip.duration,
              r = e._clip.duration,
              i = r / n,
              a = n / r;
            e.warp(1, i, t), this.warp(a, 1, t);
          }
          return this;
        }
        crossFadeTo(e, t, n) {
          return e.crossFadeFrom(this, t, n);
        }
        stopFading() {
          let e = this._weightInterpolant;
          return (
            e !== null &&
              ((this._weightInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        }
        setEffectiveTimeScale(e) {
          return (
            (this.timeScale = e),
            (this._effectiveTimeScale = this.paused ? 0 : e),
            this.stopWarping()
          );
        }
        getEffectiveTimeScale() {
          return this._effectiveTimeScale;
        }
        setDuration(e) {
          return (this.timeScale = this._clip.duration / e), this.stopWarping();
        }
        syncWith(e) {
          return (
            (this.time = e.time),
            (this.timeScale = e.timeScale),
            this.stopWarping()
          );
        }
        halt(e) {
          return this.warp(this._effectiveTimeScale, 0, e);
        }
        warp(e, t, n) {
          let r = this._mixer,
            i = r.time,
            a = this.timeScale,
            o = this._timeScaleInterpolant;
          o === null &&
            ((o = r._lendControlInterpolant()),
            (this._timeScaleInterpolant = o));
          let s = o.parameterPositions,
            c = o.sampleValues;
          return (
            (s[0] = i), (s[1] = i + n), (c[0] = e / a), (c[1] = t / a), this
          );
        }
        stopWarping() {
          let e = this._timeScaleInterpolant;
          return (
            e !== null &&
              ((this._timeScaleInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        }
        getMixer() {
          return this._mixer;
        }
        getClip() {
          return this._clip;
        }
        getRoot() {
          return this._localRoot || this._mixer._root;
        }
        _update(e, t, n, r) {
          if (!this.enabled) {
            this._updateWeight(e);
            return;
          }
          let i = this._startTime;
          if (i !== null) {
            let r = (e - i) * n;
            if (r < 0 || n === 0) return;
            (this._startTime = null), (t = n * r);
          }
          t *= this._updateTimeScale(e);
          let a = this._updateTime(t),
            o = this._updateWeight(e);
          if (o > 0) {
            let e = this._interpolants,
              t = this._propertyBindings;
            switch (this.blendMode) {
              case Dc:
                for (let n = 0, r = e.length; n !== r; ++n)
                  e[n].evaluate(a), t[n].accumulateAdditive(o);
                break;
              case Ec:
              default:
                for (let n = 0, i = e.length; n !== i; ++n)
                  e[n].evaluate(a), t[n].accumulate(r, o);
            }
          }
        }
        _updateWeight(e) {
          let t = 0;
          if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
              let r = n.evaluate(e)[0];
              (t *= r),
                e > n.parameterPositions[1] &&
                  (this.stopFading(), r === 0 && (this.enabled = !1));
            }
          }
          return (this._effectiveWeight = t), t;
        }
        _updateTimeScale(e) {
          let t = 0;
          if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            if (n !== null) {
              let r = n.evaluate(e)[0];
              (t *= r),
                e > n.parameterPositions[1] &&
                  (this.stopWarping(),
                  t === 0 ? (this.paused = !0) : (this.timeScale = t));
            }
          }
          return (this._effectiveTimeScale = t), t;
        }
        _updateTime(e) {
          let t = this._clip.duration,
            n = this.loop,
            r = this.time + e,
            i = this._loopCount,
            a = n === yc;
          if (e === 0) return i === -1 ? r : a && (1 & i) == 1 ? t - r : r;
          if (n === _c) {
            i === -1 && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
            e: {
              if (r >= t) r = t;
              else {
                if (!(r < 0)) {
                  this.time = r;
                  break e;
                }
                r = 0;
              }
              this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
                (this.time = r),
                this._mixer.dispatchEvent({
                  type: `finished`,
                  action: this,
                  direction: e < 0 ? -1 : 1,
                });
            }
          } else {
            if (
              (i === -1 &&
                (e >= 0
                  ? ((i = 0), this._setEndings(!0, this.repetitions === 0, a))
                  : this._setEndings(this.repetitions === 0, !0, a)),
              r >= t || r < 0)
            ) {
              let n = Math.floor(r / t);
              (r -= t * n), (i += Math.abs(n));
              let o = this.repetitions - i;
              if (o <= 0)
                this.clampWhenFinished
                  ? (this.paused = !0)
                  : (this.enabled = !1),
                  (r = e > 0 ? t : 0),
                  (this.time = r),
                  this._mixer.dispatchEvent({
                    type: `finished`,
                    action: this,
                    direction: e > 0 ? 1 : -1,
                  });
              else {
                if (o === 1) {
                  let t = e < 0;
                  this._setEndings(t, !t, a);
                } else this._setEndings(!1, !1, a);
                (this._loopCount = i),
                  (this.time = r),
                  this._mixer.dispatchEvent({
                    type: `loop`,
                    action: this,
                    loopDelta: n,
                  });
              }
            } else this.time = r;
            if (a && (1 & i) == 1) return t - r;
          }
          return r;
        }
        _setEndings(e, t, n) {
          let r = this._interpolantSettings;
          n
            ? ((r.endingStart = wc), (r.endingEnd = wc))
            : ((r.endingStart = e ? (this.zeroSlopeAtStart ? wc : Cc) : Tc),
              (r.endingEnd = t ? (this.zeroSlopeAtEnd ? wc : Cc) : Tc));
        }
        _scheduleFading(e, t, n) {
          let r = this._mixer,
            i = r.time,
            a = this._weightInterpolant;
          a === null &&
            ((a = r._lendControlInterpolant()), (this._weightInterpolant = a));
          let o = a.parameterPositions,
            s = a.sampleValues;
          return (o[0] = i), (s[0] = t), (o[1] = i + e), (s[1] = n), this;
        }
      }),
      (kh = class extends Bc {
        constructor(e) {
          super(),
            (this._root = e),
            this._initMemoryManager(),
            (this._accuIndex = 0),
            (this.time = 0),
            (this.timeScale = 1);
        }
        _bindAction(e, t) {
          let n = e._localRoot || this._root,
            r = e._clip.tracks,
            i = r.length,
            a = e._propertyBindings,
            o = e._interpolants,
            s = n.uuid,
            c = this._bindingsByRootAndName,
            l = c[s];
          l === void 0 && ((l = {}), (c[s] = l));
          for (let e = 0; e !== i; ++e) {
            let i = r[e],
              c = i.name,
              u = l[c];
            if (u !== void 0) a[e] = u;
            else {
              if (((u = a[e]), u !== void 0)) {
                u._cacheIndex === null &&
                  (++u.referenceCount, this._addInactiveBinding(u, s, c));
                continue;
              }
              let r = t && t._propertyBindings[e].binding.parsedPath;
              (u = new mh(
                Eh.create(n, c, r),
                i.ValueTypeName,
                i.getValueSize()
              )),
                ++u.referenceCount,
                this._addInactiveBinding(u, s, c),
                (a[e] = u);
            }
            o[e].resultBuffer = u.buffer;
          }
        }
        _activateAction(e) {
          if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
              let t = (e._localRoot || this._root).uuid,
                n = e._clip.uuid,
                r = this._actionsByClip[n];
              this._bindAction(e, r && r.knownActions[0]),
                this._addInactiveAction(e, n, t);
            }
            let t = e._propertyBindings;
            for (let e = 0, n = t.length; e !== n; ++e) {
              let n = t[e];
              n.useCount++ === 0 &&
                (this._lendBinding(n), n.saveOriginalState());
            }
            this._lendAction(e);
          }
        }
        _deactivateAction(e) {
          if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for (let e = 0, n = t.length; e !== n; ++e) {
              let n = t[e];
              --n.useCount === 0 &&
                (n.restoreOriginalState(), this._takeBackBinding(n));
            }
            this._takeBackAction(e);
          }
        }
        _initMemoryManager() {
          (this._actions = []),
            (this._nActiveActions = 0),
            (this._actionsByClip = {}),
            (this._bindings = []),
            (this._nActiveBindings = 0),
            (this._bindingsByRootAndName = {}),
            (this._controlInterpolants = []),
            (this._nActiveControlInterpolants = 0);
          let e = this;
          this.stats = {
            actions: {
              get total() {
                return e._actions.length;
              },
              get inUse() {
                return e._nActiveActions;
              },
            },
            bindings: {
              get total() {
                return e._bindings.length;
              },
              get inUse() {
                return e._nActiveBindings;
              },
            },
            controlInterpolants: {
              get total() {
                return e._controlInterpolants.length;
              },
              get inUse() {
                return e._nActiveControlInterpolants;
              },
            },
          };
        }
        _isActiveAction(e) {
          let t = e._cacheIndex;
          return t !== null && t < this._nActiveActions;
        }
        _addInactiveAction(e, t, n) {
          let r = this._actions,
            i = this._actionsByClip,
            a = i[t];
          if (a === void 0)
            (a = { knownActions: [e], actionByRoot: {} }),
              (e._byClipCacheIndex = 0),
              (i[t] = a);
          else {
            let t = a.knownActions;
            (e._byClipCacheIndex = t.length), t.push(e);
          }
          (e._cacheIndex = r.length), r.push(e), (a.actionByRoot[n] = e);
        }
        _removeInactiveAction(e) {
          let t = this._actions,
            n = t[t.length - 1],
            r = e._cacheIndex;
          (n._cacheIndex = r), (t[r] = n), t.pop(), (e._cacheIndex = null);
          let i = e._clip.uuid,
            a = this._actionsByClip,
            o = a[i],
            s = o.knownActions,
            c = s[s.length - 1],
            l = e._byClipCacheIndex;
          (c._byClipCacheIndex = l),
            (s[l] = c),
            s.pop(),
            (e._byClipCacheIndex = null);
          let u = o.actionByRoot,
            d = (e._localRoot || this._root).uuid;
          delete u[d],
            s.length === 0 && delete a[i],
            this._removeInactiveBindingsForAction(e);
        }
        _removeInactiveBindingsForAction(e) {
          let t = e._propertyBindings;
          for (let e = 0, n = t.length; e !== n; ++e) {
            let n = t[e];
            --n.referenceCount === 0 && this._removeInactiveBinding(n);
          }
        }
        _lendAction(e) {
          let t = this._actions,
            n = e._cacheIndex,
            r = this._nActiveActions++,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        }
        _takeBackAction(e) {
          let t = this._actions,
            n = e._cacheIndex,
            r = --this._nActiveActions,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        }
        _addInactiveBinding(e, t, n) {
          let r = this._bindingsByRootAndName,
            i = this._bindings,
            a = r[t];
          a === void 0 && ((a = {}), (r[t] = a)),
            (a[n] = e),
            (e._cacheIndex = i.length),
            i.push(e);
        }
        _removeInactiveBinding(e) {
          let t = this._bindings,
            n = e.binding,
            r = n.rootNode.uuid,
            i = n.path,
            a = this._bindingsByRootAndName,
            o = a[r],
            s = t[t.length - 1],
            c = e._cacheIndex;
          (s._cacheIndex = c),
            (t[c] = s),
            t.pop(),
            delete o[i],
            Object.keys(o).length === 0 && delete a[r];
        }
        _lendBinding(e) {
          let t = this._bindings,
            n = e._cacheIndex,
            r = this._nActiveBindings++,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        }
        _takeBackBinding(e) {
          let t = this._bindings,
            n = e._cacheIndex,
            r = --this._nActiveBindings,
            i = t[r];
          (e._cacheIndex = r), (t[r] = e), (i._cacheIndex = n), (t[n] = i);
        }
        _lendControlInterpolant() {
          let e = this._controlInterpolants,
            t = this._nActiveControlInterpolants++,
            n = e[t];
          return (
            n === void 0 &&
              ((n = new ym(
                new Float32Array(2),
                new Float32Array(2),
                1,
                this._controlInterpolantsResultBuffer
              )),
              (n.__cacheIndex = t),
              (e[t] = n)),
            n
          );
        }
        _takeBackControlInterpolant(e) {
          let t = this._controlInterpolants,
            n = e.__cacheIndex,
            r = --this._nActiveControlInterpolants,
            i = t[r];
          (e.__cacheIndex = r), (t[r] = e), (i.__cacheIndex = n), (t[n] = i);
        }
        clipAction(e, t, n) {
          let r = t || this._root,
            i = r.uuid,
            a = typeof e == `string` ? km.findByName(r, e) : e,
            o = a === null ? e : a.uuid,
            s = this._actionsByClip[o],
            c = null;
          if (
            (n === void 0 && (n = a === null ? Ec : a.blendMode), s !== void 0)
          ) {
            let e = s.actionByRoot[i];
            if (e !== void 0 && e.blendMode === n) return e;
            (c = s.knownActions[0]), a === null && (a = c._clip);
          }
          if (a === null) return null;
          let l = new Oh(this, a, t, n);
          return this._bindAction(l, c), this._addInactiveAction(l, o, i), l;
        }
        existingAction(e, t) {
          let n = t || this._root,
            r = n.uuid,
            i = typeof e == `string` ? km.findByName(n, e) : e,
            a = i ? i.uuid : e,
            o = this._actionsByClip[a];
          return (o !== void 0 && o.actionByRoot[r]) || null;
        }
        stopAllAction() {
          let e = this._actions,
            t = this._nActiveActions;
          for (let n = t - 1; n >= 0; --n) e[n].stop();
          return this;
        }
        update(e) {
          e *= this.timeScale;
          let t = this._actions,
            n = this._nActiveActions,
            r = (this.time += e),
            i = Math.sign(e),
            a = (this._accuIndex ^= 1);
          for (let o = 0; o !== n; ++o) t[o]._update(r, e, i, a);
          let o = this._bindings,
            s = this._nActiveBindings;
          for (let e = 0; e !== s; ++e) o[e].apply(a);
          return this;
        }
        setTime(e) {
          this.time = 0;
          for (let e = 0; e < this._actions.length; e++)
            this._actions[e].time = 0;
          return this.update(e);
        }
        getRoot() {
          return this._root;
        }
        uncacheClip(e) {
          let t = this._actions,
            n = e.uuid,
            r = this._actionsByClip,
            i = r[n];
          if (i !== void 0) {
            let e = i.knownActions;
            for (let n = 0, r = e.length; n !== r; ++n) {
              let r = e[n];
              this._deactivateAction(r);
              let i = r._cacheIndex,
                a = t[t.length - 1];
              (r._cacheIndex = null),
                (r._byClipCacheIndex = null),
                (a._cacheIndex = i),
                (t[i] = a),
                t.pop(),
                this._removeInactiveBindingsForAction(r);
            }
            delete r[n];
          }
        }
        uncacheRoot(e) {
          let t = e.uuid,
            n = this._actionsByClip;
          for (let e in n) {
            let r = n[e].actionByRoot,
              i = r[t];
            i !== void 0 &&
              (this._deactivateAction(i), this._removeInactiveAction(i));
          }
          let r = this._bindingsByRootAndName,
            i = r[t];
          if (i !== void 0)
            for (let e in i) {
              let t = i[e];
              t.restoreOriginalState(), this._removeInactiveBinding(t);
            }
        }
        uncacheAction(e, t) {
          let n = this.existingAction(e, t);
          n !== null &&
            (this._deactivateAction(n), this._removeInactiveAction(n));
        }
      }),
      (kh.prototype._controlInterpolantsResultBuffer = new Float32Array(1)),
      (Ah = class e {
        constructor(e) {
          typeof e == `string` &&
            (console.warn(`THREE.Uniform: Type parameter is no longer needed.`),
            (e = arguments[1])),
            (this.value = e);
        }
        clone() {
          return new e(
            this.value.clone === void 0 ? this.value : this.value.clone()
          );
        }
      }),
      (jh = class extends vf {
        constructor(e, t, n = 1) {
          super(e, t), (this.meshPerAttribute = n);
        }
        copy(e) {
          return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
          );
        }
        clone(e) {
          let t = super.clone(e);
          return (t.meshPerAttribute = this.meshPerAttribute), t;
        }
        toJSON(e) {
          let t = super.toJSON(e);
          return (
            (t.isInstancedInterleavedBuffer = !0),
            (t.meshPerAttribute = this.meshPerAttribute),
            t
          );
        }
      }),
      (jh.prototype.isInstancedInterleavedBuffer = !0),
      (Mh = class {
        constructor(e, t, n, r, i) {
          (this.buffer = e),
            (this.type = t),
            (this.itemSize = n),
            (this.elementSize = r),
            (this.count = i),
            (this.version = 0);
        }
        set needsUpdate(e) {
          !0 === e && this.version++;
        }
        setBuffer(e) {
          return (this.buffer = e), this;
        }
        setType(e, t) {
          return (this.type = e), (this.elementSize = t), this;
        }
        setItemSize(e) {
          return (this.itemSize = e), this;
        }
        setCount(e) {
          return (this.count = e), this;
        }
      }),
      (Mh.prototype.isGLBufferAttribute = !0),
      (Nh = new q()),
      (Ph = class {
        constructor(e = new q(1 / 0, 1 / 0), t = new q(-1 / 0, -1 / 0)) {
          (this.min = e), (this.max = t);
        }
        set(e, t) {
          return this.min.copy(e), this.max.copy(t), this;
        }
        setFromPoints(e) {
          this.makeEmpty();
          for (let t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
          return this;
        }
        setFromCenterAndSize(e, t) {
          let n = Nh.copy(t).multiplyScalar(0.5);
          return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
        }
        clone() {
          return new this.constructor().copy(this);
        }
        copy(e) {
          return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
          return (
            (this.min.x = this.min.y = 1 / 0),
            (this.max.x = this.max.y = -1 / 0),
            this
          );
        }
        isEmpty() {
          return this.max.x < this.min.x || this.max.y < this.min.y;
        }
        getCenter(e) {
          return this.isEmpty()
            ? e.set(0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5);
        }
        getSize(e) {
          return this.isEmpty()
            ? e.set(0, 0)
            : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
          return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
          return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
          return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        containsPoint(e) {
          return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y
          );
        }
        containsBox(e) {
          return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y
          );
        }
        getParameter(e, t) {
          return t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y)
          );
        }
        intersectsBox(e) {
          return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y
          );
        }
        clampPoint(e, t) {
          return t.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
          return Nh.copy(e).clamp(this.min, this.max).sub(e).length();
        }
        intersect(e) {
          return this.min.max(e.min), this.max.min(e.max), this;
        }
        union(e) {
          return this.min.min(e.min), this.max.max(e.max), this;
        }
        translate(e) {
          return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
          return e.min.equals(this.min) && e.max.equals(this.max);
        }
      }),
      (Ph.prototype.isBox2 = !0),
      (Fh = new J()),
      (Ih = new J()),
      (Lh = class {
        constructor(e = new J(), t = new J()) {
          (this.start = e), (this.end = t);
        }
        set(e, t) {
          return this.start.copy(e), this.end.copy(t), this;
        }
        copy(e) {
          return this.start.copy(e.start), this.end.copy(e.end), this;
        }
        getCenter(e) {
          return e.addVectors(this.start, this.end).multiplyScalar(0.5);
        }
        delta(e) {
          return e.subVectors(this.end, this.start);
        }
        distanceSq() {
          return this.start.distanceToSquared(this.end);
        }
        distance() {
          return this.start.distanceTo(this.end);
        }
        at(e, t) {
          return this.delta(t).multiplyScalar(e).add(this.start);
        }
        closestPointToPointParameter(e, t) {
          Fh.subVectors(e, this.start), Ih.subVectors(this.end, this.start);
          let n = Ih.dot(Ih),
            r = Ih.dot(Fh) / n;
          return t && (r = on(r, 0, 1)), r;
        }
        closestPointToPoint(e, t, n) {
          let r = this.closestPointToPointParameter(e, t);
          return this.delta(n).multiplyScalar(r).add(this.start);
        }
        applyMatrix4(e) {
          return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
        }
        equals(e) {
          return e.start.equals(this.start) && e.end.equals(this.end);
        }
        clone() {
          return new this.constructor().copy(this);
        }
      }),
      new J(),
      (Rh = new J()),
      (zh = new Y()),
      (Bh = new Y()),
      (Vh = class extends ap {
        constructor(e) {
          let t = Wa(e),
            n = new ju(),
            r = [],
            i = [],
            a = new X(0, 0, 1),
            o = new X(0, 1, 0);
          for (let e = 0; e < t.length; e++) {
            let n = t[e];
            n.parent &&
              n.parent.isBone &&
              (r.push(0, 0, 0),
              r.push(0, 0, 0),
              i.push(a.r, a.g, a.b),
              i.push(o.r, o.g, o.b));
          }
          n.setAttribute(`position`, new Z(r, 3)),
            n.setAttribute(`color`, new Z(i, 3));
          let s = new Xf({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0,
          });
          super(n, s),
            (this.type = `SkeletonHelper`),
            (this.isSkeletonHelper = !0),
            (this.root = e),
            (this.bones = t),
            (this.matrix = e.matrixWorld),
            (this.matrixAutoUpdate = !1);
        }
        updateMatrixWorld(e) {
          let t = this.bones,
            n = this.geometry,
            r = n.getAttribute(`position`);
          Bh.copy(this.root.matrixWorld).invert();
          for (let e = 0, n = 0; e < t.length; e++) {
            let i = t[e];
            i.parent &&
              i.parent.isBone &&
              (zh.multiplyMatrices(Bh, i.matrixWorld),
              Rh.setFromMatrixPosition(zh),
              r.setXYZ(n, Rh.x, Rh.y, Rh.z),
              zh.multiplyMatrices(Bh, i.parent.matrixWorld),
              Rh.setFromMatrixPosition(zh),
              r.setXYZ(n + 1, Rh.x, Rh.y, Rh.z),
              (n += 2));
          }
          (n.getAttribute(`position`).needsUpdate = !0),
            super.updateMatrixWorld(e);
        }
      }),
      new J(),
      new X(),
      new X(),
      (Hh = class extends ap {
        constructor(e = 10, t = 10, n = 4473924, r = 8947848) {
          (n = new X(n)), (r = new X(r));
          let i = t / 2,
            a = e / t,
            o = e / 2,
            s = [],
            c = [];
          for (let e = 0, l = 0, u = -o; e <= t; e++, u += a) {
            s.push(-o, 0, u, o, 0, u), s.push(u, 0, -o, u, 0, o);
            let t = e === i ? n : r;
            t.toArray(c, l),
              (l += 3),
              t.toArray(c, l),
              (l += 3),
              t.toArray(c, l),
              (l += 3),
              t.toArray(c, l),
              (l += 3);
          }
          let l = new ju();
          l.setAttribute(`position`, new Z(s, 3)),
            l.setAttribute(`color`, new Z(c, 3));
          let u = new Xf({ vertexColors: !0, toneMapped: !1 });
          super(l, u), (this.type = `GridHelper`);
        }
      }),
      new J(),
      new J(),
      new J(),
      new J(),
      new td(),
      new rl(),
      new J(),
      (Uh = new Float32Array(1)),
      new Int32Array(Uh.buffer),
      (Dp.create = function (e, t) {
        return (
          console.log(`THREE.Curve.create() has been deprecated`),
          (e.prototype = Object.create(Dp.prototype)),
          (e.prototype.constructor = e),
          (e.prototype.getPoint = t),
          e
        );
      }),
      (Wp.prototype.fromPoints = function (e) {
        return (
          console.warn(
            `THREE.Path: .fromPoints() has been renamed to .setFromPoints().`
          ),
          this.setFromPoints(e)
        );
      }),
      (Hh.prototype.setColors = function () {
        console.error(
          `THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.`
        );
      }),
      (Vh.prototype.update = function () {
        console.error(
          `THREE.SkeletonHelper: update() no longer needs to be called.`
        );
      }),
      (Nm.prototype.extractUrlBase = function (e) {
        return (
          console.warn(
            `THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.`
          ),
          ih.extractUrlBase(e)
        );
      }),
      (Nm.Handlers = {
        add: function () {
          console.error(
            `THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.`
          );
        },
        get: function () {
          console.error(
            `THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.`
          );
        },
      }),
      (Ph.prototype.center = function (e) {
        return (
          console.warn(
            `THREE.Box2: .center() has been renamed to .getCenter().`
          ),
          this.getCenter(e)
        );
      }),
      (Ph.prototype.empty = function () {
        return (
          console.warn(`THREE.Box2: .empty() has been renamed to .isEmpty().`),
          this.isEmpty()
        );
      }),
      (Ph.prototype.isIntersectionBox = function (e) {
        return (
          console.warn(
            `THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().`
          ),
          this.intersectsBox(e)
        );
      }),
      (Ph.prototype.size = function (e) {
        return (
          console.warn(`THREE.Box2: .size() has been renamed to .getSize().`),
          this.getSize(e)
        );
      }),
      (rl.prototype.center = function (e) {
        return (
          console.warn(
            `THREE.Box3: .center() has been renamed to .getCenter().`
          ),
          this.getCenter(e)
        );
      }),
      (rl.prototype.empty = function () {
        return (
          console.warn(`THREE.Box3: .empty() has been renamed to .isEmpty().`),
          this.isEmpty()
        );
      }),
      (rl.prototype.isIntersectionBox = function (e) {
        return (
          console.warn(
            `THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().`
          ),
          this.intersectsBox(e)
        );
      }),
      (rl.prototype.isIntersectionSphere = function (e) {
        return (
          console.warn(
            `THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().`
          ),
          this.intersectsSphere(e)
        );
      }),
      (rl.prototype.size = function (e) {
        return (
          console.warn(`THREE.Box3: .size() has been renamed to .getSize().`),
          this.getSize(e)
        );
      }),
      (xl.prototype.empty = function () {
        return (
          console.warn(
            `THREE.Sphere: .empty() has been renamed to .isEmpty().`
          ),
          this.isEmpty()
        );
      }),
      (md.prototype.setFromMatrix = function (e) {
        return (
          console.warn(
            `THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().`
          ),
          this.setFromProjectionMatrix(e)
        );
      }),
      (Lh.prototype.center = function (e) {
        return (
          console.warn(
            `THREE.Line3: .center() has been renamed to .getCenter().`
          ),
          this.getCenter(e)
        );
      }),
      (Gc.prototype.flattenToArrayOffset = function (e, t) {
        return (
          console.warn(
            `THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.`
          ),
          this.toArray(e, t)
        );
      }),
      (Gc.prototype.multiplyVector3 = function (e) {
        return (
          console.warn(
            `THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.`
          ),
          e.applyMatrix3(this)
        );
      }),
      (Gc.prototype.multiplyVector3Array = function () {
        console.error(
          `THREE.Matrix3: .multiplyVector3Array() has been removed.`
        );
      }),
      (Gc.prototype.applyToBufferAttribute = function (e) {
        return (
          console.warn(
            `THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.`
          ),
          e.applyMatrix3(this)
        );
      }),
      (Gc.prototype.applyToVector3Array = function () {
        console.error(
          `THREE.Matrix3: .applyToVector3Array() has been removed.`
        );
      }),
      (Gc.prototype.getInverse = function (e) {
        return (
          console.warn(
            `THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.`
          ),
          this.copy(e).invert()
        );
      }),
      (Y.prototype.extractPosition = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().`
          ),
          this.copyPosition(e)
        );
      }),
      (Y.prototype.flattenToArrayOffset = function (e, t) {
        return (
          console.warn(
            `THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.`
          ),
          this.toArray(e, t)
        );
      }),
      (Y.prototype.getPosition = function () {
        return (
          console.warn(
            `THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.`
          ),
          new J().setFromMatrixColumn(this, 3)
        );
      }),
      (Y.prototype.setRotationFromQuaternion = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().`
          ),
          this.makeRotationFromQuaternion(e)
        );
      }),
      (Y.prototype.multiplyToArray = function () {
        console.warn(`THREE.Matrix4: .multiplyToArray() has been removed.`);
      }),
      (Y.prototype.multiplyVector3 = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.`
          ),
          e.applyMatrix4(this)
        );
      }),
      (Y.prototype.multiplyVector4 = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.`
          ),
          e.applyMatrix4(this)
        );
      }),
      (Y.prototype.multiplyVector3Array = function () {
        console.error(
          `THREE.Matrix4: .multiplyVector3Array() has been removed.`
        );
      }),
      (Y.prototype.rotateAxis = function (e) {
        console.warn(
          `THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.`
        ),
          e.transformDirection(this);
      }),
      (Y.prototype.crossVector = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.`
          ),
          e.applyMatrix4(this)
        );
      }),
      (Y.prototype.translate = function () {
        console.error(`THREE.Matrix4: .translate() has been removed.`);
      }),
      (Y.prototype.rotateX = function () {
        console.error(`THREE.Matrix4: .rotateX() has been removed.`);
      }),
      (Y.prototype.rotateY = function () {
        console.error(`THREE.Matrix4: .rotateY() has been removed.`);
      }),
      (Y.prototype.rotateZ = function () {
        console.error(`THREE.Matrix4: .rotateZ() has been removed.`);
      }),
      (Y.prototype.rotateByAxis = function () {
        console.error(`THREE.Matrix4: .rotateByAxis() has been removed.`);
      }),
      (Y.prototype.applyToBufferAttribute = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.`
          ),
          e.applyMatrix4(this)
        );
      }),
      (Y.prototype.applyToVector3Array = function () {
        console.error(
          `THREE.Matrix4: .applyToVector3Array() has been removed.`
        );
      }),
      (Y.prototype.makeFrustum = function (e, t, n, r, i, a) {
        return (
          console.warn(
            `THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.`
          ),
          this.makePerspective(e, t, r, n, i, a)
        );
      }),
      (Y.prototype.getInverse = function (e) {
        return (
          console.warn(
            `THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.`
          ),
          this.copy(e).invert()
        );
      }),
      (dd.prototype.isIntersectionLine = function (e) {
        return (
          console.warn(
            `THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().`
          ),
          this.intersectsLine(e)
        );
      }),
      (el.prototype.multiplyVector3 = function (e) {
        return (
          console.warn(
            `THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.`
          ),
          e.applyQuaternion(this)
        );
      }),
      (el.prototype.inverse = function () {
        return (
          console.warn(
            `THREE.Quaternion: .inverse() has been renamed to invert().`
          ),
          this.invert()
        );
      }),
      (kl.prototype.isIntersectionBox = function (e) {
        return (
          console.warn(
            `THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().`
          ),
          this.intersectsBox(e)
        );
      }),
      (kl.prototype.isIntersectionPlane = function (e) {
        return (
          console.warn(
            `THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().`
          ),
          this.intersectsPlane(e)
        );
      }),
      (kl.prototype.isIntersectionSphere = function (e) {
        return (
          console.warn(
            `THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().`
          ),
          this.intersectsSphere(e)
        );
      }),
      (du.prototype.area = function () {
        return (
          console.warn(
            `THREE.Triangle: .area() has been renamed to .getArea().`
          ),
          this.getArea()
        );
      }),
      (du.prototype.barycoordFromPoint = function (e, t) {
        return (
          console.warn(
            `THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().`
          ),
          this.getBarycoord(e, t)
        );
      }),
      (du.prototype.midpoint = function (e) {
        return (
          console.warn(
            `THREE.Triangle: .midpoint() has been renamed to .getMidpoint().`
          ),
          this.getMidpoint(e)
        );
      }),
      (du.prototypenormal = function (e) {
        return (
          console.warn(
            `THREE.Triangle: .normal() has been renamed to .getNormal().`
          ),
          this.getNormal(e)
        );
      }),
      (du.prototype.plane = function (e) {
        return (
          console.warn(
            `THREE.Triangle: .plane() has been renamed to .getPlane().`
          ),
          this.getPlane(e)
        );
      }),
      (du.barycoordFromPoint = function (e, t, n, r, i) {
        return (
          console.warn(
            `THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().`
          ),
          du.getBarycoord(e, t, n, r, i)
        );
      }),
      (du.normal = function (e, t, n, r) {
        return (
          console.warn(
            `THREE.Triangle: .normal() has been renamed to .getNormal().`
          ),
          du.getNormal(e, t, n, r)
        );
      }),
      (Gp.prototype.extractAllPoints = function (e) {
        return (
          console.warn(
            `THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.`
          ),
          this.extractPoints(e)
        );
      }),
      (Gp.prototype.extrude = function (e) {
        return (
          console.warn(
            `THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.`
          ),
          new Jp(this, e)
        );
      }),
      (Gp.prototype.makeGeometry = function (e) {
        return (
          console.warn(
            `THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.`
          ),
          new em(this, e)
        );
      }),
      (q.prototype.fromAttribute = function (e, t, n) {
        return (
          console.warn(
            `THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().`
          ),
          this.fromBufferAttribute(e, t, n)
        );
      }),
      (q.prototype.distanceToManhattan = function (e) {
        return (
          console.warn(
            `THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().`
          ),
          this.manhattanDistanceTo(e)
        );
      }),
      (q.prototype.lengthManhattan = function () {
        return (
          console.warn(
            `THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().`
          ),
          this.manhattanLength()
        );
      }),
      (J.prototype.setEulerFromRotationMatrix = function () {
        console.error(
          `THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.`
        );
      }),
      (J.prototype.setEulerFromQuaternion = function () {
        console.error(
          `THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.`
        );
      }),
      (J.prototype.getPositionFromMatrix = function (e) {
        return (
          console.warn(
            `THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().`
          ),
          this.setFromMatrixPosition(e)
        );
      }),
      (J.prototype.getScaleFromMatrix = function (e) {
        return (
          console.warn(
            `THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().`
          ),
          this.setFromMatrixScale(e)
        );
      }),
      (J.prototype.getColumnFromMatrix = function (e, t) {
        return (
          console.warn(
            `THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().`
          ),
          this.setFromMatrixColumn(t, e)
        );
      }),
      (J.prototype.applyProjection = function (e) {
        return (
          console.warn(
            `THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.`
          ),
          this.applyMatrix4(e)
        );
      }),
      (J.prototype.fromAttribute = function (e, t, n) {
        return (
          console.warn(
            `THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().`
          ),
          this.fromBufferAttribute(e, t, n)
        );
      }),
      (J.prototype.distanceToManhattan = function (e) {
        return (
          console.warn(
            `THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().`
          ),
          this.manhattanDistanceTo(e)
        );
      }),
      (J.prototype.lengthManhattan = function () {
        return (
          console.warn(
            `THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().`
          ),
          this.manhattanLength()
        );
      }),
      (Xc.prototype.fromAttribute = function (e, t, n) {
        return (
          console.warn(
            `THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().`
          ),
          this.fromBufferAttribute(e, t, n)
        );
      }),
      (Xc.prototype.lengthManhattan = function () {
        return (
          console.warn(
            `THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().`
          ),
          this.manhattanLength()
        );
      }),
      (eu.prototype.getChildByName = function (e) {
        return (
          console.warn(
            `THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().`
          ),
          this.getObjectByName(e)
        );
      }),
      (eu.prototype.renderDepth = function () {
        console.warn(
          `THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.`
        );
      }),
      (eu.prototype.translate = function (e, t) {
        return (
          console.warn(
            `THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.`
          ),
          this.translateOnAxis(t, e)
        );
      }),
      (eu.prototype.getWorldRotation = function () {
        console.error(
          `THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.`
        );
      }),
      (eu.prototype.applyMatrix = function (e) {
        return (
          console.warn(
            `THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().`
          ),
          this.applyMatrix4(e)
        );
      }),
      Object.defineProperties(eu.prototype, {
        eulerOrder: {
          get: function () {
            return (
              console.warn(
                `THREE.Object3D: .eulerOrder is now .rotation.order.`
              ),
              this.rotation.order
            );
          },
          set: function (e) {
            console.warn(`THREE.Object3D: .eulerOrder is now .rotation.order.`),
              (this.rotation.order = e);
          },
        },
        useQuaternion: {
          get: function () {
            console.warn(
              `THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.`
            );
          },
          set: function () {
            console.warn(
              `THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.`
            );
          },
        },
      }),
      (Yu.prototype.setDrawMode = function () {
        console.error(
          `THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.`
        );
      }),
      Object.defineProperties(Yu.prototype, {
        drawMode: {
          get: function () {
            return (
              console.error(
                `THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.`
              ),
              Oc
            );
          },
          set: function () {
            console.error(
              `THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.`
            );
          },
        },
      }),
      (Vf.prototype.initBones = function () {
        console.error(`THREE.SkinnedMesh: initBones() has been removed.`);
      }),
      (nd.prototype.setLens = function (e, t) {
        console.warn(
          `THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.`
        ),
          t !== void 0 && (this.filmGauge = t),
          this.setFocalLength(e);
      }),
      Object.defineProperties(zm.prototype, {
        onlyShadow: {
          set: function () {
            console.warn(`THREE.Light: .onlyShadow has been removed.`);
          },
        },
        shadowCameraFov: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraFov is now .shadow.camera.fov.`
            ),
              (this.shadow.camera.fov = e);
          },
        },
        shadowCameraLeft: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraLeft is now .shadow.camera.left.`
            ),
              (this.shadow.camera.left = e);
          },
        },
        shadowCameraRight: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraRight is now .shadow.camera.right.`
            ),
              (this.shadow.camera.right = e);
          },
        },
        shadowCameraTop: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraTop is now .shadow.camera.top.`
            ),
              (this.shadow.camera.top = e);
          },
        },
        shadowCameraBottom: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.`
            ),
              (this.shadow.camera.bottom = e);
          },
        },
        shadowCameraNear: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraNear is now .shadow.camera.near.`
            ),
              (this.shadow.camera.near = e);
          },
        },
        shadowCameraFar: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowCameraFar is now .shadow.camera.far.`
            ),
              (this.shadow.camera.far = e);
          },
        },
        shadowCameraVisible: {
          set: function () {
            console.warn(
              `THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.`
            );
          },
        },
        shadowBias: {
          set: function (e) {
            console.warn(`THREE.Light: .shadowBias is now .shadow.bias.`),
              (this.shadow.bias = e);
          },
        },
        shadowDarkness: {
          set: function () {
            console.warn(`THREE.Light: .shadowDarkness has been removed.`);
          },
        },
        shadowMapWidth: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.`
            ),
              (this.shadow.mapSize.width = e);
          },
        },
        shadowMapHeight: {
          set: function (e) {
            console.warn(
              `THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.`
            ),
              (this.shadow.mapSize.height = e);
          },
        },
      }),
      Object.defineProperties(bu.prototype, {
        length: {
          get: function () {
            return (
              console.warn(
                `THREE.BufferAttribute: .length has been deprecated. Use .count instead.`
              ),
              this.array.length
            );
          },
        },
        dynamic: {
          get: function () {
            return (
              console.warn(
                `THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.`
              ),
              this.usage === Rc
            );
          },
          set: function () {
            console.warn(
              `THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.`
            ),
              this.setUsage(Rc);
          },
        },
      }),
      (bu.prototype.setDynamic = function (e) {
        return (
          console.warn(
            `THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.`
          ),
          this.setUsage(!0 === e ? Rc : Lc),
          this
        );
      }),
      (bu.prototype.copyIndicesArray = function () {
        console.error(
          `THREE.BufferAttribute: .copyIndicesArray() has been removed.`
        );
      }),
      (bu.prototype.setArray = function () {
        console.error(
          `THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers`
        );
      }),
      (ju.prototype.addIndex = function (e) {
        console.warn(
          `THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().`
        ),
          this.setIndex(e);
      }),
      (ju.prototype.addAttribute = function (e, t) {
        return (
          console.warn(
            `THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().`
          ),
          !(t && t.isBufferAttribute) && !(t && t.isInterleavedBufferAttribute)
            ? (console.warn(
                `THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).`
              ),
              this.setAttribute(e, new bu(arguments[1], arguments[2])))
            : e === `index`
            ? (console.warn(
                `THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.`
              ),
              this.setIndex(t),
              this)
            : this.setAttribute(e, t)
        );
      }),
      (ju.prototype.addDrawCall = function (e, t, n) {
        n !== void 0 &&
          console.warn(
            `THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.`
          ),
          console.warn(
            `THREE.BufferGeometry: .addDrawCall() is now .addGroup().`
          ),
          this.addGroup(e, t);
      }),
      (ju.prototype.clearDrawCalls = function () {
        console.warn(
          `THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().`
        ),
          this.clearGroups();
      }),
      (ju.prototype.computeOffsets = function () {
        console.warn(
          `THREE.BufferGeometry: .computeOffsets() has been removed.`
        );
      }),
      (ju.prototype.removeAttribute = function (e) {
        return (
          console.warn(
            `THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().`
          ),
          this.deleteAttribute(e)
        );
      }),
      (ju.prototype.applyMatrix = function (e) {
        return (
          console.warn(
            `THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().`
          ),
          this.applyMatrix4(e)
        );
      }),
      Object.defineProperties(ju.prototype, {
        drawcalls: {
          get: function () {
            return (
              console.error(
                `THREE.BufferGeometry: .drawcalls has been renamed to .groups.`
              ),
              this.groups
            );
          },
        },
        offsets: {
          get: function () {
            return (
              console.warn(
                `THREE.BufferGeometry: .offsets has been renamed to .groups.`
              ),
              this.groups
            );
          },
        },
      }),
      (vf.prototype.setDynamic = function (e) {
        return (
          console.warn(
            `THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.`
          ),
          this.setUsage(!0 === e ? Rc : Lc),
          this
        );
      }),
      (vf.prototype.setArray = function () {
        console.error(
          `THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers`
        );
      }),
      (Jp.prototype.getArrays = function () {
        console.error(`THREE.ExtrudeGeometry: .getArrays() has been removed.`);
      }),
      (Jp.prototype.addShapeList = function () {
        console.error(
          `THREE.ExtrudeGeometry: .addShapeList() has been removed.`
        );
      }),
      (Jp.prototype.addShape = function () {
        console.error(`THREE.ExtrudeGeometry: .addShape() has been removed.`);
      }),
      (_f.prototype.dispose = function () {
        console.error(`THREE.Scene: .dispose() has been removed.`);
      }),
      (Ah.prototype.onUpdate = function () {
        return (
          console.warn(
            `THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.`
          ),
          this
        );
      }),
      Object.defineProperties(pu.prototype, {
        wrapAround: {
          get: function () {
            console.warn(`THREE.Material: .wrapAround has been removed.`);
          },
          set: function () {
            console.warn(`THREE.Material: .wrapAround has been removed.`);
          },
        },
        overdraw: {
          get: function () {
            console.warn(`THREE.Material: .overdraw has been removed.`);
          },
          set: function () {
            console.warn(`THREE.Material: .overdraw has been removed.`);
          },
        },
        wrapRGB: {
          get: function () {
            return (
              console.warn(`THREE.Material: .wrapRGB has been removed.`),
              new X()
            );
          },
        },
        shading: {
          get: function () {
            console.error(
              `THREE.` +
                this.type +
                `: .shading has been removed. Use the boolean .flatShading instead.`
            );
          },
          set: function (e) {
            console.warn(
              `THREE.` +
                this.type +
                `: .shading has been removed. Use the boolean .flatShading instead.`
            ),
              (this.flatShading = e === to);
          },
        },
        stencilMask: {
          get: function () {
            return (
              console.warn(
                `THREE.` +
                  this.type +
                  `: .stencilMask has been removed. Use .stencilFuncMask instead.`
              ),
              this.stencilFuncMask
            );
          },
          set: function (e) {
            console.warn(
              `THREE.` +
                this.type +
                `: .stencilMask has been removed. Use .stencilFuncMask instead.`
            ),
              (this.stencilFuncMask = e);
          },
        },
        vertexTangents: {
          get: function () {
            console.warn(
              `THREE.` + this.type + `: .vertexTangents has been removed.`
            );
          },
          set: function () {
            console.warn(
              `THREE.` + this.type + `: .vertexTangents has been removed.`
            );
          },
        },
      }),
      Object.defineProperties(ed.prototype, {
        derivatives: {
          get: function () {
            return (
              console.warn(
                `THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.`
              ),
              this.extensions.derivatives
            );
          },
          set: function (e) {
            console.warn(
              `THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.`
            ),
              (this.extensions.derivatives = e);
          },
        },
      }),
      (Ki.prototype.clearTarget = function (e, t, n, r) {
        console.warn(
          `THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.`
        ),
          this.setRenderTarget(e),
          this.clear(t, n, r);
      }),
      (Ki.prototype.animate = function (e) {
        console.warn(
          `THREE.WebGLRenderer: .animate() is now .setAnimationLoop().`
        ),
          this.setAnimationLoop(e);
      }),
      (Ki.prototype.getCurrentRenderTarget = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().`
          ),
          this.getRenderTarget()
        );
      }),
      (Ki.prototype.getMaxAnisotropy = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().`
          ),
          this.capabilities.getMaxAnisotropy()
        );
      }),
      (Ki.prototype.getPrecision = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.`
          ),
          this.capabilities.precision
        );
      }),
      (Ki.prototype.resetGLState = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .resetGLState() is now .state.reset().`
          ),
          this.state.reset()
        );
      }),
      (Ki.prototype.supportsFloatTextures = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).`
          ),
          this.extensions.get(`OES_texture_float`)
        );
      }),
      (Ki.prototype.supportsHalfFloatTextures = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).`
          ),
          this.extensions.get(`OES_texture_half_float`)
        );
      }),
      (Ki.prototype.supportsStandardDerivatives = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).`
          ),
          this.extensions.get(`OES_standard_derivatives`)
        );
      }),
      (Ki.prototype.supportsCompressedTextureS3TC = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).`
          ),
          this.extensions.get(`WEBGL_compressed_texture_s3tc`)
        );
      }),
      (Ki.prototype.supportsCompressedTexturePVRTC = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).`
          ),
          this.extensions.get(`WEBGL_compressed_texture_pvrtc`)
        );
      }),
      (Ki.prototype.supportsBlendMinMax = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).`
          ),
          this.extensions.get(`EXT_blend_minmax`)
        );
      }),
      (Ki.prototype.supportsVertexTextures = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.`
          ),
          this.capabilities.vertexTextures
        );
      }),
      (Ki.prototype.supportsInstancedArrays = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).`
          ),
          this.extensions.get(`ANGLE_instanced_arrays`)
        );
      }),
      (Ki.prototype.enableScissorTest = function (e) {
        console.warn(
          `THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().`
        ),
          this.setScissorTest(e);
      }),
      (Ki.prototype.initMaterial = function () {
        console.warn(`THREE.WebGLRenderer: .initMaterial() has been removed.`);
      }),
      (Ki.prototype.addPrePlugin = function () {
        console.warn(`THREE.WebGLRenderer: .addPrePlugin() has been removed.`);
      }),
      (Ki.prototype.addPostPlugin = function () {
        console.warn(`THREE.WebGLRenderer: .addPostPlugin() has been removed.`);
      }),
      (Ki.prototype.updateShadowMap = function () {
        console.warn(
          `THREE.WebGLRenderer: .updateShadowMap() has been removed.`
        );
      }),
      (Ki.prototype.setFaceCulling = function () {
        console.warn(
          `THREE.WebGLRenderer: .setFaceCulling() has been removed.`
        );
      }),
      (Ki.prototype.allocTextureUnit = function () {
        console.warn(
          `THREE.WebGLRenderer: .allocTextureUnit() has been removed.`
        );
      }),
      (Ki.prototype.setTexture = function () {
        console.warn(`THREE.WebGLRenderer: .setTexture() has been removed.`);
      }),
      (Ki.prototype.setTexture2D = function () {
        console.warn(`THREE.WebGLRenderer: .setTexture2D() has been removed.`);
      }),
      (Ki.prototype.setTextureCube = function () {
        console.warn(
          `THREE.WebGLRenderer: .setTextureCube() has been removed.`
        );
      }),
      (Ki.prototype.getActiveMipMapLevel = function () {
        return (
          console.warn(
            `THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().`
          ),
          this.getActiveMipmapLevel()
        );
      }),
      Object.defineProperties(Ki.prototype, {
        shadowMapEnabled: {
          get: function () {
            return this.shadowMap.enabled;
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.`
            ),
              (this.shadowMap.enabled = e);
          },
        },
        shadowMapType: {
          get: function () {
            return this.shadowMap.type;
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.`
            ),
              (this.shadowMap.type = e);
          },
        },
        shadowMapCullFace: {
          get: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.`
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.`
            );
          },
        },
        context: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.`
              ),
              this.getContext()
            );
          },
        },
        vr: {
          get: function () {
            return (
              console.warn(`THREE.WebGLRenderer: .vr has been renamed to .xr`),
              this.xr
            );
          },
        },
        gammaInput: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.`
              ),
              !1
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.`
            );
          },
        },
        gammaOutput: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.`
              ),
              !1
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.`
            ),
              (this.outputEncoding = !0 === e ? Ac : kc);
          },
        },
        toneMappingWhitePoint: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.`
              ),
              1
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.`
            );
          },
        },
        gammaFactor: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderer: .gammaFactor has been removed.`
              ),
              2
            );
          },
          set: function () {
            console.warn(`THREE.WebGLRenderer: .gammaFactor has been removed.`);
          },
        },
      }),
      Object.defineProperties(Bi.prototype, {
        cullFace: {
          get: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.`
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.`
            );
          },
        },
        renderReverseSided: {
          get: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.`
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.`
            );
          },
        },
        renderSingleSided: {
          get: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.`
            );
          },
          set: function () {
            console.warn(
              `THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.`
            );
          },
        },
      }),
      Object.defineProperties(Zc.prototype, {
        wrapS: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.`
              ),
              this.texture.wrapS
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.`
            ),
              (this.texture.wrapS = e);
          },
        },
        wrapT: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.`
              ),
              this.texture.wrapT
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.`
            ),
              (this.texture.wrapT = e);
          },
        },
        magFilter: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.`
              ),
              this.texture.magFilter
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.`
            ),
              (this.texture.magFilter = e);
          },
        },
        minFilter: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.`
              ),
              this.texture.minFilter
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.`
            ),
              (this.texture.minFilter = e);
          },
        },
        anisotropy: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.`
              ),
              this.texture.anisotropy
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.`
            ),
              (this.texture.anisotropy = e);
          },
        },
        offset: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .offset is now .texture.offset.`
              ),
              this.texture.offset
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .offset is now .texture.offset.`
            ),
              (this.texture.offset = e);
          },
        },
        repeat: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .repeat is now .texture.repeat.`
              ),
              this.texture.repeat
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .repeat is now .texture.repeat.`
            ),
              (this.texture.repeat = e);
          },
        },
        format: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .format is now .texture.format.`
              ),
              this.texture.format
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .format is now .texture.format.`
            ),
              (this.texture.format = e);
          },
        },
        type: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .type is now .texture.type.`
              ),
              this.texture.type
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .type is now .texture.type.`
            ),
              (this.texture.type = e);
          },
        },
        generateMipmaps: {
          get: function () {
            return (
              console.warn(
                `THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.`
              ),
              this.texture.generateMipmaps
            );
          },
          set: function (e) {
            console.warn(
              `THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.`
            ),
              (this.texture.generateMipmaps = e);
          },
        },
      }),
      (fh.prototype.load = function (e) {
        console.warn(
          `THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.`
        );
        let t = this;
        return (
          new lh().load(e, function (e) {
            t.setBuffer(e);
          }),
          this
        );
      }),
      (ph.prototype.getData = function () {
        return (
          console.warn(
            `THREE.AudioAnalyser: .getData() is now .getFrequencyData().`
          ),
          this.getFrequencyData()
        );
      }),
      (ad.prototype.updateCubeMap = function (e, t) {
        return (
          console.warn(`THREE.CubeCamera: .updateCubeMap() is now .update().`),
          this.update(e, t)
        );
      }),
      (ad.prototype.clear = function (e, t, n, r) {
        return (
          console.warn(
            `THREE.CubeCamera: .clear() is now .renderTarget.clear().`
          ),
          this.renderTarget.clear(e, t, n, r)
        );
      }),
      (qc.crossOrigin = void 0),
      (qc.loadTexture = function (e, t, n, r) {
        console.warn(
          `THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.`
        );
        let i = new Rm();
        i.setCrossOrigin(this.crossOrigin);
        let a = i.load(e, n, void 0, r);
        return t && (a.mapping = t), a;
      }),
      (qc.loadTextureCube = function (e, t, n, r) {
        console.warn(
          `THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.`
        );
        let i = new Lm();
        i.setCrossOrigin(this.crossOrigin);
        let a = i.load(e, n, void 0, r);
        return t && (a.mapping = t), a;
      }),
      (qc.loadCompressedTexture = function () {
        console.error(
          `THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.`
        );
      }),
      (qc.loadCompressedTextureCube = function () {
        console.error(
          `THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.`
        );
      }),
      typeof __THREE_DEVTOOLS__ < `u` &&
        __THREE_DEVTOOLS__.dispatchEvent(
          new CustomEvent(`register`, { detail: { revision: Ga } })
        ),
      v !== void 0 &&
        (v.__THREE__
          ? console.warn(
              `WARNING: Multiple instances of Three.js being imported.`
            )
          : (v.__THREE__ = Ga));
  });
function Gh(e) {
  let { raysColor: t } = e,
    n = d(null),
    r = d(null),
    i = d(null),
    a = d(null),
    o = d(null),
    s = d(),
    c = Jh(),
    [l, f] = b(!1),
    p = d(e.animation);
  _(() => (f(!0), () => f(!1)), []),
    _(() => {
      p.current = e.animation;
    }, [e.animation]);
  let [h, g] = m(() => {
      if (t.mode === `random`) {
        let e = Math.random() * 360,
          t = 60 + Math.random() * 40;
        return [Yh(e, t, 50), Yh(e, t, 65)];
      } else
        return [
          [1, 1, 1],
          [1, 1, 1],
        ];
    }, [t]),
    [v, y, x] = m(() => {
      if (t.mode === `random`) return [h, g, 1];
      {
        let e = ``,
          r = ``;
        switch (t.mode) {
          case `single`:
            (e = t.color), (r = t.color);
            break;
          case `multi`:
            (e = t.color1), (r = t.color2);
            break;
        }
        let [i, a, o, s] = $h(Kh(e, n)),
          [c, l, u, d] = $h(Kh(r, n));
        return [[i, a, o], [c, l, u], Math.max(s, d)];
      }
    }, [t, c, n]);
  return (
    _(() => {
      f(!0);
      let t = n.current;
      if (!t) return;
      let c = new _f(),
        l = new nd(75, t.clientWidth / t.clientHeight, 0.1, 1e3);
      l.position.z = 5;
      let u = new Ki({
        preserveDrawingBuffer: !0,
        premultipliedAlpha: !0,
        alpha: !0,
        antialias: !0,
        precision: `highp`,
        powerPreference: `high-performance`,
      });
      u.setSize(t.clientWidth, t.clientHeight),
        u.setPixelRatio(1),
        t.appendChild(u.domElement);
      let d = new hd(1024, 1024),
        m = new ed({
          fragmentShader: tg,
          vertexShader: eg,
          uniforms: {
            u_colors: {
              value: [new Xc(v[0], v[1], v[2], 1), new Xc(y[0], y[1], y[2], 1)],
            },
            u_intensity: { value: Xh(e.intensity, 0, 100, 0, 0.5) },
            u_rays: { value: Xh(e.rays, 0, 100, 0, 0.3) },
            u_reach: { value: Xh(e.reach, 0, 100, 0, 0.5) },
            u_time: { value: Math.random() * 1e4 },
            u_mouse: { value: [0, 0] },
            u_resolution: { value: [t.clientWidth, t.clientHeight] },
            u_rayPos1: {
              value: [(e.position / 100) * t.clientWidth, Zh * t.clientHeight],
            },
            u_rayPos2: {
              value: [
                (e.position / 100 + 0.02) * t.clientWidth,
                Qh * t.clientHeight,
              ],
            },
          },
          wireframe: !1,
          wireframeLinewidth: 0,
          dithering: !1,
          flatShading: !0,
          side: eo,
        }),
        h = new Yu(d, m);
      c.add(h),
        (i.current = c),
        (a.current = l),
        (r.current = u),
        (o.current = h);
      let g = 0,
        _ = (e) => {
          let t = p.current;
          t.animate || (g = e);
          let n = e - g;
          (g = e),
            h.material instanceof ed &&
              t.animate &&
              (h.material.uniforms.u_time.value += (n * t.speed) / 1e3 / 10),
            u.render(c, l),
            (s.current = requestAnimationFrame(_));
        };
      return (
        (s.current = requestAnimationFrame(_)),
        () => {
          s.current && cancelAnimationFrame(s.current),
            u.dispose(),
            d.dispose(),
            m.dispose(),
            t.removeChild(u.domElement);
        }
      );
    }, [l]),
    _(() => {
      if (o.current?.material instanceof ed) {
        let t = o.current.material,
          r = n.current;
        if (!r) return;
        (t.uniforms.u_colors.value = [
          new Xc(v[0], v[1], v[2], 1),
          new Xc(y[0], y[1], y[2], 1),
        ]),
          (t.uniforms.u_intensity.value = Xh(e.intensity, 0, 100, 0, 0.5)),
          (t.uniforms.u_rays.value = Xh(e.rays, 0, 100, 0, 0.3)),
          (t.uniforms.u_reach.value = Xh(e.reach, 0, 100, 0, 0.5)),
          (t.uniforms.u_rayPos1.value = [
            (e.position / 100) * r.clientWidth,
            Zh * r.clientHeight,
          ]),
          (t.uniforms.u_rayPos2.value = [
            (e.position / 100 + 0.02) * r.clientWidth,
            Qh * r.clientHeight,
          ]);
      }
    }, [e.intensity, e.rays, e.reach, e.position, v, y]),
    u(`div`, {
      ref: n,
      style: {
        borderRadius: e.radius,
        overflow: `hidden`,
        backgroundColor: e.backgroundColor,
        ...e.style,
      },
    })
  );
}
function Kh(e, t) {
  if (e.startsWith(`var(`)) {
    let { variableName: n, defaultValue: r } = qh(e),
      i = r || ``;
    if (n && typeof document < `u`) {
      let e = getComputedStyle(t?.current || document.body);
      return (e && e.getPropertyValue(n).trim()) || i;
    }
    return i;
  } else return e;
}
function qh(e) {
  let t =
    /var\s*\(\s*(--[\w-]+)(?:\s*,\s*((?:"[^"]*"|'[^']*'|[^)]+)))?\s*\)/.exec(e);
  if (t) {
    let e = t[1],
      n = t[2] || null;
    return (
      (n &&= ((n = n.replace(/^["']|["']$/g, ``)), n.trim())),
      { variableName: e, defaultValue: n }
    );
  }
  return { variableName: ``, defaultValue: `` };
}
function Jh() {
  let [e, t] = b(!1);
  return (
    _(() => {
      let e = v.matchMedia(`(prefers-color-scheme: dark)`),
        n = (e) => {
          requestAnimationFrame(() => {
            setTimeout(() => {
              t(e.matches);
            }, 80);
          });
        };
      return t(e.matches), e.addListener(n), () => e.removeListener(n);
    }, []),
    e
  );
}
function Yh(e, t, n) {
  (t /= 100), (n /= 100);
  let r = (1 - Math.abs(2 * n - 1)) * t,
    i = r * (1 - Math.abs(((e / 60) % 2) - 1)),
    a = n - r / 2,
    o = 0,
    s = 0,
    c = 0;
  return (
    e >= 0 && e < 60
      ? ((o = r), (s = i), (c = 0))
      : e >= 60 && e < 120
      ? ((o = i), (s = r), (c = 0))
      : e >= 120 && e < 180
      ? ((o = 0), (s = r), (c = i))
      : e >= 180 && e < 240
      ? ((o = 0), (s = i), (c = r))
      : e >= 240 && e < 300
      ? ((o = i), (s = 0), (c = r))
      : e >= 300 && e < 360 && ((o = r), (s = 0), (c = i)),
    [o + a, s + a, c + a]
  );
}
function Xh(e, t, n, r, i) {
  let a = (e - t) / (n - t);
  return r + a * (i - r);
}
var Zh,
  Qh,
  $h,
  eg,
  tg,
  ng = e(() => {
    s(),
      a(),
      se(),
      o(),
      Wh(),
      (Zh = -0.4),
      (Qh = -0.5),
      (Gh.displayName = `Light Rays`),
      V(Gh, {
        raysColor: {
          type: F.Object,
          title: `Color`,
          controls: {
            mode: {
              type: F.Enum,
              defaultValue: `single`,
              options: [`random`, `single`, `multi`],
              optionTitles: [`Random`, `Single`, `Multi`],
              displaySegmentedControl: !0,
              segmentedControlDirection: `vertical`,
            },
            color: {
              type: F.Color,
              defaultValue: `#FFF`,
              hidden: (e) => e.mode !== `single`,
            },
            color1: {
              type: F.Color,
              defaultValue: `#FFF`,
              hidden: (e) => e.mode !== `multi`,
            },
            color2: {
              type: F.Color,
              defaultValue: `#FFCB47`,
              hidden: (e) => e.mode !== `multi`,
            },
          },
        },
        backgroundColor: {
          type: F.Color,
          defaultValue: `#000`,
          optional: !0,
          title: `Background`,
        },
        animation: {
          type: F.Object,
          icon: `effect`,
          controls: {
            animate: { type: F.Boolean, defaultValue: !0 },
            speed: {
              type: F.Number,
              defaultValue: 10,
              min: 1,
              max: 100,
              step: 1,
              hidden: (e) => !e.animate,
            },
          },
        },
        intensity: {
          type: F.Number,
          defaultValue: 50,
          min: 0,
          max: 100,
          step: 1,
        },
        rays: { type: F.Number, defaultValue: 30, min: 0, max: 100, step: 1 },
        reach: { type: F.Number, defaultValue: 40, min: 0, max: 100, step: 1 },
        position: {
          type: F.Number,
          defaultValue: 80,
          min: 0,
          max: 100,
          step: 1,
          unit: `%`,
        },
        radius: {
          type: F.BorderRadius,
          defaultValue: `0px`,
          description: `More components at [Framer University](https://frameruni.link/cc).`,
        },
      }),
      r.Component,
      ($h = (e) => {
        let t = 1,
          n = 1,
          r = 1,
          i = 1;
        if (e && typeof e == `string`) {
          if (e.startsWith(`rgba(`)) {
            let a = e.slice(5, -1).split(`,`);
            (t = parseInt(a[0]) / 255),
              (n = parseInt(a[1]) / 255),
              (r = parseInt(a[2]) / 255),
              (i = parseFloat(a[3]));
          } else if (e.startsWith(`rgb(`)) {
            let i = e.slice(4, -1).split(`,`);
            (t = parseInt(i[0]) / 255),
              (n = parseInt(i[1]) / 255),
              (r = parseInt(i[2]) / 255);
          } else if (e.startsWith(`#`)) {
            let a = e.slice(1);
            a.length === 3
              ? ((t = parseInt(a[0] + a[0], 16) / 255),
                (n = parseInt(a[1] + a[1], 16) / 255),
                (r = parseInt(a[2] + a[2], 16) / 255))
              : a.length === 6
              ? ((t = parseInt(a.slice(0, 2), 16) / 255),
                (n = parseInt(a.slice(2, 4), 16) / 255),
                (r = parseInt(a.slice(4, 6), 16) / 255))
              : a.length === 8 &&
                ((t = parseInt(a.slice(0, 2), 16) / 255),
                (n = parseInt(a.slice(2, 4), 16) / 255),
                (r = parseInt(a.slice(4, 6), 16) / 255),
                (i = parseInt(a.slice(6, 8), 16) / 255));
          }
        }
        return [t, n, r, i];
      }),
      (eg = `
void main() {
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}`),
      (tg = `
// Uniforms

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;
uniform vec4 u_colors[2];
uniform float u_intensity;
uniform float u_rays;
uniform float u_reach;
uniform vec2 u_rayPos1;
uniform vec2 u_rayPos2;

#ifndef FNC_MOD289
#define FNC_MOD289

float mod289(const in float x) { return x - floor(x * (1. / 289.)) * 289.; }
vec2 mod289(const in vec2 x) { return x - floor(x * (1. / 289.)) * 289.; }
vec3 mod289(const in vec3 x) { return x - floor(x * (1. / 289.)) * 289.; }
vec4 mod289(const in vec4 x) { return x - floor(x * (1. / 289.)) * 289.; }

#endif

#ifndef FNC_PERMUTE
#define FNC_PERMUTE

float permute(const in float x) { return mod289(((x * 34.0) + 1.0) * x); }
vec2 permute(const in vec2 x) { return mod289(((x * 34.0) + 1.0) * x); }
vec3 permute(const in vec3 x) { return mod289(((x * 34.0) + 1.0) * x); }
vec4 permute(const in vec4 x) { return mod289(((x * 34.0) + 1.0) * x); }

#endif

#ifndef FNC_TAYLORINVSQRT
#define FNC_TAYLORINVSQRT
float taylorInvSqrt(in float r) { return 1.79284291400159 - 0.85373472095314 * r; }
vec2 taylorInvSqrt(in vec2 r) { return 1.79284291400159 - 0.85373472095314 * r; }
vec3 taylorInvSqrt(in vec3 r) { return 1.79284291400159 - 0.85373472095314 * r; }
vec4 taylorInvSqrt(in vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; }
#endif

#ifndef FNC_QUINTIC
#define FNC_QUINTIC 

float quintic(const in float v) { return v*v*v*(v*(v*6.0-15.0)+10.0); }
vec2  quintic(const in vec2 v)  { return v*v*v*(v*(v*6.0-15.0)+10.0); }
vec3  quintic(const in vec3 v)  { return v*v*v*(v*(v*6.0-15.0)+10.0); }
vec4  quintic(const in vec4 v)  { return v*v*v*(v*(v*6.0-15.0)+10.0); }

#endif

#ifndef FNC_PNOISE
#define FNC_PNOISE

float pnoise(in vec2 P, in vec2 rep) {
    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);
    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);
    Pi = mod(Pi, rep.xyxy); 
    Pi = mod289(Pi);        
    vec4 ix = Pi.xzxz;
    vec4 iy = Pi.yyww;
    vec4 fx = Pf.xzxz;
    vec4 fy = Pf.yyww;

    vec4 i = permute(permute(ix) + iy);

    vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
    vec4 gy = abs(gx) - 0.5 ;
    vec4 tx = floor(gx + 0.5);
    gx = gx - tx;

    vec2 g00 = vec2(gx.x,gy.x);
    vec2 g10 = vec2(gx.y,gy.y);
    vec2 g01 = vec2(gx.z,gy.z);
    vec2 g11 = vec2(gx.w,gy.w);

    vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));
    g00 *= norm.x;
    g01 *= norm.y;
    g10 *= norm.z;
    g11 *= norm.w;

    float n00 = dot(g00, vec2(fx.x, fy.x));
    float n10 = dot(g10, vec2(fx.y, fy.y));
    float n01 = dot(g01, vec2(fx.z, fy.z));
    float n11 = dot(g11, vec2(fx.w, fy.w));

    vec2 fade_xy = quintic(Pf.xy);
    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
    return 2.3 * n_xy;
}

float pnoise(in vec3 P, in vec3 rep) {
    vec3 Pi0 = mod(floor(P), rep); 
    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); 
    Pi0 = mod289(Pi0);
    Pi1 = mod289(Pi1);
    vec3 Pf0 = fract(P); 
    vec3 Pf1 = Pf0 - vec3(1.0); 
    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
    vec4 iy = vec4(Pi0.yy, Pi1.yy);
    vec4 iz0 = Pi0.zzzz;
    vec4 iz1 = Pi1.zzzz;

    vec4 ixy = permute(permute(ix) + iy);
    vec4 ixy0 = permute(ixy + iz0);
    vec4 ixy1 = permute(ixy + iz1);

    vec4 gx0 = ixy0 * (1.0 / 7.0);
    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
    gx0 = fract(gx0);
    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
    vec4 sz0 = step(gz0, vec4(0.0));
    gx0 -= sz0 * (step(0.0, gx0) - 0.5);
    gy0 -= sz0 * (step(0.0, gy0) - 0.5);

    vec4 gx1 = ixy1 * (1.0 / 7.0);
    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
    gx1 = fract(gx1);
    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
    vec4 sz1 = step(gz1, vec4(0.0));
    gx1 -= sz1 * (step(0.0, gx1) - 0.5);
    gy1 -= sz1 * (step(0.0, gy1) - 0.5);

    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);

    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
    g000 *= norm0.x;
    g010 *= norm0.y;
    g100 *= norm0.z;
    g110 *= norm0.w;
    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
    g001 *= norm1.x;
    g011 *= norm1.y;
    g101 *= norm1.z;
    g111 *= norm1.w;

    float n000 = dot(g000, Pf0);
    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
    float n111 = dot(g111, Pf1);

    vec3 fade_xyz = quintic(Pf0);
    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
    return 2.2 * n_xyz;
}

float pnoise(in vec4 P, in vec4 rep) {
    vec4 Pi0 = mod(floor(P), rep); 
    vec4 Pi1 = mod(Pi0 + 1.0, rep); 
    Pi0 = mod289(Pi0);
    Pi1 = mod289(Pi1);
    vec4 Pf0 = fract(P); 
    vec4 Pf1 = Pf0 - 1.0; 
    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
    vec4 iy = vec4(Pi0.yy, Pi1.yy);
    vec4 iz0 = vec4(Pi0.zzzz);
    vec4 iz1 = vec4(Pi1.zzzz);
    vec4 iw0 = vec4(Pi0.wwww);
    vec4 iw1 = vec4(Pi1.wwww);

    vec4 ixy = permute(permute(ix) + iy);
    vec4 ixy0 = permute(ixy + iz0);
    vec4 ixy1 = permute(ixy + iz1);
    vec4 ixy00 = permute(ixy0 + iw0);
    vec4 ixy01 = permute(ixy0 + iw1);
    vec4 ixy10 = permute(ixy1 + iw0);
    vec4 ixy11 = permute(ixy1 + iw1);

    vec4 gx00 = ixy00 * (1.0 / 7.0);
    vec4 gy00 = floor(gx00) * (1.0 / 7.0);
    vec4 gz00 = floor(gy00) * (1.0 / 6.0);
    gx00 = fract(gx00) - 0.5;
    gy00 = fract(gy00) - 0.5;
    gz00 = fract(gz00) - 0.5;
    vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);
    vec4 sw00 = step(gw00, vec4(0.0));
    gx00 -= sw00 * (step(0.0, gx00) - 0.5);
    gy00 -= sw00 * (step(0.0, gy00) - 0.5);

    vec4 gx01 = ixy01 * (1.0 / 7.0);
    vec4 gy01 = floor(gx01) * (1.0 / 7.0);
    vec4 gz01 = floor(gy01) * (1.0 / 6.0);
    gx01 = fract(gx01) - 0.5;
    gy01 = fract(gy01) - 0.5;
    gz01 = fract(gz01) - 0.5;
    vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);
    vec4 sw01 = step(gw01, vec4(0.0));
    gx01 -= sw01 * (step(0.0, gx01) - 0.5);
    gy01 -= sw01 * (step(0.0, gy01) - 0.5);

    vec4 gx10 = ixy10 * (1.0 / 7.0);
    vec4 gy10 = floor(gx10) * (1.0 / 7.0);
    vec4 gz10 = floor(gy10) * (1.0 / 6.0);
    gx10 = fract(gx10) - 0.5;
    gy10 = fract(gy10) - 0.5;
    gz10 = fract(gz10) - 0.5;
    vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);
    vec4 sw10 = step(gw10, vec4(0.0));
    gx10 -= sw10 * (step(0.0, gx10) - 0.5);
    gy10 -= sw10 * (step(0.0, gy10) - 0.5);

    vec4 gx11 = ixy11 * (1.0 / 7.0);
    vec4 gy11 = floor(gx11) * (1.0 / 7.0);
    vec4 gz11 = floor(gy11) * (1.0 / 6.0);
    gx11 = fract(gx11) - 0.5;
    gy11 = fract(gy11) - 0.5;
    gz11 = fract(gz11) - 0.5;
    vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);
    vec4 sw11 = step(gw11, vec4(0.0));
    gx11 -= sw11 * (step(0.0, gx11) - 0.5);
    gy11 -= sw11 * (step(0.0, gy11) - 0.5);

    vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);
    vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);
    vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);
    vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);
    vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);
    vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);
    vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);
    vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);
    vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);
    vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);
    vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);
    vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);
    vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);
    vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);
    vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);
    vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);

    vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));
    g0000 *= norm00.x;
    g0100 *= norm00.y;
    g1000 *= norm00.z;
    g1100 *= norm00.w;

    vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));
    g0001 *= norm01.x;
    g0101 *= norm01.y;
    g1001 *= norm01.z;
    g1101 *= norm01.w;

    vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));
    g0010 *= norm10.x;
    g0110 *= norm10.y;
    g1010 *= norm10.z;
    g1110 *= norm10.w;

    vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));
    g0011 *= norm11.x;
    g0111 *= norm11.y;
    g1011 *= norm11.z;
    g1111 *= norm11.w;

    float n0000 = dot(g0000, Pf0);
    float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));
    float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));
    float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));
    float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));
    float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));
    float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));
    float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));
    float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));
    float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));
    float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));
    float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));
    float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));
    float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));
    float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));
    float n1111 = dot(g1111, Pf1);

    vec4 fade_xyzw = quintic(Pf0);
    vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);
    vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);
    vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);
    vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);
    float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);
    return 2.2 * n_xyzw;
}
#endif

#ifndef SRGB_EPSILON 
#define SRGB_EPSILON 0.00000001
#endif

#ifndef FNC_SRGB2RGB
#define FNC_SRGB2RGB

float srgb2rgb(float channel) {
    return (channel < 0.04045) ? channel * 0.0773993808 : pow((channel + 0.055) * 0.947867298578199, 2.4);
}

vec3 srgb2rgb(vec3 srgb) {
    return vec3(srgb2rgb(srgb.r + SRGB_EPSILON), 
                srgb2rgb(srgb.g + SRGB_EPSILON),
                srgb2rgb(srgb.b + SRGB_EPSILON));
}

vec4 srgb2rgb(vec4 srgb) {
    return vec4(srgb2rgb(srgb.rgb), srgb.a);
}

#endif

#if !defined(FNC_SATURATE) && !defined(saturate)
#define FNC_SATURATE
#define saturate(x) clamp(x, 0.0, 1.0)
#endif

#ifndef SRGB_EPSILON 
#define SRGB_EPSILON 0.00000001
#endif

#ifndef FNC_RGB2SRGB
#define FNC_RGB2SRGB

float rgb2srgb(float channel) {
    return (channel < 0.0031308) ? channel * 12.92 : 1.055 * pow(channel, 0.4166666666666667) - 0.055;
}

vec3 rgb2srgb(vec3 rgb) {
    return saturate(vec3(rgb2srgb(rgb.r - SRGB_EPSILON), rgb2srgb(rgb.g - SRGB_EPSILON), rgb2srgb(rgb.b - SRGB_EPSILON)));
}

vec4 rgb2srgb(vec4 rgb) {
    return vec4(rgb2srgb(rgb.rgb), rgb.a);
}

#endif

#ifndef FNC_MIXOKLAB
#define FNC_MIXOKLAB
vec3 mixOklab( vec3 colA, vec3 colB, float h ) {

    #ifdef MIXOKLAB_COLORSPACE_SRGB
    colA = srgb2rgb(colA);
    colB = srgb2rgb(colB);
    #endif

    const mat3 kCONEtoLMS = mat3(                
         0.4121656120,  0.2118591070,  0.0883097947,
         0.5362752080,  0.6807189584,  0.2818474174,
         0.0514575653,  0.1074065790,  0.6302613616);
    const mat3 kLMStoCONE = mat3(
         4.0767245293, -1.2681437731, -0.0041119885,
        -3.3072168827,  2.6093323231, -0.7034763098,
         0.2307590544, -0.3411344290,  1.7068625689);

    vec3 lmsA = pow( kCONEtoLMS * colA, vec3(1.0/3.0) );
    vec3 lmsB = pow( kCONEtoLMS * colB, vec3(1.0/3.0) );
    
    vec3 lms = mix( lmsA, lmsB, h );

    vec3 rgb = kLMStoCONE*(lms*lms*lms);

    #ifdef MIXOKLAB_COLORSPACE_SRGB
    return rgb2srgb(rgb);
    #else
    return rgb;
    #endif
}

vec4 mixOklab( vec4 colA, vec4 colB, float h ) {
    return vec4( mixOklab(colA.rgb, colB.rgb, h), mix(colA.a, colB.a, h) );
}
#endif


float rayStrength(vec2 raySource, vec2 rayRefDirection, vec2 coord, float seedA, float seedB, float speed)
{
    vec2 sourceToCoord = coord - raySource;
    float cosAngle = dot(normalize(sourceToCoord), rayRefDirection);
    
    // Calculate the diagonal length
    float diagonal = length(u_resolution);

    return clamp(
        (.45 + 0.15 * sin(cosAngle * seedA + u_time * speed)) +
        (0.3 + 0.2 * cos(-cosAngle * seedB + u_time * speed)),
        u_reach, 1.0) *
        clamp((diagonal - length(sourceToCoord)) / diagonal, u_reach, 1.0);
}

void main()
{
    vec2 uv = gl_FragCoord.xy / u_resolution.xy;
    uv.y = 1.0 - uv.y;
    vec2 coord = vec2(gl_FragCoord.x, u_resolution.y - gl_FragCoord.y);
    float speed = u_rays * 10.0;
    
    // Set the parameters of the sun rays
    vec2 rayPos1 = u_rayPos1;
    vec2 rayRefDir1 = normalize(vec2(1.0, -0.116));
    float raySeedA1 = 36.2214*speed;
    float raySeedB1 = 21.11349*speed;
    float raySpeed1 = 1.5*speed;
    
    vec2 rayPos2 = u_rayPos2;
    vec2 rayRefDir2 = normalize(vec2(1.0, 0.241));
    float raySeedA2 = 22.39910*speed;
    float raySeedB2 = 18.0234*speed;
    float raySpeed2 = 1.1*speed;
    
    // Calculate ray strengths
    float strength1 = rayStrength(rayPos1, rayRefDir1, coord, raySeedA1, raySeedB1, raySpeed1);
    float strength2 = rayStrength(rayPos2, rayRefDir2, coord, raySeedA2, raySeedB2, raySpeed2);
    
    // Calculate brightness attenuation
    float brightness = 1.0*u_reach - (coord.y / u_resolution.y);
    float attenuation = clamp(brightness + (0.5 + u_intensity), 0.0, 1.0);
    
    // Calculate alpha values while preserving color
    float alpha1 = strength1 * attenuation * u_colors[0].a;
    float alpha2 = strength2 * attenuation * u_colors[1].a;
    
    // Pre-multiply the colors with their alpha values
    vec3 premultColor1 = u_colors[0].rgb * alpha1;
    vec3 premultColor2 = u_colors[1].rgb * alpha2;
    
    // Blend the pre-multiplied colors
    vec3 blendedColor = premultColor1 + premultColor2;
    float blendedAlpha = alpha1 + alpha2 * (1.0 - alpha1);
    
    // Un-premultiply the final color
    vec3 finalRGB = blendedColor / max(blendedAlpha, 0.0001);
    
    gl_FragColor = vec4(finalRGB * blendedAlpha, blendedAlpha);
}
`);
  });
function rg(e) {
  let {
      slots: t = [],
      gap: n,
      padding: r,
      paddingPerSide: a,
      paddingTop: o,
      paddingRight: s,
      paddingBottom: l,
      paddingLeft: p,
      speed: v,
      hoverFactor: y,
      direction: S,
      alignment: C,
      sizingOptions: w,
      fadeOptions: E,
      style: j,
    } = e,
    {
      fadeContent: N,
      overflow: P,
      fadeWidth: F,
      fadeInset: ee,
      fadeAlpha: te,
    } = E,
    { widthType: I, heightType: L } = w,
    re = a ? `${o}px ${s}px ${l}px ${p}px` : `${r}px`,
    R = ne.current(),
    z = R === ne.canvas || R === ne.export,
    ie = t.filter(Boolean),
    B = c.count(ie),
    V = B > 0;
  S === !0 && (S = `left`);
  let H = S === `left` || S === `right`,
    ae = k(0),
    U = ag[S];
  M(ae, U);
  let W = d(null),
    G = m(() => [{ current: null }, { current: null }], []),
    [oe, se] = b({ parent: null, children: null }),
    ce = null,
    le = [],
    ue = 0,
    de = 0;
  z && ((ue = B ? Math.floor(10 / B) : 0), (de = 1)),
    !z &&
      V &&
      oe.parent &&
      ((ue = Math.round((oe.parent / oe.children) * 2) + 1),
      (ue = Math.min(ue, ig)),
      (de = 1));
  let fe = h(() => {
      if (V && W.current) {
        let e = H ? W.current.offsetWidth : W.current.offsetHeight,
          t = G[0].current
            ? H
              ? G[0].current.offsetLeft
              : G[0].current.offsetTop
            : 0,
          r =
            (G[1].current
              ? H
                ? G[1].current.offsetLeft + G[1].current.offsetWidth
                : G[1].current.offsetTop + G[1].current.offsetHeight
              : 0) -
            t +
            n;
        se({ parent: e, children: r });
      }
    }, []),
    pe = z ? { contentVisibility: `auto` } : {};
  if (V) {
    if (!z) {
      let e = d(!0);
      i(
        () => (
          T.read(fe, !1, !0),
          pt(W.current, ({ contentSize: t }) => {
            !e.current && (t.width || t.height) && T.read(fe, !1, !0),
              (e.current = !1);
          })
        ),
        []
      );
    }
    ce = c.map(ie, (e, t) => {
      let n;
      t === 0 && (n = G[0]), t === ie.length - 1 && (n = G[1]);
      let r = {
        width: I ? e.props?.width : `100%`,
        height: L ? e.props?.height : `100%`,
      };
      return u(x, {
        inherit: `id`,
        children: u(`li`, {
          ref: n,
          style: r,
          children: f(
            e,
            {
              style: { ...e.props?.style, ...r, flexShrink: 0, ...pe },
              layoutId: e.props.layoutId
                ? e.props.layoutId + `-original-` + t
                : void 0,
            },
            e.props?.children
          ),
        }),
      });
    });
  }
  let me = z ? !0 : O(W);
  if (!z)
    for (let e = 0; e < ue; e++)
      le = le.concat(
        c.map(ie, (t, n) => {
          let r = {
            width: I ? t.props?.width : `100%`,
            height: L ? t.props?.height : `100%`,
            willChange: me ? `transform` : void 0,
          };
          return u(
            x,
            {
              inherit: `id`,
              children: u(
                `li`,
                {
                  style: r,
                  "aria-hidden": !0,
                  children: f(
                    t,
                    {
                      key: e + ` ` + n,
                      style: {
                        ...t.props?.style,
                        width: I ? t.props?.width : `100%`,
                        height: L ? t.props?.height : `100%`,
                        flexShrink: 0,
                        ...pe,
                      },
                      layoutId: t.props.layoutId
                        ? t.props.layoutId + `-dupe-` + e
                        : void 0,
                    },
                    t.props?.children
                  ),
                },
                e + `li` + n
              ),
            },
            e + `lg` + n
          );
        })
      );
  let he = oe.children + oe.children * Math.round(oe.parent / oe.children);
  d(null), d(null), d(0);
  let ge = d(!1),
    _e = A(),
    ve = d(null),
    K = d(null);
  if (!z) {
    _(() => {
      if (!(_e || !he || !v))
        return (
          (K.current = ve.current.animate(
            { transform: [U(0), U(he)] },
            {
              duration: (Math.abs(he) / v) * 1e3,
              iterations: 1 / 0,
              easing: `linear`,
            }
          )),
          () => K.current.cancel()
        );
    }, [y, he, v]);
    let e = h(() => {
      if (!K.current) return;
      let e = document.hidden;
      me && !e && K.current.playState === `paused`
        ? K.current.play()
        : (!me || e) && K.current.playState === `running` && K.current.pause();
    }, [me]);
    _(() => {
      e();
    }, [me, y, he, v]),
      _(
        () => (
          document.addEventListener(`visibilitychange`, e),
          () => {
            document.removeEventListener(`visibilitychange`, e);
          }
        ),
        [e]
      );
  }
  let ye = H ? `to right` : `to bottom`,
    be = F / 2,
    xe = 100 - F / 2,
    Se = dg(ee, 0, be),
    Ce = 100 - ee,
    we = `linear-gradient(${ye}, rgba(0, 0, 0, ${te}) ${Se}%, rgba(0, 0, 0, 1) ${be}%, rgba(0, 0, 0, 1) ${xe}%, rgba(0, 0, 0, ${te}) ${Ce}%)`;
  return V
    ? u(`section`, {
        style: {
          ...og,
          opacity: de,
          WebkitMaskImage: N ? we : void 0,
          maskImage: N ? we : void 0,
          overflow: P ? `visible` : `hidden`,
          padding: re,
        },
        ref: W,
        children: g(D.ul, {
          ref: ve,
          style: {
            ...og,
            gap: n,
            top: S === `bottom` && fg(he) ? -he : void 0,
            left: S === `right` && fg(he) ? -he : void 0,
            placeItems: C,
            position: `relative`,
            flexDirection: H ? `row` : `column`,
            ...j,
            willChange: z || !me ? `auto` : `transform`,
            transform: U(0),
          },
          onMouseEnter: () => {
            (ge.current = !0), K.current && (K.current.playbackRate = y);
          },
          onMouseLeave: () => {
            (ge.current = !1), K.current && (K.current.playbackRate = 1);
          },
          children: [ce, le],
        }),
      })
    : g(`section`, {
        style: sg,
        children: [
          u(`div`, { style: cg, children: `✨` }),
          u(`p`, { style: lg, children: `Connect to Content` }),
          u(`p`, {
            style: ug,
            children: `Add layers or components to infinitely loop on your page.`,
          }),
        ],
      });
}
var ig,
  ag,
  og,
  sg,
  cg,
  lg,
  ug,
  dg,
  fg,
  pg = e(() => {
    a(),
      o(),
      se(),
      E(),
      Ft(),
      (ig = 100),
      (ag = {
        left: (e) => `translateX(-${e}px)`,
        right: (e) => `translateX(${e}px)`,
        top: (e) => `translateY(-${e}px)`,
        bottom: (e) => `translateY(${e}px)`,
      }),
      (rg.defaultProps = {
        gap: 10,
        padding: 10,
        sizingOptions: { widthType: !0, heightType: !0 },
        fadeOptions: {
          fadeContent: !0,
          overflow: !1,
          fadeWidth: 25,
          fadeAlpha: 0,
          fadeInset: 0,
        },
        direction: !0,
      }),
      V(rg, {
        slots: {
          type: F.Array,
          title: `Children`,
          control: { type: F.ComponentInstance },
        },
        speed: {
          type: F.Number,
          title: `Speed`,
          min: 0,
          max: 1e3,
          defaultValue: 100,
          unit: `%`,
          displayStepper: !0,
          step: 5,
        },
        direction: {
          type: F.Enum,
          title: `Direction`,
          options: [`left`, `right`, `top`, `bottom`],
          optionIcons: [
            `direction-left`,
            `direction-right`,
            `direction-up`,
            `direction-down`,
          ],
          optionTitles: [`Left`, `Right`, `Top`, `Bottom`],
          defaultValue: `left`,
          displaySegmentedControl: !0,
        },
        alignment: {
          type: F.Enum,
          title: `Align`,
          options: [`flex-start`, `center`, `flex-end`],
          optionIcons: {
            direction: {
              right: [`align-top`, `align-middle`, `align-bottom`],
              left: [`align-top`, `align-middle`, `align-bottom`],
              top: [`align-left`, `align-center`, `align-right`],
              bottom: [`align-left`, `align-center`, `align-right`],
            },
          },
          defaultValue: `center`,
          displaySegmentedControl: !0,
        },
        gap: { type: F.Number, title: `Gap` },
        padding: {
          title: `Padding`,
          type: F.FusedNumber,
          toggleKey: `paddingPerSide`,
          toggleTitles: [`Padding`, `Padding per side`],
          valueKeys: [
            `paddingTop`,
            `paddingRight`,
            `paddingBottom`,
            `paddingLeft`,
          ],
          valueLabels: [`T`, `R`, `B`, `L`],
          min: 0,
        },
        sizingOptions: {
          type: F.Object,
          title: `Sizing`,
          controls: {
            widthType: {
              type: F.Boolean,
              title: `Width`,
              enabledTitle: `Auto`,
              disabledTitle: `Stretch`,
              defaultValue: !0,
            },
            heightType: {
              type: F.Boolean,
              title: `Height`,
              enabledTitle: `Auto`,
              disabledTitle: `Stretch`,
              defaultValue: !0,
            },
          },
        },
        fadeOptions: {
          type: F.Object,
          title: `Clipping`,
          controls: {
            fadeContent: { type: F.Boolean, title: `Fade`, defaultValue: !0 },
            overflow: {
              type: F.Boolean,
              title: `Overflow`,
              enabledTitle: `Show`,
              disabledTitle: `Hide`,
              defaultValue: !1,
              hidden(e) {
                return e.fadeContent === !0;
              },
            },
            fadeWidth: {
              type: F.Number,
              title: `Width`,
              defaultValue: 25,
              min: 0,
              max: 100,
              unit: `%`,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
            fadeInset: {
              type: F.Number,
              title: `Inset`,
              defaultValue: 0,
              min: 0,
              max: 100,
              unit: `%`,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
            fadeAlpha: {
              type: F.Number,
              title: `Opacity`,
              defaultValue: 0,
              min: 0,
              max: 1,
              step: 0.05,
              hidden(e) {
                return e.fadeContent === !1;
              },
            },
          },
        },
        hoverFactor: {
          type: F.Number,
          title: `Hover`,
          min: 0,
          max: 1,
          unit: `x`,
          defaultValue: 1,
          step: 0.1,
          displayStepper: !0,
          description: `Slows down the speed while you are hovering.`,
        },
      }),
      (og = {
        display: `flex`,
        width: `100%`,
        height: `100%`,
        maxWidth: `100%`,
        maxHeight: `100%`,
        placeItems: `center`,
        margin: 0,
        padding: 0,
        listStyleType: `none`,
        textIndent: `none`,
      }),
      (sg = {
        display: `flex`,
        width: `100%`,
        height: `100%`,
        placeContent: `center`,
        placeItems: `center`,
        flexDirection: `column`,
        color: `#96F`,
        background: `rgba(136, 85, 255, 0.1)`,
        fontSize: 11,
        overflow: `hidden`,
        padding: `20px 20px 30px 20px`,
      }),
      (cg = { fontSize: 32, marginBottom: 10 }),
      (lg = {
        margin: 0,
        marginBottom: 10,
        fontWeight: 600,
        textAlign: `center`,
      }),
      (ug = {
        margin: 0,
        opacity: 0.7,
        maxWidth: 150,
        lineHeight: 1.5,
        textAlign: `center`,
      }),
      (dg = (e, t, n) => Math.min(Math.max(e, t), n)),
      (fg = (e) => typeof e == `number` && !isNaN(e));
  }),
  mg,
  hg,
  gg,
  _g,
  vg,
  yg,
  bg,
  xg,
  Sg,
  Cg,
  wg = e(() => {
    a(),
      se(),
      E(),
      o(),
      (mg = `framer-fC072`),
      (hg = { cNV4xsdxO: `framer-v-104yw04` }),
      (gg = (e) =>
        typeof e == `object` && e && typeof e.src == `string`
          ? e
          : typeof e == `string`
          ? { src: e }
          : void 0),
      (_g = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
      (vg = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (yg = D.create(y)),
      (bg = ({ height: e, id: t, logo: n, width: r, ...i }) => ({
        ...i,
        gXOj0HXL2: n ??
          i.gXOj0HXL2 ?? {
            src: `https://framerusercontent.com/images/vniufJMsSAXh18yjYsUsriXaJgw.png`,
          },
      })),
      (xg = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (Sg = K(
        t(function (e, t) {
          let { activeLocale: r, setLocale: i } = pe(),
            {
              style: a,
              className: o,
              layoutId: s,
              variant: c,
              gXOj0HXL2: l,
              ...f
            } = bg(e),
            {
              baseVariant: p,
              classNames: m,
              clearLoadingGesture: h,
              gestureHandlers: g,
              gestureVariant: _,
              isLoading: v,
              setGestureState: y,
              setVariant: b,
              variants: S,
            } = ve({
              defaultVariant: `cNV4xsdxO`,
              variant: c,
              variantClassNames: hg,
            }),
            C = xg(e, S),
            w = H(mg),
            T = d(null),
            E = n(),
            D = le();
          return u(x, {
            id: s ?? E,
            children: u(yg, {
              animate: S,
              initial: !1,
              children: u(vg, {
                value: _g,
                children: u(te, {
                  ...f,
                  ...g,
                  background: {
                    alt: ``,
                    fit: `fill`,
                    loading: G(D?.y || 0),
                    pixelHeight: 240,
                    pixelWidth: 240,
                    sizes: D?.width || `100vw`,
                    ...gg(l),
                    positionX: `center`,
                    positionY: `center`,
                  },
                  className: H(w, `framer-104yw04`, o, m),
                  "data-framer-name": `Primary`,
                  layoutDependency: C,
                  layoutId: `cNV4xsdxO`,
                  ref: t ?? T,
                  style: { ...a },
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-fC072.framer-1ed5j4m, .framer-fC072 .framer-1ed5j4m { display: block; }`,
          `.framer-fC072.framer-104yw04 { height: 80px; overflow: hidden; position: relative; width: 80px; }`,
        ],
        `framer-fC072`
      )),
      (Cg = Sg),
      (Sg.displayName = `Interactive Components/Logo Image`),
      (Sg.defaultProps = { height: 80, width: 80 }),
      V(Sg, {
        gXOj0HXL2: {
          __defaultAssetReference: `data:framer/asset-reference,vniufJMsSAXh18yjYsUsriXaJgw.png?originalFilename=1.png&preferredSize=auto`,
          title: `Logo`,
          type: F.ResponsiveImage,
        },
      }),
      B(Sg, [{ explicitInter: !0, fonts: [] }], {
        supportsExplicitInterCodegen: !0,
      });
  }),
  Tg,
  Eg,
  Dg,
  Og,
  kg,
  Ag,
  jg,
  Mg,
  Ng,
  Pg,
  Fg,
  Ig,
  Lg = e(() => {
    a(),
      se(),
      E(),
      o(),
      pg(),
      wg(),
      (Tg = U(Cg)),
      (Eg = U(rg)),
      (Dg = `framer-7NuEO`),
      (Og = { FlDLzFKFl: `framer-v-ir1ove` }),
      (kg = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
      (Ag = (e, t) => {
        if (!(!e || typeof e != `object`)) return { ...e, alt: t };
      }),
      (jg = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (Mg = D.create(y)),
      (Ng = ({ height: e, id: t, width: n, ...r }) => ({ ...r })),
      (Pg = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (Fg = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe();
          le();
          let { style: c, className: l, layoutId: f, variant: p, ...m } = Ng(e),
            {
              baseVariant: h,
              classNames: g,
              clearLoadingGesture: _,
              gestureHandlers: v,
              gestureVariant: y,
              isLoading: b,
              setGestureState: S,
              setVariant: C,
              variants: w,
            } = ve({
              defaultVariant: `FlDLzFKFl`,
              ref: i,
              variant: p,
              variantClassNames: Og,
            }),
            T = Pg(e, w),
            E = H(Dg);
          return u(x, {
            id: f ?? a,
            children: u(Mg, {
              animate: w,
              initial: !1,
              children: u(jg, {
                value: kg,
                children: u(D.div, {
                  ...m,
                  ...v,
                  className: H(E, `framer-ir1ove`, l, g),
                  "data-framer-name": `Primary`,
                  layoutDependency: T,
                  layoutId: `FlDLzFKFl`,
                  ref: i,
                  style: { ...c },
                  children: u(N, {
                    children: u(ie, {
                      className: `framer-1jymzst-container`,
                      isModuleExternal: !0,
                      layoutDependency: T,
                      layoutId: `D35EfyMhw-container`,
                      nodeId: `D35EfyMhw`,
                      rendersWithMotion: !0,
                      scopeId: `puazRJmua`,
                      children: u(rg, {
                        alignment: `center`,
                        direction: `left`,
                        fadeOptions: {
                          fadeAlpha: 0,
                          fadeContent: !0,
                          fadeInset: 0,
                          fadeWidth: 12,
                          overflow: !1,
                        },
                        gap: 40,
                        height: `100%`,
                        hoverFactor: 1,
                        id: `D35EfyMhw`,
                        layoutId: `D35EfyMhw`,
                        padding: 10,
                        paddingBottom: 10,
                        paddingLeft: 10,
                        paddingPerSide: !1,
                        paddingRight: 10,
                        paddingTop: 10,
                        sizingOptions: { heightType: !0, widthType: !0 },
                        slots: [
                          u(N, {
                            height: 80,
                            width: `80px`,
                            children: u(ie, {
                              className: `framer-1vu8yde-container`,
                              inComponentSlot: !0,
                              isModuleExternal: !0,
                              layoutDependency: T,
                              layoutId: `ybmPdHEKl-container`,
                              nodeId: `ybmPdHEKl`,
                              rendersWithMotion: !0,
                              scopeId: `puazRJmua`,
                              style: { opacity: 0.4 },
                              children: u(Cg, {
                                gXOj0HXL2: Ag(
                                  {
                                    pixelHeight: 193,
                                    pixelWidth: 200,
                                    src: `https://framerusercontent.com/images/ocx9zNQRcxbPjV5KFmpVBhqmzs.png`,
                                  },
                                  `Logo`
                                ),
                                height: `100%`,
                                id: `ybmPdHEKl`,
                                layoutId: `ybmPdHEKl`,
                                style: { height: `100%`, width: `100%` },
                                width: `100%`,
                              }),
                            }),
                          }),
                          u(N, {
                            height: 80,
                            width: `80px`,
                            children: u(ie, {
                              className: `framer-1gagi4t-container`,
                              inComponentSlot: !0,
                              isModuleExternal: !0,
                              layoutDependency: T,
                              layoutId: `NE_lvSooi-container`,
                              nodeId: `NE_lvSooi`,
                              rendersWithMotion: !0,
                              scopeId: `puazRJmua`,
                              style: { opacity: 0.4 },
                              children: u(Cg, {
                                gXOj0HXL2: Ag(
                                  {
                                    pixelHeight: 188,
                                    pixelWidth: 202,
                                    src: `https://framerusercontent.com/images/7GdNf8zkYHMKiawJpEOsWPcb7Ko.png`,
                                  },
                                  `Logo`
                                ),
                                height: `100%`,
                                id: `NE_lvSooi`,
                                layoutId: `NE_lvSooi`,
                                style: { height: `100%`, width: `100%` },
                                width: `100%`,
                              }),
                            }),
                          }),
                          u(N, {
                            height: 80,
                            width: `80px`,
                            children: u(ie, {
                              className: `framer-1qjvgau-container`,
                              inComponentSlot: !0,
                              isModuleExternal: !0,
                              layoutDependency: T,
                              layoutId: `BYXSdHJjt-container`,
                              nodeId: `BYXSdHJjt`,
                              rendersWithMotion: !0,
                              scopeId: `puazRJmua`,
                              style: { opacity: 0.4 },
                              children: u(Cg, {
                                gXOj0HXL2: Ag(
                                  {
                                    pixelHeight: 181,
                                    pixelWidth: 200,
                                    src: `https://framerusercontent.com/images/Tf1im7USTjPOevJ8WovBlu1JbE.png`,
                                  },
                                  `Logo`
                                ),
                                height: `100%`,
                                id: `BYXSdHJjt`,
                                layoutId: `BYXSdHJjt`,
                                style: { height: `100%`, width: `100%` },
                                width: `100%`,
                              }),
                            }),
                          }),
                          u(N, {
                            height: 80,
                            width: `80px`,
                            children: u(ie, {
                              className: `framer-veyjln-container`,
                              inComponentSlot: !0,
                              isModuleExternal: !0,
                              layoutDependency: T,
                              layoutId: `P28Hbdo1t-container`,
                              nodeId: `P28Hbdo1t`,
                              rendersWithMotion: !0,
                              scopeId: `puazRJmua`,
                              style: { opacity: 0.4 },
                              children: u(Cg, {
                                gXOj0HXL2: Ag(
                                  {
                                    pixelHeight: 200,
                                    pixelWidth: 200,
                                    src: `https://framerusercontent.com/images/7CL9bFiq8XQRnDZR3sjgx6VKONg.png`,
                                  },
                                  `Logo`
                                ),
                                height: `100%`,
                                id: `P28Hbdo1t`,
                                layoutId: `P28Hbdo1t`,
                                style: { height: `100%`, width: `100%` },
                                width: `100%`,
                              }),
                            }),
                          }),
                        ],
                        speed: 25,
                        style: { height: `100%`, width: `100%` },
                        width: `100%`,
                      }),
                    }),
                  }),
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-7NuEO.framer-fexskz, .framer-7NuEO .framer-fexskz { display: block; }`,
          `.framer-7NuEO.framer-ir1ove { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 430px; }`,
          `.framer-7NuEO .framer-1jymzst-container { flex: 1 0 0px; height: 80px; position: relative; width: 1px; }`,
          `.framer-7NuEO .framer-1vu8yde-container, .framer-7NuEO .framer-1gagi4t-container, .framer-7NuEO .framer-1qjvgau-container, .framer-7NuEO .framer-veyjln-container { height: 80px; position: relative; width: 80px; }`,
        ],
        `framer-7NuEO`
      )),
      (Ig = Fg),
      (Fg.displayName = `Client Section`),
      (Fg.defaultProps = { height: 80, width: 430 }),
      B(Fg, [{ explicitInter: !0, fonts: [] }, ...Tg, ...Eg], {
        supportsExplicitInterCodegen: !0,
      });
  });
function Rg(e) {
  let {
      smoothing: t,
      enabled: n,
      horizontalAlignment: r,
      verticalAlignment: i,
      transition: a,
    } = e,
    o = ne.current() === ne.canvas,
    s = Wg(),
    c = { damping: 100, stiffness: zg(t, 0, 100, 2e3, 50) },
    l = k(0),
    f = k(0),
    p = j(l, c),
    m = j(f, c),
    h = d(null),
    g = d(null),
    y = d(null),
    b = d(null),
    x = d(t !== 0),
    S = d(null),
    w = d(null),
    T = d(null),
    E = d(!1),
    D = d(0),
    O = d(0),
    A = d(1),
    M = d(0);
  return (
    _(() => {
      x.current = t !== 0;
    }, [t]),
    _(() => {
      let e,
        t = () => {
          if (o || ((e = requestAnimationFrame(t)), !g.current || !b.current))
            return;
          let n = (x.current ? p.get() : l.get()).toFixed(3),
            r = (x.current ? m.get() : f.get()).toFixed(3),
            i = v.getComputedStyle(g.current),
            a = Bg(g.current, i, n, r, S.current, w.current, T.current),
            c = M.current * A.current;
          (y.current = a),
            (b.current.textContent = `
				[data-followcursor="${s}"] { 
					transform: ${a} !important;
					${c < 0.995 ? `opacity: ${c} !important;` : ``}
				}
			`),
            (S.current = n),
            (w.current = r),
            (T.current = g.current.style.transform);
        };
      if (h.current) {
        let e = h.current.parentElement;
        if (e) {
          let t = e.parentElement;
          t && ((g.current = t), t.setAttribute(`data-followcursor`, s));
        }
      }
      return (
        t(),
        () => {
          e && cancelAnimationFrame(e);
        }
      );
    }, []),
    _(() => {
      let e = (e) => {
          if (!g.current) return;
          let t = !1;
          E.current ||
            ((E.current = !0),
            C(M.current, n ? 1 : 0, {
              ...a,
              onUpdate: (e) => {
                M.current = e;
              },
            }),
            (t = !0));
          let o = v.getComputedStyle(g.current),
            s = new DOMMatrix(o.transform),
            c = g.current.getBoundingClientRect(),
            u = c.left - s.m41,
            d = c.top - s.m42,
            h = v.pageXOffset || document.documentElement.scrollLeft,
            _ = v.pageYOffset || document.documentElement.scrollTop;
          (D.current = h), (O.current = _);
          let y = e.clientX + h - (u + h) - Hg[r] * c.width,
            b = e.clientY + _ - (d + _) - Hg[i] * c.height;
          l.set(y), f.set(b), t && (p.jump(y), m.jump(b));
        },
        t = () => {
          if (!g.current || !E.current) return;
          let e =
              v.scrollX || v.pageXOffset || document.documentElement.scrollLeft,
            t =
              v.scrollY || v.pageYOffset || document.documentElement.scrollTop,
            n = e - D.current,
            r = t - O.current;
          (D.current = e),
            (O.current = t),
            l.set(l.get() + n),
            f.set(f.get() + r);
        };
      return (
        v.addEventListener(`mousemove`, e),
        v.addEventListener(`scroll`, t),
        () => {
          v.removeEventListener(`mousemove`, e),
            v.removeEventListener(`scroll`, t);
        }
      );
    }, [n]),
    _(() => {
      if (!b.current || !g.current) return;
      let e = v.getComputedStyle(g.current);
      (A.current = parseFloat(e.opacity) || 1),
        C(M.current, n && E.current ? 1 : 0, {
          ...a,
          onUpdate: (e) => {
            M.current = e;
          },
        });
    }, [n, a]),
    u(`div`, {
      ref: h,
      style: { ...e.style },
      children: u(`style`, { ref: b }),
    })
  );
}
function zg(e, t, n, r, i) {
  if (t === n) return r;
  let a = (e - t) / (n - t);
  return r + a * (i - r);
}
function Bg(e, t, n, r, i, a, o) {
  (n ||= 0), (r ||= 0), (i ||= 0), (a ||= 0);
  let s = t.transform,
    c = e.style.transform,
    l = n - i,
    u = r - a,
    d = `translate(${l}px, ${u}px)`,
    f = d;
  return (
    c &&
      c !== `none` &&
      (f = o && o !== `none` ? `${d} ${Vg(o)} ${c}` : `${d} ${c}`),
    s && s !== `none` ? `${f} ${s}` : f
  );
}
function Vg(e) {
  return (e.match(/\w+\([^)]+\)/g) || [])
    .reverse()
    .map((e) => {
      let [t, n] = e.match(/(\w+)\(([^)]+)\)/).slice(1),
        r = n.split(`,`).map((e) => e.trim()),
        i = (e) => {
          let [t, n, r, i] = e.match(/^(-?)(\d*\.?\d+)(\D*)$/);
          return `${n ? `` : `-`}${r}${i}`;
        };
      switch (t.toLowerCase()) {
        case `translate`:
        case `translate3d`:
        case `translatex`:
        case `translatey`:
        case `translatez`:
          return `${t}(${r.map(i).join(`, `)})`;
        case `scale`:
        case `scale3d`:
          return `${t}(${r.map((e) => 1 / parseFloat(e)).join(`, `)})`;
        case `scalex`:
        case `scaley`:
        case `scalez`:
          return `${t}(${1 / parseFloat(r[0])})`;
        case `rotate`:
        case `rotatex`:
        case `rotatey`:
        case `rotatez`:
          return `${t}(${i(r[0])})`;
        case `rotate3d`:
          let n = r.map(parseFloat);
          return `${t}(${n[0]}, ${n[1]}, ${n[2]}, ${i(r[3])})`;
        case `skew`:
        case `skewx`:
        case `skewy`:
          return `${t}(${r.map(i).join(`, `)})`;
        case `matrix`:
        case `matrix3d`:
          return (
            console.warn(
              `Inverting ${t} is not supported. Returning original.`
            ),
            e
          );
        default:
          return (
            console.warn(
              `Unknown transform function: ${t}. Returning original.`
            ),
            e
          );
      }
    })
    .join(` `);
}
var Hg,
  Ug,
  Wg,
  Gg = e(() => {
    s(),
      a(),
      se(),
      o(),
      E(),
      (Hg = { left: 0, top: 0, center: 0.5, right: 1, bottom: 1 }),
      (Rg.displayName = `Follow Cursor`),
      V(Rg, {
        enabled: { type: F.Boolean, defaultValue: !0 },
        smoothing: {
          type: F.Number,
          defaultValue: 0,
          min: 0,
          max: 100,
          step: 1,
        },
        horizontalAlignment: {
          type: F.Enum,
          defaultValue: `center`,
          options: [`left`, `center`, `right`],
          optionTitles: [`Left`, `Center`, `Right`],
          displaySegmentedControl: !0,
          title: `Alignment`,
        },
        verticalAlignment: {
          type: F.Enum,
          defaultValue: `center`,
          options: [`top`, `center`, `bottom`],
          optionTitles: [`Top`, `Center`, `Bottom`],
          displaySegmentedControl: !0,
          title: ` `,
        },
        transition: {
          type: F.Transition,
          defaultValue: { type: `spring`, duration: 0.2, bounce: 0 },
          description: `More components at [Framer University](https://frameruni.link/cc).`,
        },
      }),
      (Ug = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`),
      (Wg = () =>
        m(() => {
          let e = ``;
          for (let t = 0; t < 13; t++)
            e += Ug.charAt(Math.floor(Math.random() * 52));
          return e;
        }, []));
  });
function Kg({
  color: e,
  hoverColor: t,
  hoverSize: n,
  hoverShape: r,
  patternPreset: i,
  flip: a,
  lineWidth: o,
  customPatternImage: s,
  customPatternSizing: c,
  tileSize: l,
  customPatternMode: d,
  customPatternPosition: f,
  dotSize: p,
  radius: m,
  smoothing: h,
  style: _,
}) {
  let v = ne.current() === ne.canvas,
    y = i === `custom`,
    b = y && c !== `stretch` ? Qg[f] : Qg.center,
    x = ``,
    S = `${l}px ${l}px`,
    C = `repeat`;
  switch (i) {
    case `grid`:
      x = `repeating-conic-gradient(at ${o}px ${o}px, [color] 0deg 90deg, transparent 90deg 180deg, [color] 180deg 360deg)`;
      break;
    case `checkerboard`:
      x = a
        ? `repeating-conic-gradient([color] 0% 25%, transparent 0% 50%)`
        : `repeating-conic-gradient(transparent 0% 25%, [color] 0% 50%)`;
      break;
    case `horizontalLines`:
      x = `linear-gradient(to top, [color] ${o}px, transparent ${o}px)`;
      break;
    case `verticalLines`:
      x = `linear-gradient(to left, [color] ${o}px, transparent ${o}px)`;
      break;
    case `diagonalLines`:
      let e = o / 2,
        t = qg(l * 2);
      (x = `linear-gradient(to top ${
        a ? `left` : `right`
      }, [color] ${e}px, transparent ${e}px, transparent calc(50% - ${e}px), [color] calc(50% - ${e}px), [color] calc(50% + ${e}px), transparent calc(50% + ${e}px), transparent calc(100% - ${e}px), [color] calc(100% - ${e}px), [color] 100%)`),
        (S = `${t}px ${t}px`);
      break;
    case `dots`:
      x = `radial-gradient([color] ${p / 2 - 0.4}px, transparent ${
        p / 2 + 0.4
      }px)`;
      break;
    case `triangles`:
      x = `linear-gradient(${
        a ? -45 : 45
      }deg, transparent calc(50% - 0.1px), [color] calc(50% + 0.1px))`;
      break;
    case `custom`:
      (x = `url("${s?.src}")`),
        c !== `tile` && ((C = `no-repeat`), (S = Zg[c]));
      break;
  }
  let w = {},
    T = n;
  if (r === `glow`) {
    let e = [];
    for (let t = 0; t < 15; t++) {
      let n = Jg(t, 0, 14, 0, 1);
      e.push(`rgba(255, 255, 255, ${Yg(1 - n)}) ${Jg(t, 0, 14, 0, 100)}%`);
    }
    (w = { maskImage: `radial-gradient(closest-side, ${e.join(`, `)})` }),
      (T = n * 2);
  } else r === `circle` && (w = { borderRadius: `50%` });
  return g(`div`, {
    style: {
      position: `relative`,
      borderRadius: m,
      overflow: `hidden`,
      backgroundImage: y ? `` : x.replace(/\[color\]/g, e),
      backgroundSize: S,
      backgroundPosition: b,
      backgroundRepeat: C,
      ..._,
    },
    children: [
      y &&
        u(`div`, {
          style: {
            position: `absolute`,
            inset: 0,
            backgroundColor: e,
            maskImage: x,
            maskSize: S,
            maskPosition: b,
            maskRepeat: C,
            maskMode: d,
          },
        }),
      u(`div`, {
        style: {
          position: `absolute`,
          inset: 0,
          maskImage: y ? x : x.replace(/\[color\]/g, `white`),
          maskSize: S,
          maskPosition: b,
          maskRepeat: C,
          maskMode: y ? d : void 0,
          WebkitMaskImage: y ? x : x.replace(/\[color\]/g, `white`),
          WebkitMaskSize: S,
          WebkitMaskPosition: b,
          WebkitMaskRepeat: C,
          WebkitMaskMode: y ? d : void 0,
        },
        children: u(`div`, {
          style: {
            position: `absolute`,
            top: v ? `50%` : 0,
            left: v ? `50%` : 0,
            transform: v ? `translate(-50%, -50%)` : void 0,
            width: T,
            height: T,
            backgroundColor: t,
            ...w,
          },
          children: u(`div`, {
            style: { display: `contents` },
            children: u(Rg, {
              enabled: !0,
              smoothing: h,
              horizontalAlignment: `center`,
              verticalAlignment: `center`,
            }),
          }),
        }),
      }),
    ],
  });
}
function qg(e) {
  if (typeof e != `number` || isNaN(e) || e <= 0) return e;
  let t = Math.sqrt(e ** 2 / 2);
  return Number(t.toFixed(2));
}
function Jg(e, t, n, r, i) {
  if (t === n) return r;
  let a = (e - t) / (n - t);
  return r + a * (i - r);
}
var Yg,
  Xg,
  Zg,
  Qg,
  $g = e(() => {
    a(),
      se(),
      Gg(),
      E(),
      (Yg = w(0.7, 0, 0.7, 1)),
      (function (e) {
        (e.Grid = `grid`),
          (e.Checkerboard = `checkerboard`),
          (e.HorizontalLines = `horizontalLines`),
          (e.VerticalLines = `verticalLines`),
          (e.DiagonalLines = `diagonalLines`),
          (e.Dots = `dots`),
          (e.Triangles = `triangles`),
          (e.Custom = `custom`);
      })((Xg ||= {})),
      (Zg = { fill: `cover`, fit: `contain`, stretch: `100% 100%` }),
      (Qg = {
        topLeft: `0 0`,
        topCenter: `50% 0`,
        topRight: `100% 0`,
        left: `0 50%`,
        center: `50% 50%`,
        right: `100% 50%`,
        bottomLeft: `0 100%`,
        bottomCenter: `50% 100%`,
        bottomRight: `100% 100%`,
      }),
      (Kg.displayName = `Shimmer Grid`),
      V(Kg, {
        color: { type: F.Color, defaultValue: `rgba(153, 153, 153, 0.5)` },
        hoverColor: { type: F.Color, defaultValue: `#FFF` },
        hoverSize: {
          type: F.Number,
          defaultValue: 400,
          min: 1,
          max: 2e3,
          step: 1,
        },
        hoverShape: {
          type: F.Enum,
          defaultValue: `glow`,
          options: [`glow`, `circle`],
          optionTitles: [`Glow`, `Circle`],
          displaySegmentedControl: !0,
          title: `Shape`,
        },
        patternPreset: {
          type: F.Enum,
          defaultValue: `grid`,
          options: Object.values(Xg),
          optionTitles: [
            `Grid`,
            `Checkerboard`,
            `Horizontal Lines`,
            `Vertical Lines`,
            `Diagonal Lines`,
            `Dots`,
            `Triangles`,
            `Custom`,
          ],
          title: `Pattern`,
        },
        customPatternImage: {
          type: F.ResponsiveImage,
          title: `Image`,
          hidden: (e) => e.patternPreset !== `custom`,
        },
        customPatternSizing: {
          type: F.Enum,
          defaultValue: `tile`,
          options: [`fill`, `fit`, `stretch`, `tile`],
          optionTitles: [`Fill`, `Fit`, `Stretch`, `Tile`],
          title: `Sizing`,
          hidden: (e) => e.patternPreset !== `custom`,
        },
        flip: {
          type: F.Boolean,
          defaultValue: !1,
          hidden: (e) =>
            e.patternPreset !== `checkerboard` &&
            e.patternPreset !== `triangles` &&
            e.patternPreset !== `diagonalLines`,
        },
        lineWidth: {
          type: F.Number,
          defaultValue: 2,
          min: 1,
          step: 1,
          displayStepper: !0,
          hidden: (e) =>
            e.patternPreset !== `horizontalLines` &&
            e.patternPreset !== `verticalLines` &&
            e.patternPreset !== `diagonalLines` &&
            e.patternPreset !== `grid`,
        },
        tileSize: {
          type: F.Number,
          defaultValue: 50,
          min: 1,
          step: 1,
          hidden: (e) =>
            e.patternPreset === `custom` && e.customPatternSizing !== `tile`,
        },
        dotSize: {
          type: F.Number,
          defaultValue: 10,
          min: 1,
          step: 1,
          displayStepper: !0,
          hidden: (e) => e.patternPreset !== `dots`,
        },
        customPatternPosition: {
          type: F.Enum,
          defaultValue: `center`,
          options: [
            `topLeft`,
            `topCenter`,
            `topRight`,
            `left`,
            `center`,
            `right`,
            `bottomLeft`,
            `bottomCenter`,
            `bottomRight`,
          ],
          optionTitles: [
            `Top Left`,
            `Top Center`,
            `Top Right`,
            `Left`,
            `Center`,
            `Right`,
            `Bottom Left`,
            `Bottom Center`,
            `Bottom Right`,
          ],
          title: `Position`,
          hidden: (e) =>
            e.patternPreset !== `custom` || e.customPatternSizing === `stretch`,
        },
        customPatternMode: {
          type: F.Enum,
          defaultValue: `alpha`,
          options: [`alpha`, `luminance`],
          optionTitles: [`Alpha`, `Luminance`],
          title: `Mode`,
          hidden: (e) => e.patternPreset !== `custom`,
        },
        smoothing: {
          type: F.Number,
          defaultValue: 0,
          min: 0,
          max: 100,
          step: 1,
        },
        radius: {
          type: F.BorderRadius,
          defaultValue: `0px`,
          description: `More components at [Framer University](https://frameruni.link/cc).`,
        },
      });
  });
function e_(e, ...t) {
  let n = {};
  return t?.forEach((t) => t && Object.assign(n, e[t])), n;
}
var t_,
  n_,
  r_,
  i_,
  a_,
  o_,
  s_,
  c_,
  l_,
  u_,
  d_,
  f_ = e(() => {
    a(),
      se(),
      E(),
      o(),
      (t_ = [
        `w7_KsIE4l`,
        `vzbITQZDo`,
        `SNOcQ2Br0`,
        `WhVkMPwK_`,
        `t1M1K4a3d`,
        `XAmoYLJ8t`,
        `fwNbOrS2N`,
        `QU6brcsLn`,
        `rCL9u7Zxj`,
        `CZPwlZ5d0`,
      ]),
      (n_ = `framer-4Pbrk`),
      (r_ = {
        CZPwlZ5d0: `framer-v-1f5w1fd`,
        fwNbOrS2N: `framer-v-1evqec4`,
        QU6brcsLn: `framer-v-4d4oen`,
        rCL9u7Zxj: `framer-v-2rkg4x`,
        SNOcQ2Br0: `framer-v-lup6tp`,
        t1M1K4a3d: `framer-v-5uu4k1`,
        vzbITQZDo: `framer-v-1n5x4vc`,
        w7_KsIE4l: `framer-v-1tk9wg4`,
        WhVkMPwK_: `framer-v-56ijfh`,
        XAmoYLJ8t: `framer-v-xu4osh`,
      }),
      (i_ = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: `spring` }),
      (a_ = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (o_ = D.create(y)),
      (s_ = {
        "Variant 1": `w7_KsIE4l`,
        "Variant 2 - Work": `vzbITQZDo`,
        "Variant 3 - About": `SNOcQ2Br0`,
        "Variant 4 - Recommendation": `WhVkMPwK_`,
        "Variant 5 - Contact ME": `t1M1K4a3d`,
        "Variant Mobile - About": `QU6brcsLn`,
        "Variant Mobile - Work": `fwNbOrS2N`,
        "Variant Mobile COntact": `CZPwlZ5d0`,
        "Variant Mobile Recommen": `rCL9u7Zxj`,
        "Variant Mobile- Home ": `XAmoYLJ8t`,
      }),
      (c_ = ({
        backgroundBlur: e,
        buttonShadows: t,
        height: n,
        id: r,
        width: i,
        ...a
      }) => ({
        ...a,
        QWGJiDAUZ:
          t ??
          a.QWGJiDAUZ ??
          `inset 0px 0.75px 1px 0px rgba(255, 255, 255, 0.24), inset 0px -2px 8px 0px rgba(0, 0, 0, 0.6), 0px 4px 12px 0px rgb(0, 0, 0)`,
        te85aoxcB: e ?? a.te85aoxcB ?? 28,
        variant: s_[a.variant] ?? a.variant ?? `w7_KsIE4l`,
      })),
      (l_ = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (u_ = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe();
          le();
          let {
              style: c,
              className: l,
              layoutId: f,
              variant: p,
              te85aoxcB: m,
              QWGJiDAUZ: h,
              ..._
            } = c_(e),
            {
              baseVariant: v,
              classNames: b,
              clearLoadingGesture: S,
              gestureHandlers: C,
              gestureVariant: w,
              isLoading: T,
              setGestureState: E,
              setVariant: O,
              variants: k,
            } = ve({
              cycleOrder: t_,
              defaultVariant: `w7_KsIE4l`,
              ref: i,
              variant: p,
              variantClassNames: r_,
            }),
            A = l_(e, k),
            { activeVariantCallback: j, delay: M } = ce(v),
            N = j(async (...e) => {
              O(`w7_KsIE4l`);
            }),
            P = j(async (...e) => {
              O(`XAmoYLJ8t`);
            }),
            F = j(async (...e) => {
              O(`vzbITQZDo`);
            }),
            ee = j(async (...e) => {
              O(`fwNbOrS2N`);
            }),
            te = j(async (...e) => {
              O(`SNOcQ2Br0`);
            }),
            L = j(async (...e) => {
              O(`QU6brcsLn`);
            }),
            ne = j(async (...e) => {
              O(`WhVkMPwK_`);
            }),
            re = j(async (...e) => {
              O(`rCL9u7Zxj`);
            }),
            ie = j(async (...e) => {
              O(`t1M1K4a3d`);
            }),
            B = j(async (...e) => {
              O(`CZPwlZ5d0`);
            }),
            V = H(n_);
          return u(x, {
            id: f ?? a,
            children: u(o_, {
              animate: k,
              initial: !1,
              children: u(a_, {
                value: i_,
                children: g(D.div, {
                  ..._,
                  ...C,
                  className: H(V, `framer-1tk9wg4`, l, b),
                  "data-border": !0,
                  "data-framer-name": `Variant 1`,
                  layoutDependency: A,
                  layoutId: `w7_KsIE4l`,
                  ref: i,
                  style: {
                    "--border-bottom-width": `0.25px`,
                    "--border-color": `rgba(255, 255, 255, 0.06)`,
                    "--border-left-width": `0.25px`,
                    "--border-right-width": `0.25px`,
                    "--border-style": `solid`,
                    "--border-top-width": `0.25px`,
                    backdropFilter: `blur(${m}px)`,
                    background: `linear-gradient(180deg, rgba(23, 23, 23, 0.6) 0%, rgb(18, 18, 18) 18.336500563063062%, rgb(23, 23, 23) 65.61092342342343%, rgb(18, 18, 18) 100%)`,
                    borderBottomLeftRadius: 206,
                    borderBottomRightRadius: 206,
                    borderTopLeftRadius: 206,
                    borderTopRightRadius: 206,
                    boxShadow: `inset 0px 0px 6px -6px rgba(255, 255, 255, 0.16), inset 0px -2px 4px 0px rgba(0, 0, 0, 0.5)`,
                    filter: `blur(0px)`,
                    WebkitFilter: `blur(0px)`,
                    ...c,
                  },
                  ...e_(
                    {
                      CZPwlZ5d0: {
                        "data-framer-name": `Variant Mobile COntact`,
                      },
                      fwNbOrS2N: {
                        "data-framer-name": `Variant Mobile - Work`,
                      },
                      QU6brcsLn: {
                        "data-framer-name": `Variant Mobile - About`,
                      },
                      rCL9u7Zxj: {
                        "data-framer-name": `Variant Mobile Recommen`,
                      },
                      SNOcQ2Br0: { "data-framer-name": `Variant 3 - About` },
                      t1M1K4a3d: {
                        "data-framer-name": `Variant 5 - Contact ME`,
                      },
                      vzbITQZDo: { "data-framer-name": `Variant 2 - Work` },
                      WhVkMPwK_: {
                        "data-framer-name": `Variant 4 - Recommendation`,
                      },
                      XAmoYLJ8t: {
                        "data-framer-name": `Variant Mobile- Home `,
                      },
                    },
                    v,
                    w
                  ),
                  children: [
                    u(D.div, {
                      className: `framer-8g2cf2`,
                      "data-framer-name": `BG`,
                      layoutDependency: A,
                      layoutId: `mukEg2hqB`,
                      style: {
                        "--xycjxi": h,
                        background: `linear-gradient(180deg, rgba(61, 87, 217, 0.8) 0%, rgb(28, 44, 163) 15%, rgb(18, 27, 122) 43%, rgb(8, 17, 77) 82%, rgb(4, 10, 59) 100%)`,
                        borderBottomLeftRadius: 373,
                        borderBottomRightRadius: 373,
                        borderTopLeftRadius: 373,
                        borderTopRightRadius: 373,
                        boxShadow: `var(--xycjxi)`,
                      },
                    }),
                    u(I, {
                      href: { hash: `:BgNtyLH0x`, webPageId: `augiA20Il` },
                      motionChild: !0,
                      nodeId: `TmoCK6A7P`,
                      openInNewTab: !1,
                      scopeId: `kdSGrx9Rh`,
                      ...e_(
                        {
                          CZPwlZ5d0: {
                            href: {
                              hash: `:OunIGDRQr`,
                              webPageId: `augiA20Il`,
                            },
                          },
                          fwNbOrS2N: {
                            href: {
                              hash: `:OunIGDRQr`,
                              webPageId: `augiA20Il`,
                            },
                          },
                          QU6brcsLn: {
                            href: {
                              hash: `:OunIGDRQr`,
                              webPageId: `augiA20Il`,
                            },
                          },
                          rCL9u7Zxj: {
                            href: {
                              hash: `:OunIGDRQr`,
                              webPageId: `augiA20Il`,
                            },
                          },
                        },
                        v,
                        w
                      ),
                      children: u(D.a, {
                        className: `framer-1fzc7mf framer-1odjl3v`,
                        layoutDependency: A,
                        layoutId: `TmoCK6A7P`,
                        ...e_(
                          {
                            CZPwlZ5d0: { "data-highlight": !0, onTap: P },
                            fwNbOrS2N: { "data-highlight": !0, onTap: P },
                            QU6brcsLn: { "data-highlight": !0, onTap: P },
                            rCL9u7Zxj: { "data-highlight": !0, onTap: P },
                            SNOcQ2Br0: { "data-highlight": !0, onTap: N },
                            t1M1K4a3d: { "data-highlight": !0, onTap: N },
                            vzbITQZDo: { "data-highlight": !0, onTap: N },
                            WhVkMPwK_: { "data-highlight": !0, onTap: N },
                            XAmoYLJ8t: { "data-highlight": !0, onTap: P },
                          },
                          v,
                          w
                        ),
                        children: u(z, {
                          className: `framer-mas9nt`,
                          layoutDependency: A,
                          layoutId: `B5yPuVIXt`,
                          opacity: 1,
                          requiresOverflowVisible: !0,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 18 20" overflow="visible"><path d="M 0 9.989 L 0 12.632 C 0 16.105 0 17.842 1.025 18.921 C 2.05 20 3.7 20 7 20 L 11 20 C 14.3 20 15.95 20 16.975 18.921 C 18 17.842 18 16.105 18 12.632 L 18 9.989 C 18 8.219 18 7.335 17.644 6.568 C 17.288 5.802 16.624 5.259 15.298 4.173 L 13.298 2.536 C 11.233 0.845 10.2 0 9 0 C 7.8 0 6.767 0.845 4.702 2.536 L 2.702 4.173 C 1.375 5.259 0.712 5.802 0.356 6.568 C 0 7.335 0 8.219 0 9.989 Z" fill="transparent" stroke-width="1.5" stroke="rgb(255,255,255)" stroke-linecap="round" stroke-linejoin="round" stroke-dasharray=""></path></svg>`,
                          withExternalLayout: !0,
                        }),
                      }),
                    }),
                    g(D.div, {
                      className: `framer-19orgnv`,
                      layoutDependency: A,
                      layoutId: `e3ovOXvpZ`,
                      children: [
                        u(I, {
                          href: { hash: `:V5V4Z4DQQ`, webPageId: `augiA20Il` },
                          motionChild: !0,
                          nodeId: `ejC9BUVZk`,
                          openInNewTab: !1,
                          scopeId: `kdSGrx9Rh`,
                          smoothScroll: !0,
                          children: u(D.a, {
                            className: `framer-1i1ec7u framer-1odjl3v`,
                            "data-framer-name": `Section`,
                            "data-highlight": !0,
                            layoutDependency: A,
                            layoutId: `ejC9BUVZk`,
                            onTap: F,
                            ...e_(
                              {
                                CZPwlZ5d0: { onTap: ee },
                                fwNbOrS2N: {
                                  "data-highlight": void 0,
                                  onTap: void 0,
                                },
                                QU6brcsLn: { onTap: ee },
                                rCL9u7Zxj: { onTap: ee },
                                XAmoYLJ8t: { onTap: ee },
                              },
                              v,
                              w
                            ),
                            children: u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(D.p, {
                                  style: {
                                    "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                    "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                    "--framer-font-weight": `500`,
                                    "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                  },
                                  children: `Work`,
                                }),
                              }),
                              className: `framer-ydah4j`,
                              fonts: [`GF;Geist-500`],
                              layoutDependency: A,
                              layoutId: `IzhdkV3ND`,
                              style: {
                                "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                "--framer-link-text-color": `rgb(0, 153, 255)`,
                                "--framer-link-text-decoration": `underline`,
                              },
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                              ...e_(
                                {
                                  CZPwlZ5d0: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Work`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  fwNbOrS2N: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Work`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  QU6brcsLn: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Work`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  rCL9u7Zxj: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Work`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  XAmoYLJ8t: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Work`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                },
                                v,
                                w
                              ),
                            }),
                          }),
                        }),
                        u(I, {
                          href: { hash: `:qiLmUSAi8`, webPageId: `augiA20Il` },
                          motionChild: !0,
                          nodeId: `DXD0d3Id6`,
                          openInNewTab: !1,
                          scopeId: `kdSGrx9Rh`,
                          smoothScroll: !0,
                          ...e_(
                            {
                              CZPwlZ5d0: {
                                href: {
                                  hash: `:cF0GYYqyR`,
                                  webPageId: `augiA20Il`,
                                },
                              },
                              fwNbOrS2N: {
                                href: {
                                  hash: `:cF0GYYqyR`,
                                  webPageId: `augiA20Il`,
                                },
                              },
                              rCL9u7Zxj: {
                                href: {
                                  hash: `:cF0GYYqyR`,
                                  webPageId: `augiA20Il`,
                                },
                              },
                              XAmoYLJ8t: {
                                href: {
                                  hash: `:cF0GYYqyR`,
                                  webPageId: `augiA20Il`,
                                },
                              },
                            },
                            v,
                            w
                          ),
                          children: u(D.a, {
                            className: `framer-1ybrw4g framer-1odjl3v`,
                            "data-framer-name": `Section`,
                            "data-highlight": !0,
                            layoutDependency: A,
                            layoutId: `DXD0d3Id6`,
                            onTap: te,
                            ...e_(
                              {
                                CZPwlZ5d0: {
                                  "data-highlight": void 0,
                                  onTap: void 0,
                                },
                                fwNbOrS2N: { onTap: L },
                                QU6brcsLn: {
                                  "data-highlight": void 0,
                                  onTap: void 0,
                                },
                                rCL9u7Zxj: { onTap: L },
                                XAmoYLJ8t: { onTap: L },
                              },
                              v,
                              w
                            ),
                            children: u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(D.p, {
                                  style: {
                                    "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                    "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                    "--framer-font-weight": `500`,
                                    "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                  },
                                  children: `About`,
                                }),
                              }),
                              className: `framer-1b66h9x`,
                              fonts: [`GF;Geist-500`],
                              layoutDependency: A,
                              layoutId: `o6kRItVko`,
                              style: {
                                "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                "--framer-link-text-color": `rgb(0, 153, 255)`,
                                "--framer-link-text-decoration": `underline`,
                              },
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                              ...e_(
                                {
                                  CZPwlZ5d0: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `About`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  fwNbOrS2N: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `About`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  QU6brcsLn: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `About`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  rCL9u7Zxj: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `About`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  XAmoYLJ8t: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `About`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                },
                                v,
                                w
                              ),
                            }),
                          }),
                        }),
                        u(I, {
                          href: { hash: `:UDHvzrpMW`, webPageId: `augiA20Il` },
                          motionChild: !0,
                          nodeId: `fFeN2rgMa`,
                          openInNewTab: !1,
                          scopeId: `kdSGrx9Rh`,
                          smoothScroll: !0,
                          children: u(D.a, {
                            className: `framer-v7yqpm framer-1odjl3v`,
                            "data-framer-name": `Section`,
                            "data-highlight": !0,
                            layoutDependency: A,
                            layoutId: `fFeN2rgMa`,
                            onTap: ne,
                            ...e_(
                              {
                                CZPwlZ5d0: { onTap: re },
                                fwNbOrS2N: { onTap: re },
                                QU6brcsLn: { onTap: re },
                                rCL9u7Zxj: {
                                  "data-highlight": void 0,
                                  onTap: void 0,
                                },
                                XAmoYLJ8t: { onTap: re },
                              },
                              v,
                              w
                            ),
                            children: u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(D.p, {
                                  style: {
                                    "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                    "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                    "--framer-font-weight": `500`,
                                    "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                  },
                                  children: `Achivement`,
                                }),
                              }),
                              className: `framer-brvgch`,
                              fonts: [`GF;Geist-500`],
                              layoutDependency: A,
                              layoutId: `CkIzm9_wc`,
                              style: {
                                "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                "--framer-link-text-color": `rgb(0, 153, 255)`,
                                "--framer-link-text-decoration": `underline`,
                              },
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                              ...e_(
                                {
                                  CZPwlZ5d0: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Achivement`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  fwNbOrS2N: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Achivement`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  QU6brcsLn: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Achivement`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  rCL9u7Zxj: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Achivement`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  XAmoYLJ8t: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Achievement`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                },
                                v,
                                w
                              ),
                            }),
                          }),
                        }),
                        u(I, {
                          href: { hash: `:k637go2MC`, webPageId: `augiA20Il` },
                          motionChild: !0,
                          nodeId: `Xrk_J2Kv0`,
                          openInNewTab: !1,
                          scopeId: `kdSGrx9Rh`,
                          smoothScroll: !0,
                          children: u(D.a, {
                            className: `framer-19ab23h framer-1odjl3v`,
                            "data-framer-name": `Section`,
                            "data-highlight": !0,
                            layoutDependency: A,
                            layoutId: `Xrk_J2Kv0`,
                            onTap: ie,
                            ...e_(
                              {
                                CZPwlZ5d0: {
                                  "data-highlight": void 0,
                                  onTap: void 0,
                                },
                                fwNbOrS2N: { onTap: B },
                                QU6brcsLn: { onTap: B },
                                rCL9u7Zxj: { onTap: B },
                                XAmoYLJ8t: { onTap: B },
                              },
                              v,
                              w
                            ),
                            children: u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(D.p, {
                                  style: {
                                    "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                    "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                    "--framer-font-weight": `500`,
                                    "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                  },
                                  children: `Contact`,
                                }),
                              }),
                              className: `framer-ro5ufy`,
                              fonts: [`GF;Geist-500`],
                              layoutDependency: A,
                              layoutId: `LNB2PXp4X`,
                              style: {
                                "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                "--framer-link-text-color": `rgb(0, 153, 255)`,
                                "--framer-link-text-decoration": `underline`,
                              },
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                              ...e_(
                                {
                                  CZPwlZ5d0: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Contact`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  fwNbOrS2N: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Contact`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  QU6brcsLn: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Contact`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  rCL9u7Zxj: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Contact`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                  XAmoYLJ8t: {
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-font-weight": `500`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Contact`,
                                      }),
                                    }),
                                    verticalAlignment: `center`,
                                  },
                                },
                                v,
                                w
                              ),
                            }),
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-4Pbrk.framer-1odjl3v, .framer-4Pbrk .framer-1odjl3v { display: block; }`,
          `.framer-4Pbrk.framer-1tk9wg4 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: center; overflow: hidden; padding: 16px 18px 16px 18px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-4Pbrk .framer-8g2cf2 { bottom: 4px; flex: none; left: 4px; overflow: hidden; position: absolute; top: 4px; width: 52px; will-change: var(--framer-will-change-override, transform); z-index: 0; }`,
          `.framer-4Pbrk .framer-1fzc7mf { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 24px; justify-content: center; overflow: visible; padding: 0px; position: relative; text-decoration: none; width: 24px; }`,
          `.framer-4Pbrk .framer-mas9nt { height: 20px; position: relative; width: 18px; }`,
          `.framer-4Pbrk .framer-19orgnv { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }`,
          `.framer-4Pbrk .framer-1i1ec7u, .framer-4Pbrk .framer-1ybrw4g, .framer-4Pbrk .framer-v7yqpm, .framer-4Pbrk .framer-19ab23h { align-content: center; align-items: center; cursor: pointer; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: min-content; }`,
          `.framer-4Pbrk .framer-ydah4j, .framer-4Pbrk .framer-1b66h9x, .framer-4Pbrk .framer-brvgch, .framer-4Pbrk .framer-ro5ufy { flex: none; height: auto; position: relative; white-space: pre; width: auto; }`,
          `.framer-4Pbrk.framer-v-1n5x4vc .framer-8g2cf2 { left: 67px; width: 66px; }`,
          `.framer-4Pbrk.framer-v-1n5x4vc .framer-1fzc7mf, .framer-4Pbrk.framer-v-lup6tp .framer-1fzc7mf, .framer-4Pbrk.framer-v-56ijfh .framer-1fzc7mf, .framer-4Pbrk.framer-v-5uu4k1 .framer-1fzc7mf { cursor: pointer; }`,
          `.framer-4Pbrk.framer-v-lup6tp .framer-8g2cf2 { left: 148px; width: 75px; }`,
          `.framer-4Pbrk.framer-v-56ijfh .framer-8g2cf2 { left: 233px; width: 163px; }`,
          `.framer-4Pbrk.framer-v-5uu4k1 .framer-8g2cf2 { left: unset; right: 4px; width: 88px; }`,
          `.framer-4Pbrk.framer-v-5uu4k1 .framer-1i1ec7u { order: 0; }`,
          `.framer-4Pbrk.framer-v-5uu4k1 .framer-1ybrw4g { order: 1; }`,
          `.framer-4Pbrk.framer-v-5uu4k1 .framer-v7yqpm { order: 2; }`,
          `.framer-4Pbrk.framer-v-5uu4k1 .framer-19ab23h { order: 3; }`,
          `.framer-4Pbrk.framer-v-xu4osh.framer-1tk9wg4, .framer-4Pbrk.framer-v-1evqec4.framer-1tk9wg4, .framer-4Pbrk.framer-v-4d4oen.framer-1tk9wg4, .framer-4Pbrk.framer-v-2rkg4x.framer-1tk9wg4, .framer-4Pbrk.framer-v-1f5w1fd.framer-1tk9wg4 { gap: 20px; height: 50px; padding: 16px; }`,
          `.framer-4Pbrk.framer-v-xu4osh .framer-8g2cf2 { width: 42px; }`,
          `.framer-4Pbrk.framer-v-xu4osh .framer-1fzc7mf, .framer-4Pbrk.framer-v-1evqec4 .framer-1fzc7mf, .framer-4Pbrk.framer-v-4d4oen .framer-1fzc7mf, .framer-4Pbrk.framer-v-2rkg4x .framer-1fzc7mf, .framer-4Pbrk.framer-v-1f5w1fd .framer-1fzc7mf { cursor: pointer; height: 18px; width: 18px; }`,
          `.framer-4Pbrk.framer-v-xu4osh .framer-19orgnv, .framer-4Pbrk.framer-v-1evqec4 .framer-19orgnv, .framer-4Pbrk.framer-v-4d4oen .framer-19orgnv, .framer-4Pbrk.framer-v-2rkg4x .framer-19orgnv, .framer-4Pbrk.framer-v-1f5w1fd .framer-19orgnv { gap: 20px; }`,
          `.framer-4Pbrk.framer-v-xu4osh .framer-ydah4j, .framer-4Pbrk.framer-v-xu4osh .framer-1b66h9x, .framer-4Pbrk.framer-v-xu4osh .framer-brvgch, .framer-4Pbrk.framer-v-xu4osh .framer-ro5ufy, .framer-4Pbrk.framer-v-1evqec4 .framer-ydah4j, .framer-4Pbrk.framer-v-1evqec4 .framer-1b66h9x, .framer-4Pbrk.framer-v-1evqec4 .framer-brvgch, .framer-4Pbrk.framer-v-1evqec4 .framer-ro5ufy, .framer-4Pbrk.framer-v-4d4oen .framer-ydah4j, .framer-4Pbrk.framer-v-4d4oen .framer-1b66h9x, .framer-4Pbrk.framer-v-4d4oen .framer-brvgch, .framer-4Pbrk.framer-v-4d4oen .framer-ro5ufy, .framer-4Pbrk.framer-v-2rkg4x .framer-ydah4j, .framer-4Pbrk.framer-v-2rkg4x .framer-1b66h9x, .framer-4Pbrk.framer-v-2rkg4x .framer-brvgch, .framer-4Pbrk.framer-v-2rkg4x .framer-ro5ufy, .framer-4Pbrk.framer-v-1f5w1fd .framer-ydah4j, .framer-4Pbrk.framer-v-1f5w1fd .framer-1b66h9x, .framer-4Pbrk.framer-v-1f5w1fd .framer-brvgch, .framer-4Pbrk.framer-v-1f5w1fd .framer-ro5ufy { height: 40px; }`,
          `.framer-4Pbrk.framer-v-1evqec4 .framer-8g2cf2 { left: 42px; width: 54px; }`,
          `.framer-4Pbrk.framer-v-1evqec4 .framer-1i1ec7u, .framer-4Pbrk.framer-v-4d4oen .framer-1ybrw4g, .framer-4Pbrk.framer-v-2rkg4x .framer-v7yqpm, .framer-4Pbrk.framer-v-1f5w1fd .framer-1ybrw4g, .framer-4Pbrk.framer-v-1f5w1fd .framer-19ab23h { cursor: unset; }`,
          `.framer-4Pbrk.framer-v-4d4oen .framer-8g2cf2 { left: 92px; width: 58px; }`,
          `.framer-4Pbrk.framer-v-2rkg4x .framer-8g2cf2 { left: 147px; width: 124px; }`,
          `.framer-4Pbrk.framer-v-1f5w1fd .framer-8g2cf2 { left: 267px; width: 65px; }`,
          `.framer-4Pbrk[data-border="true"]::after, .framer-4Pbrk [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
        ],
        `framer-4Pbrk`
      )),
      (d_ = u_),
      (u_.displayName = `MEnu`),
      (u_.defaultProps = { height: 56, width: 495.5 }),
      V(u_, {
        variant: {
          options: [
            `w7_KsIE4l`,
            `vzbITQZDo`,
            `SNOcQ2Br0`,
            `WhVkMPwK_`,
            `t1M1K4a3d`,
            `XAmoYLJ8t`,
            `fwNbOrS2N`,
            `QU6brcsLn`,
            `rCL9u7Zxj`,
            `CZPwlZ5d0`,
          ],
          optionTitles: [
            `Variant 1`,
            `Variant 2 - Work`,
            `Variant 3 - About`,
            `Variant 4 - Recommendation`,
            `Variant 5 - Contact ME`,
            `Variant Mobile- Home `,
            `Variant Mobile - Work`,
            `Variant Mobile - About`,
            `Variant Mobile Recommen`,
            `Variant Mobile COntact`,
          ],
          title: `Variant`,
          type: F.Enum,
        },
        te85aoxcB: {
          defaultValue: 28,
          description: ``,
          title: `Background Blur`,
          type: F.Number,
          unit: `%`,
        },
        QWGJiDAUZ: {
          defaultValue: [
            {
              blur: 1,
              color: `rgba(255, 255, 255, 0.24)`,
              diffusion: 0.5,
              focus: 0.5,
              inset: !0,
              spread: 0,
              type: `box`,
              x: 0,
              y: 0.75,
            },
            {
              blur: 8,
              color: `rgba(0, 0, 0, 0.6)`,
              diffusion: 0.5,
              focus: 0.5,
              inset: !0,
              spread: 0,
              type: `box`,
              x: 0,
              y: -2,
            },
            {
              blur: 12,
              color: `rgb(0, 0, 0)`,
              diffusion: 0.5,
              focus: 0.5,
              inset: !1,
              spread: 0,
              type: `box`,
              x: 0,
              y: 4,
            },
          ],
          title: `Button Shadows`,
          type: F.BoxShadow,
        },
      }),
      B(
        u_,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RruM4mJPby1QNtA.woff2`,
                weight: `500`,
              },
            ],
          },
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  }),
  p_,
  m_,
  h_,
  g_ = e(() => {
    a(),
      o(),
      (p_ = {
        width: `100%`,
        height: `100%`,
        display: `flex`,
        justifyContent: `center`,
        alignItems: `center`,
      }),
      (m_ = {
        ...p_,
        borderRadius: 6,
        background: `rgba(149, 149, 149, 0.1)`,
        border: `1px dashed rgba(149, 149, 149, 0.15)`,
        color: `#a5a5a5`,
        flexDirection: `column`,
      }),
      (h_ = t((e, t) => u(`div`, { style: m_, ref: t })));
  }),
  __,
  v_,
  y_,
  b_,
  x_ = e(() => {
    (y_ = (e) => (
      __ ||
        ((__ = new Map([
          [
            `bold`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M222.14,105.85l-80-80a20,20,0,0,0-28.28,0l-80,80A19.86,19.86,0,0,0,28,120v96a12,12,0,0,0,12,12h64a12,12,0,0,0,12-12V164h24v52a12,12,0,0,0,12,12h64a12,12,0,0,0,12-12V120A19.86,19.86,0,0,0,222.14,105.85ZM204,204H164V152a12,12,0,0,0-12-12H104a12,12,0,0,0-12,12v52H52V121.65l76-76,76,76Z`,
              })
            ),
          ],
          [
            `duotone`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M216,120v96H152V152H104v64H40V120a8,8,0,0,1,2.34-5.66l80-80a8,8,0,0,1,11.32,0l80,80A8,8,0,0,1,216,120Z`,
                opacity: `0.2`,
              }),
              e.createElement(`path`, {
                d: `M219.31,108.68l-80-80a16,16,0,0,0-22.62,0l-80,80A15.87,15.87,0,0,0,32,120v96a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V160h32v56a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V120A15.87,15.87,0,0,0,219.31,108.68ZM208,208H160V152a8,8,0,0,0-8-8H104a8,8,0,0,0-8,8v56H48V120l80-80,80,80Z`,
              })
            ),
          ],
          [
            `fill`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M224,120v96a8,8,0,0,1-8,8H160a8,8,0,0,1-8-8V164a4,4,0,0,0-4-4H108a4,4,0,0,0-4,4v52a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V120a16,16,0,0,1,4.69-11.31l80-80a16,16,0,0,1,22.62,0l80,80A16,16,0,0,1,224,120Z`,
              })
            ),
          ],
          [
            `light`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M217.9,110.1l-80-80a14,14,0,0,0-19.8,0l-80,80A13.92,13.92,0,0,0,34,120v96a6,6,0,0,0,6,6h64a6,6,0,0,0,6-6V158h36v58a6,6,0,0,0,6,6h64a6,6,0,0,0,6-6V120A13.92,13.92,0,0,0,217.9,110.1ZM210,210H158V152a6,6,0,0,0-6-6H104a6,6,0,0,0-6,6v58H46V120a2,2,0,0,1,.58-1.42l80-80a2,2,0,0,1,2.84,0l80,80A2,2,0,0,1,210,120Z`,
              })
            ),
          ],
          [
            `regular`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M219.31,108.68l-80-80a16,16,0,0,0-22.62,0l-80,80A15.87,15.87,0,0,0,32,120v96a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V160h32v56a8,8,0,0,0,8,8h64a8,8,0,0,0,8-8V120A15.87,15.87,0,0,0,219.31,108.68ZM208,208H160V152a8,8,0,0,0-8-8H104a8,8,0,0,0-8,8v56H48V120l80-80,80,80Z`,
              })
            ),
          ],
          [
            `thin`,
            e.createElement(
              e.Fragment,
              null,
              e.createElement(`path`, {
                d: `M216.49,111.51l-80-80a12,12,0,0,0-17,0l-80,80A12,12,0,0,0,36,120v96a4,4,0,0,0,4,4h64a4,4,0,0,0,4-4V156h40v60a4,4,0,0,0,4,4h64a4,4,0,0,0,4-4V120A12,12,0,0,0,216.49,111.51ZM212,212H156V152a4,4,0,0,0-4-4H104a4,4,0,0,0-4,4v60H44V120a4,4,0,0,1,1.17-2.83l80-80a4,4,0,0,1,5.66,0l80,80A4,4,0,0,1,212,120Z`,
              })
            ),
          ],
        ])),
        (v_ = e.forwardRef((t, n) =>
          e.createElement(`g`, { ref: n, ...t }, __.get(t.weight))
        ))),
      v_
    )),
      (b_ = y_);
  });
function S_(e, t, n = ``, r, i) {
  let a = m(() => {
    if (n == null || n?.length === 0) return null;
    let t = n.toLowerCase().replace(/-|\s/g, ``);
    return i[t] ?? w_(e, t);
  }, [r, n]);
  return t ? r : a;
}
var C_,
  w_,
  T_ = e(() => {
    o(),
      se(),
      (C_ = {
        onClick: { type: F.EventHandler },
        onMouseDown: { type: F.EventHandler },
        onMouseUp: { type: F.EventHandler },
        onMouseEnter: { type: F.EventHandler },
        onMouseLeave: { type: F.EventHandler },
      }),
      (w_ = (e, t) => e.find((e) => e.toLowerCase().includes(t)));
  });
function E_(e) {
  let {
      color: t,
      selectByList: n,
      iconSearch: r,
      iconSelection: i,
      onClick: a,
      onMouseDown: o,
      onMouseUp: s,
      onMouseEnter: c,
      onMouseLeave: f,
      weight: p,
      mirrored: m,
    } = e,
    h = d(!1),
    g = S_(D_, n, r, i, A_),
    [v, y] = b(g === `Home` ? b_(l) : null);
  async function x() {
    try {
      let e = await import(`${O_}${g}.js@0.0.57`);
      h.current && y(e.default(l));
    } catch {
      h.current && y(null);
    }
  }
  _(
    () => (
      (h.current = !0),
      x(),
      () => {
        h.current = !1;
      }
    ),
    [g]
  );
  let S = ne.current() === ne.canvas ? u(h_, {}) : null;
  return u(D.div, {
    style: { display: `contents` },
    onClick: a,
    onMouseEnter: c,
    onMouseLeave: f,
    onMouseDown: o,
    onMouseUp: s,
    children: v
      ? u(`svg`, {
          xmlns: `http://www.w3.org/2000/svg`,
          viewBox: `0 0 256 256`,
          style: {
            userSelect: `none`,
            width: `100%`,
            height: `100%`,
            display: `inline-block`,
            fill: t,
            color: t,
            flexShrink: 0,
            transform: m ? `scale(-1, 1)` : void 0,
          },
          focusable: `false`,
          color: t,
          children: u(v, { color: t, weight: p }),
        })
      : S,
  });
}
var D_,
  O_,
  k_,
  A_,
  j_ = e(() => {
    a(),
      o(),
      se(),
      E(),
      g_(),
      x_(),
      T_(),
      (D_ =
        `Acorn.AddressBook.AddressBookTabs.AirTrafficControl.Airplane.AirplaneInFlight.AirplaneLanding.AirplaneTakeoff.AirplaneTaxiing.AirplaneTilt.Airplay.Alarm.Alien.AlignBottom.AlignBottomSimple.AlignCenterVertical.AlignLeft.AlignLeftSimple.AlignRight.AlignRightSimple.AlignTop.AlignTopSimple.AmazonLogo.Ambulance.Anchor.AnchorSimple.AndroidLogo.Angle.AngularLogo.Aperture.AppStoreLogo.AppWindow.AppleLogo.ApplePodcastsLogo.ApproximateEquals.Archive.ArchiveBox.ArchiveTray.Armchair.ArrowArcLeft.ArrowArcRight.ArrowBendDownLeft.ArrowBendDownRight.ArrowBendLeftDown.ArrowBendLeftUp.ArrowBendRightDown.ArrowBendRightUp.ArrowBendUpLeft.ArrowBendUpRight.ArrowCircleDown.ArrowCircleDownLeft.ArrowCircleDownRight.ArrowCircleLeft.ArrowCircleRight.ArrowCircleUp.ArrowCircleUpLeft.ArrowCircleUpRight.ArrowClockwise.ArrowDown.ArrowDownLeft.ArrowDownRight.ArrowElbowDownLeft.ArrowElbowDownRight.ArrowElbowLeft.ArrowElbowLeftDown.ArrowElbowLeftUp.ArrowElbowRight.ArrowElbowRightDown.ArrowElbowRightUp.ArrowElbowUpLeft.ArrowElbowUpRight.ArrowFatDown.ArrowFatLeft.ArrowFatLineDown.ArrowFatLineLeft.ArrowFatLineRight.ArrowFatLineUp.ArrowFatLinesDown.ArrowFatLinesLeft.ArrowFatLinesRight.ArrowFatLinesUp.ArrowFatRight.ArrowFatUp.ArrowLeft.ArrowLineDown.ArrowLineDownLeft.ArrowLineDownRight.ArrowLineLeft.ArrowLineRight.ArrowLineUp.ArrowLineUpLeft.ArrowLineUpRight.ArrowRight.ArrowSquareDown.ArrowSquareDownLeft.ArrowSquareDownRight.ArrowSquareIn.ArrowSquareLeft.ArrowSquareOut.ArrowSquareRight.ArrowSquareUp.ArrowSquareUpLeft.ArrowSquareUpRight.ArrowUDownLeft.ArrowUDownRight.ArrowULeftDown.ArrowULeftUp.ArrowURightDown.ArrowURightUp.ArrowUUpLeft.ArrowUUpRight.ArrowUp.ArrowUpLeft.ArrowUpRight.ArrowsClockwise.ArrowsDownUp.ArrowsHorizontal.ArrowsIn.ArrowsInCardinal.ArrowsInLineVertical.ArrowsInSimple.ArrowsLeftRight.ArrowsMerge.ArrowsOut.ArrowsOutCardinal.ArrowsOutSimple.ArrowsSplit.ArrowsVertical.Article.ArticleMedium.ArticleNyTimes.Asclepius.Asterisk.AsteriskSimple.At.Atom.Avocado.Axe.Baby.BabyCarriage.Backpack.Backspace.Bag.BagSimple.Balloon.Bandaids.Bank.Barbell.Barcode.Barn.Barricade.Baseball.BaseballCap.BaseballHelmet.Basket.Basketball.Bathtub.BatteryCharging.BatteryEmpty.BatteryFull.BatteryHigh.BatteryLow.BatteryMedium.BatteryPlus.BatteryPlusVertical.BatteryVerticalEmpty.BatteryVerticalFull.BatteryVerticalHigh.BatteryVerticalLow.BatteryWarning.BeachBall.Beanie.Bed.BeerBottle.BeerStein.BehanceLogo.Bell.BellRinging.BellSimple.BellSimpleRinging.BellSimpleSlash.BellSimpleZ.BellSlash.BellZ.Belt.BezierCurve.Bicycle.Binary.Binoculars.Biohazard.Bird.Blueprint.Bluetooth.BluetoothConnected.BluetoothSlash.BluetoothX.Boat.Bomb.Bone.Book.BookBookmark.BookOpen.BookOpenText.BookOpenUser.BookUser.Bookmark.BookmarkSimple.Bookmarks.BookmarksSimple.Books.Boot.Boules.BoundingBox.BowlFood.BowlSteam.BowlingBall.BoxArrowDown.BoxArrowUp.BoxingGlove.BracketsAngle.BracketsCurly.BracketsRound.BracketsSquare.Brain.Brandy.Bread.Bridge.Briefcase.BriefcaseMetal.Broadcast.Broom.Browser.Browsers.Bug.BugBeetle.BugDroid.Building.BuildingApartment.BuildingOffice.Buildings.Bulldozer.Bus.Butterfly.CableCar.Cactus.Cake.Calculator.Calendar.CalendarBlank.CalendarCheck.CalendarDot.CalendarDots.CalendarHeart.CalendarMinus.CalendarPlus.CalendarSlash.CalendarStar.CalendarX.CallBell.Camera.CameraPlus.CameraRotate.CameraSlash.Campfire.Car.CarBattery.CarProfile.CarSimple.Cardholder.Cards.CardsThree.CaretCircleDoubleUp.CaretCircleDown.CaretCircleLeft.CaretCircleRight.CaretCircleUp.CaretCircleUpDown.CaretDoubleDown.CaretDoubleLeft.CaretDoubleRight.CaretDoubleUp.CaretDown.CaretLeft.CaretLineDown.CaretLineLeft.CaretLineRight.CaretLineUp.CaretRight.CaretUp.CaretUpDown.Carrot.CashRegister.CassetteTape.CastleTurret.Cat.CellSignalFull.CellSignalHigh.CellSignalLow.CellSignalMedium.CellSignalNone.CellSignalSlash.CellSignalX.CellTower.Certificate.Chair.Chalkboard.ChalkboardSimple.ChalkboardTeacher.Champagne.ChargingStation.ChartBar.ChartBarHorizontal.ChartDonut.ChartLine.ChartLineDown.ChartLineUp.ChartPie.ChartPieSlice.ChartPolar.ChartScatter.Chat.ChatCentered.ChatCenteredDots.ChatCenteredSlash.ChatCenteredText.ChatCircle.ChatCircleDots.ChatCircleSlash.ChatCircleText.ChatDots.ChatSlash.ChatTeardrop.ChatTeardropDots.ChatTeardropSlash.ChatTeardropText.ChatText.Chats.ChatsCircle.ChatsTeardrop.Check.CheckCircle.CheckFat.CheckSquare.CheckSquareOffset.Checkerboard.Checks.Cheers.Cheese.ChefHat.Cherries.Church.Cigarette.CigaretteSlash.Circle.CircleDashed.CircleHalf.CircleHalfTilt.CircleNotch.CirclesFour.CirclesThree.CirclesThreePlus.Circuitry.City.Clipboard.ClipboardText.Clock.ClockAfternoon.ClockClockwise.ClockCountdown.ClockUser.ClosedCaptioning.Cloud.CloudArrowDown.CloudArrowUp.CloudCheck.CloudFog.CloudLightning.CloudMoon.CloudRain.CloudSlash.CloudSnow.CloudSun.CloudWarning.CloudX.Clover.Club.CoatHanger.CodaLogo.Code.CodeBlock.CodeSimple.CodepenLogo.CodesandboxLogo.Coffee.CoffeeBean.Coin.CoinVertical.Coins.Columns.ColumnsPlusLeft.ColumnsPlusRight.Command.Compass.CompassRose.CompassTool.ComputerTower.Confetti.ContactlessPayment.Control.Cookie.CookingPot.Copy.CopySimple.Copyleft.Copyright.CornersIn.CornersOut.Couch.CourtBasketball.Cow.CowboyHat.Cpu.Crane.CraneTower.CreditCard.Cricket.Crop.Cross.Crosshair.CrosshairSimple.Crown.CrownCross.CrownSimple.Cube.CubeFocus.CubeTransparent.CurrencyBtc.CurrencyCircleDollar.CurrencyCny.CurrencyDollar.CurrencyDollarSimple.CurrencyEth.CurrencyEur.CurrencyGbp.CurrencyInr.CurrencyJpy.CurrencyKrw.CurrencyKzt.CurrencyNgn.CurrencyRub.Cursor.CursorClick.CursorText.Cylinder.Database.Desk.Desktop.DesktopTower.Detective.DevToLogo.DeviceMobile.DeviceMobileCamera.DeviceMobileSlash.DeviceMobileSpeaker.DeviceRotate.DeviceTablet.DeviceTabletCamera.DeviceTabletSpeaker.Devices.Diamond.DiamondsFour.DiceFive.DiceFour.DiceOne.DiceSix.DiceThree.DiceTwo.Disc.DiscoBall.DiscordLogo.Divide.Dna.Dog.Door.DoorOpen.Dot.DotOutline.DotsNine.DotsSix.DotsSixVertical.DotsThree.DotsThreeCircle.DotsThreeOutline.DotsThreeVertical.Download.DownloadSimple.Dress.Dresser.DribbbleLogo.Drone.Drop.DropHalf.DropHalfBottom.DropSimple.DropSlash.DropboxLogo.Ear.EarSlash.Egg.EggCrack.Eject.EjectSimple.Elevator.Empty.Engine.Envelope.EnvelopeOpen.EnvelopeSimple.EnvelopeSimpleOpen.Equalizer.Equals.Eraser.EscalatorDown.EscalatorUp.Exam.ExclamationMark.Exclude.ExcludeSquare.Export.Eye.EyeClosed.EyeSlash.Eyedropper.EyedropperSample.Eyeglasses.Eyes.FaceMask.FacebookLogo.Factory.Faders.FadersHorizontal.FalloutShelter.Fan.Farm.FastForward.FastForwardCircle.Feather.FediverseLogo.FigmaLogo.File.FileArchive.FileArrowDown.FileArrowUp.FileAudio.FileC.FileCloud.FileCode.FileCpp.FileCss.FileCsv.FileDashed.FileDoc.FileHtml.FileImage.FileIni.FileJpg.FileJs.FileJsx.FileLock.FileMagnifyingGlass.FileMd.FileMinus.FilePdf.FilePlus.FilePng.FilePpt.FilePy.FileRs.FileSql.FileSvg.FileText.FileTs.FileTsx.FileTxt.FileVideo.FileVue.FileX.FileXls.FileZip.Files.FilmReel.FilmScript.FilmSlate.FilmStrip.Fingerprint.FingerprintSimple.FinnTheHuman.Fire.FireExtinguisher.FireSimple.FireTruck.FirstAid.FirstAidKit.Fish.FishSimple.Flag.FlagBanner.FlagBannerFold.FlagCheckered.FlagPennant.Flame.Flashlight.Flask.FlipHorizontal.FlipVertical.FloppyDisk.FloppyDiskBack.FlowArrow.Flower.FlowerLotus.FlowerTulip.FlyingSaucer.Folder.FolderDashed.FolderLock.FolderMinus.FolderNotch.FolderNotchMinus.FolderNotchOpen.FolderNotchPlus.FolderOpen.FolderPlus.FolderSimple.FolderSimpleDashed.FolderSimpleLock.FolderSimpleMinus.FolderSimplePlus.FolderSimpleStar.FolderSimpleUser.FolderStar.FolderUser.Folders.Football.FootballHelmet.Footprints.ForkKnife.FourK.FrameCorners.FramerLogo.Function.Funnel.FunnelSimple.FunnelSimpleX.FunnelX.GameController.Garage.GasCan.GasPump.Gauge.Gavel.Gear.GearFine.GearSix.GenderFemale.GenderIntersex.GenderMale.GenderNeuter.GenderNonbinary.GenderTransgender.Ghost.Gif.Gift.GitBranch.GitCommit.GitDiff.GitFork.GitMerge.GitPullRequest.GithubLogo.GitlabLogo.GitlabLogoSimple.Globe.GlobeHemisphereEast.GlobeHemisphereWest.GlobeSimple.GlobeSimpleX.GlobeStand.GlobeX.Goggles.Golf.GoodreadsLogo.GoogleCardboardLogo.GoogleChromeLogo.GoogleDriveLogo.GoogleLogo.GooglePhotosLogo.GooglePlayLogo.GooglePodcastsLogo.Gps.GpsFix.GpsSlash.Gradient.GraduationCap.Grains.GrainsSlash.Graph.GraphicsCard.GreaterThan.GreaterThanOrEqual.GridFour.GridNine.Guitar.HairDryer.Hamburger.Hammer.Hand.HandArrowDown.HandArrowUp.HandCoins.HandDeposit.HandEye.HandFist.HandGrabbing.HandHeart.HandPalm.HandPeace.HandPointing.HandSoap.HandSwipeLeft.HandSwipeRight.HandTap.HandWaving.HandWithdraw.Handbag.HandbagSimple.HandsClapping.HandsPraying.Handshake.HardDrive.HardDrives.HardHat.Hash.HashStraight.HeadCircuit.Headlights.Headphones.Headset.Heart.HeartBreak.HeartHalf.HeartStraight.HeartStraightBreak.Heartbeat.Hexagon.HighDefinition.HighHeel.Highlighter.HighlighterCircle.Hockey.Hoodie.Horse.Hospital.Hourglass.HourglassHigh.HourglassLow.HourglassMedium.HourglassSimple.HourglassSimpleHigh.HourglassSimpleLow.House.HouseLine.HouseSimple.Hurricane.IceCream.IdentificationBadge.IdentificationCard.Image.ImageBroken.ImageSquare.Images.ImagesSquare.Infinity.Info.InstagramLogo.Intersect.IntersectSquare.IntersectThree.Intersection.Invoice.Island.Jar.JarLabel.Jeep.Joystick.Kanban.Key.KeyReturn.Keyboard.Keyhole.Knife.Ladder.LadderSimple.Lamp.LampPendant.Laptop.Lasso.LastfmLogo.Layout.Leaf.Lectern.Lego.LegoSmiley.LessThan.LessThanOrEqual.LetterCircleH.LetterCircleP.LetterCircleV.Lifebuoy.Lightbulb.LightbulbFilament.Lighthouse.Lightning.LightningA.LightningSlash.LineSegment.LineSegments.LineVertical.Link.LinkBreak.LinkSimple.LinkSimpleBreak.LinkSimpleHorizontal.LinkedinLogo.LinktreeLogo.LinuxLogo.List.ListBullets.ListChecks.ListDashes.ListHeart.ListMagnifyingGlass.ListNumbers.ListPlus.ListStar.Lock.LockKey.LockKeyOpen.LockLaminated.LockLaminatedOpen.LockOpen.LockSimple.LockSimpleOpen.Lockers.Log.MagicWand.Magnet.MagnetStraight.MagnifyingGlass.MagnifyingGlassMinus.MagnifyingGlassPlus.Mailbox.MapPin.MapPinArea.MapPinLine.MapPinPlus.MapPinSimple.MapPinSimpleArea.MapPinSimpleLine.MapTrifold.MarkdownLogo.MarkerCircle.Martini.MaskHappy.MaskSad.MastodonLogo.MathOperations.MatrixLogo.Medal.MedalMilitary.MediumLogo.Megaphone.MegaphoneSimple.MemberOf.Memory.MessengerLogo.MetaLogo.Meteor.Metronome.Microphone.MicrophoneSlash.MicrophoneStage.Microscope.MicrosoftExcelLogo.MicrosoftOutlookLogo.MicrosoftTeamsLogo.MicrosoftWordLogo.Minus.MinusCircle.MinusSquare.Money.MoneyWavy.Monitor.MonitorArrowUp.MonitorPlay.Moon.MoonStars.Moped.MopedFront.Mosque.Motorcycle.Mountains.Mouse.MouseLeftClick.MouseMiddleClick.MouseRightClick.MouseScroll.MouseSimple.MusicNote.MusicNoteSimple.MusicNotes.MusicNotesMinus.MusicNotesPlus.MusicNotesSimple.NavigationArrow.Needle.Network.NetworkSlash.NetworkX.Newspaper.NewspaperClipping.NotEquals.NotMemberOf.NotSubsetOf.NotSupersetOf.Notches.Note.NoteBlank.NotePencil.Notebook.Notepad.Notification.NotionLogo.NuclearPlant.NumberCircleEight.NumberCircleFive.NumberCircleFour.NumberCircleNine.NumberCircleOne.NumberCircleSeven.NumberCircleSix.NumberCircleThree.NumberCircleTwo.NumberCircleZero.NumberEight.NumberFive.NumberFour.NumberNine.NumberOne.NumberSeven.NumberSix.NumberSquareEight.NumberSquareFive.NumberSquareFour.NumberSquareNine.NumberSquareOne.NumberSquareSeven.NumberSquareSix.NumberSquareThree.NumberSquareTwo.NumberSquareZero.NumberThree.NumberTwo.NumberZero.Numpad.Nut.NyTimesLogo.Octagon.OfficeChair.Onigiri.OpenAiLogo.Option.Orange.OrangeSlice.Oven.Package.PaintBrush.PaintBrushBroad.PaintBrushHousehold.PaintBucket.PaintRoller.Palette.Panorama.Pants.PaperPlane.PaperPlaneRight.PaperPlaneTilt.Paperclip.PaperclipHorizontal.Parachute.Paragraph.Parallelogram.Park.Password.Path.PatreonLogo.Pause.PauseCircle.PawPrint.PaypalLogo.Peace.Pen.PenNib.PenNibStraight.Pencil.PencilCircle.PencilLine.PencilRuler.PencilSimple.PencilSimpleLine.PencilSimpleSlash.PencilSlash.Pentagon.Pentagram.Pepper.Percent.Person.PersonArmsSpread.PersonSimple.PersonSimpleBike.PersonSimpleCircle.PersonSimpleHike.PersonSimpleRun.PersonSimpleSki.PersonSimpleSwim.PersonSimpleTaiChi.PersonSimpleThrow.PersonSimpleWalk.Perspective.Phone.PhoneCall.PhoneDisconnect.PhoneIncoming.PhoneList.PhoneOutgoing.PhonePause.PhonePlus.PhoneSlash.PhoneTransfer.PhoneX.PhosphorLogo.Pi.PianoKeys.PicnicTable.PictureInPicture.PiggyBank.Pill.PingPong.PintGlass.PinterestLogo.Pinwheel.Pipe.PipeWrench.PixLogo.Pizza.Placeholder.Planet.Plant.Play.PlayCircle.PlayPause.Playlist.Plug.PlugCharging.Plugs.PlugsConnected.Plus.PlusCircle.PlusMinus.PlusSquare.PokerChip.PoliceCar.Polygon.Popcorn.Popsicle.PottedPlant.Power.Prescription.Presentation.PresentationChart.Printer.Prohibit.ProhibitInset.ProjectorScreen.ProjectorScreenChart.Pulse.PushPin.PushPinSimple.PushPinSimpleSlash.PushPinSlash.PuzzlePiece.QrCode.Question.QuestionMark.Queue.Quotes.Rabbit.Racquet.Radical.Radio.RadioButton.Radioactive.Rainbow.RainbowCloud.Ranking.ReadCvLogo.Receipt.ReceiptX.Record.Rectangle.RectangleDashed.Recycle.RedditLogo.Repeat.RepeatOnce.ReplitLogo.Resize.Rewind.RewindCircle.RoadHorizon.Robot.Rocket.RocketLaunch.Rows.RowsPlusBottom.RowsPlusTop.Rss.RssSimple.Rug.Ruler.Sailboat.Scales.Scan.ScanSmiley.Scissors.Scooter.Screencast.Screwdriver.Scribble.ScribbleLoop.Scroll.Seal.SealCheck.SealPercent.SealQuestion.SealWarning.Seat.Seatbelt.SecurityCamera.Selection.SelectionAll.SelectionBackground.SelectionForeground.SelectionInverse.SelectionPlus.SelectionSlash.Shapes.Share.ShareFat.ShareNetwork.Shield.ShieldCheck.ShieldCheckered.ShieldChevron.ShieldPlus.ShieldSlash.ShieldStar.ShieldWarning.ShippingContainer.ShirtFolded.ShootingStar.ShoppingBag.ShoppingBagOpen.ShoppingCart.ShoppingCartSimple.Shovel.Shower.Shrimp.Shuffle.ShuffleAngular.ShuffleSimple.Sidebar.SidebarSimple.Sigma.SignIn.SignOut.Signature.Signpost.SimCard.Siren.SketchLogo.SkipBack.SkipBackCircle.SkipForward.SkipForwardCircle.Skull.SkypeLogo.SlackLogo.Sliders.SlidersHorizontal.Slideshow.Smiley.SmileyAngry.SmileyBlank.SmileyMeh.SmileyMelting.SmileyNervous.SmileySad.SmileySticker.SmileyWink.SmileyXEyes.SnapchatLogo.Sneaker.SneakerMove.Snowflake.SoccerBall.Sock.SolarPanel.SolarRoof.SortAscending.SortDescending.SoundcloudLogo.Spade.Sparkle.SpeakerHifi.SpeakerHigh.SpeakerLow.SpeakerNone.SpeakerSimpleHigh.SpeakerSimpleLow.SpeakerSimpleNone.SpeakerSimpleSlash.SpeakerSimpleX.SpeakerSlash.SpeakerX.Speedometer.Sphere.Spinner.SpinnerBall.SpinnerGap.Spiral.SplitHorizontal.SplitVertical.SpotifyLogo.SprayBottle.Square.SquareHalf.SquareHalfBottom.SquareLogo.SquareSplitVertical.SquaresFour.Stack.StackMinus.StackOverflowLogo.StackPlus.StackSimple.Stairs.Stamp.StandardDefinition.Star.StarAndCrescent.StarFour.StarHalf.StarOfDavid.SteamLogo.SteeringWheel.Steps.Stethoscope.Sticker.Stool.Stop.StopCircle.Storefront.Strategy.StripeLogo.Student.SubsetOf.SubsetProperOf.Subtitles.SubtitlesSlash.Subtract.SubtractSquare.Subway.Suitcase.SuitcaseRolling.SuitcaseSimple.Sun.SunDim.SunHorizon.Sunglasses.SupersetOf.SupersetProperOf.Swap.Swatches.SwimmingPool.Sword.Synagogue.Syringe.TShirt.Table.Tabs.Tag.TagChevron.TagSimple.Target.Taxi.TeaBag.TelegramLogo.Television.TelevisionSimple.TennisBall.Tent.Terminal.TerminalWindow.TestTube.TextAUnderline.TextAa.TextAlignCenter.TextAlignJustify.TextAlignLeft.TextAlignRight.TextB.TextColumns.TextH.TextHFive.TextHFour.TextHOne.TextHSix.TextHThree.TextHTwo.TextIndent.TextItalic.TextOutdent.TextStrikethrough.TextSubscript.TextSuperscript.TextT.TextTSlash.TextUnderline.Textbox.Thermometer.ThermometerCold.ThermometerHot.ThermometerSimple.ThreadsLogo.ThreeD.ThumbsDown.ThumbsUp.Ticket.TidalLogo.TiktokLogo.Tilde.Timer.TipJar.Tipi.Tire.ToggleLeft.ToggleRight.Toilet.ToiletPaper.Toolbox.Tooth.Tornado.Tote.ToteSimple.Towel.Tractor.Trademark.TrademarkRegistered.TrafficCone.TrafficSign.TrafficSignal.Train.TrainRegional.TrainSimple.Tram.Translate.Trash.TrashSimple.Tray.TrayArrowDown.TrayArrowUp.TreasureChest.Tree.TreeEvergreen.TreePalm.TreeStructure.TreeView.TrendDown.TrendUp.Triangle.TriangleDashed.Trolley.TrolleySuitcase.Trophy.Truck.TruckTrailer.TumblrLogo.TwitchLogo.TwitterLogo.Umbrella.UmbrellaSimple.Union.Unite.UniteSquare.Upload.UploadSimple.Usb.User.UserCheck.UserCircle.UserCircleCheck.UserCircleDashed.UserCircleGear.UserCircleMinus.UserCirclePlus.UserFocus.UserGear.UserList.UserMinus.UserPlus.UserRectangle.UserSound.UserSquare.UserSwitch.Users.UsersFour.UsersThree.Van.Vault.VectorThree.VectorTwo.Vibrate.Video.VideoCamera.VideoCameraSlash.VideoConference.Vignette.VinylRecord.VirtualReality.Virus.Visor.Voicemail.Volleyball.Wall.Wallet.Warehouse.Warning.WarningCircle.WarningDiamond.WarningOctagon.WashingMachine.Watch.WaveSawtooth.WaveSine.WaveSquare.WaveTriangle.Waveform.WaveformSlash.Waves.Webcam.WebcamSlash.WebhooksLogo.WechatLogo.WhatsappLogo.Wheelchair.WheelchairMotion.WifiHigh.WifiLow.WifiMedium.WifiNone.WifiSlash.WifiX.Wind.Windmill.WindowsLogo.Wine.Wrench.X.XCircle.XLogo.XSquare.Yarn.YinYang.YoutubeLogo`.split(
          `.`
        )),
      (O_ = `https://framer.com/m/phosphor-icons/`),
      (k_ = [`thin`, `light`, `regular`, `bold`, `fill`, `duotone`]),
      (A_ = D_.reduce((e, t) => ((e[t.toLowerCase()] = t), e), {})),
      (E_.displayName = `Phosphor`),
      (E_.defaultProps = {
        width: 24,
        height: 24,
        iconSelection: `House`,
        iconSearch: `House`,
        color: `#66F`,
        selectByList: !0,
        weight: `regular`,
        mirrored: !1,
      }),
      V(E_, {
        selectByList: {
          type: F.Boolean,
          title: `Select`,
          enabledTitle: `List`,
          disabledTitle: `Search`,
          defaultValue: E_.defaultProps.selectByList,
        },
        iconSelection: {
          type: F.Enum,
          options: D_,
          defaultValue: E_.defaultProps.iconSelection,
          title: `Name`,
          hidden: ({ selectByList: e }) => !e,
          description: `Find every icon name on the [Phosphor site](https://phosphoricons.com/)`,
        },
        iconSearch: {
          type: F.String,
          title: `Name`,
          placeholder: `Menu, Wifi, Box…`,
          hidden: ({ selectByList: e }) => e,
        },
        color: {
          type: F.Color,
          title: `Color`,
          defaultValue: E_.defaultProps.color,
        },
        weight: {
          type: F.Enum,
          title: `Weight`,
          optionTitles: k_.map((e) => e.charAt(0).toUpperCase() + e.slice(1)),
          options: k_,
          defaultValue: E_.defaultProps.weight,
        },
        mirrored: {
          type: F.Boolean,
          enabledTitle: `Yes`,
          disabledTitle: `No`,
          defaultValue: E_.defaultProps.mirrored,
        },
        ...C_,
      });
  });
function M_(e, ...t) {
  let n = {};
  return t?.forEach((t) => t && Object.assign(n, e[t])), n;
}
var N_,
  P_,
  F_,
  I_,
  L_,
  R_,
  z_,
  B_,
  V_,
  H_,
  U_,
  W_,
  G_,
  K_,
  q_ = e(() => {
    a(),
      se(),
      E(),
      o(),
      j_(),
      (N_ = U(E_)),
      (P_ = ye(D.div)),
      (F_ = oe(E_)),
      (I_ = [
        `VnAxrCsZD`,
        `YhpbrGmRY`,
        `v198rP5n0`,
        `jVUJF1yBC`,
        `HxtDE9ucL`,
        `V2617cqhF`,
        `tlzR6gLMv`,
      ]),
      (L_ = `framer-ADdGV`),
      (R_ = {
        HxtDE9ucL: `framer-v-1u0ualr`,
        jVUJF1yBC: `framer-v-yuoydt`,
        tlzR6gLMv: `framer-v-19km74t`,
        v198rP5n0: `framer-v-8m8hbc`,
        V2617cqhF: `framer-v-11dpoqa`,
        VnAxrCsZD: `framer-v-1oyuivg`,
        YhpbrGmRY: `framer-v-11pzqi4`,
      }),
      (z_ = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
      (B_ = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (V_ = D.create(y)),
      (H_ = {
        "Dotted Highlight Tag": `YhpbrGmRY`,
        "Grey Linear Tag": `v198rP5n0`,
        "Highlight Tag": `VnAxrCsZD`,
        "Purple Tag": `jVUJF1yBC`,
        "Variant 7": `tlzR6gLMv`,
        "Variant Mobile": `V2617cqhF`,
        Dark: `HxtDE9ucL`,
      }),
      (U_ = ({
        backgroundBlur: e,
        height: t,
        highlight: n,
        icon: r,
        id: i,
        title: a,
        width: o,
        ...s
      }) => ({
        ...s,
        aZ7GvMqIl: r ?? s.aZ7GvMqIl ?? `Acorn`,
        KS7KLFqN8: a ?? s.KS7KLFqN8 ?? `About Landin`,
        rQKAY6456: n ?? s.rQKAY6456 ?? `NEW`,
        variant: H_[s.variant] ?? s.variant ?? `VnAxrCsZD`,
        xAPRy8bad: e ?? s.xAPRy8bad,
      })),
      (W_ = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (G_ = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe();
          le();
          let {
              style: c,
              className: l,
              layoutId: f,
              variant: p,
              aZ7GvMqIl: m,
              rQKAY6456: h,
              KS7KLFqN8: _,
              xAPRy8bad: v,
              ...b
            } = U_(e),
            {
              baseVariant: S,
              classNames: C,
              clearLoadingGesture: w,
              gestureHandlers: T,
              gestureVariant: E,
              isLoading: O,
              setGestureState: k,
              setVariant: A,
              variants: j,
            } = ve({
              cycleOrder: I_,
              defaultVariant: `VnAxrCsZD`,
              ref: i,
              variant: p,
              variantClassNames: R_,
            }),
            M = W_(e, j),
            P = H(L_),
            F = () =>
              ![
                `YhpbrGmRY`,
                `v198rP5n0`,
                `jVUJF1yBC`,
                `HxtDE9ucL`,
                `V2617cqhF`,
                `tlzR6gLMv`,
              ].includes(S),
            ee = () => !![`YhpbrGmRY`, `V2617cqhF`].includes(S),
            te = () => S === `HxtDE9ucL`;
          return u(x, {
            id: f ?? a,
            children: u(V_, {
              animate: j,
              initial: !1,
              children: u(B_, {
                value: z_,
                children: g(D.div, {
                  ...b,
                  ...T,
                  className: H(P, `framer-1oyuivg`, l, C),
                  "data-border": !0,
                  "data-framer-name": `Highlight Tag`,
                  layoutDependency: M,
                  layoutId: `VnAxrCsZD`,
                  ref: i,
                  style: {
                    "--border-bottom-width": `1px`,
                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                    "--border-left-width": `1px`,
                    "--border-right-width": `1px`,
                    "--border-style": `solid`,
                    "--border-top-width": `1px`,
                    backdropFilter: `blur(${v}px)`,
                    background: `linear-gradient(180deg, var(--token-082d630a-c036-4f77-8c8d-5d7b4650e064, rgba(255, 255, 255, 0.08)) -100%, var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)) 100%)`,
                    backgroundColor: `rgba(0, 0, 0, 0)`,
                    borderBottomLeftRadius: 40,
                    borderBottomRightRadius: 40,
                    borderTopLeftRadius: 40,
                    borderTopRightRadius: 40,
                    ...c,
                  },
                  variants: {
                    HxtDE9ucL: {
                      background: `linear-gradient(180deg, var(--token-91acd6b3-0466-4512-bfe0-548e2faebf76, rgba(0, 0, 0, 0.3)) 0%, var(--token-91acd6b3-0466-4512-bfe0-548e2faebf76, rgba(0, 0, 0, 0.3)) 100%)`,
                      backgroundColor: `var(--token-91acd6b3-0466-4512-bfe0-548e2faebf76, rgba(0, 0, 0, 0.3))`,
                    },
                    jVUJF1yBC: {
                      background: `linear-gradient(0.07383128568086761deg, var(--token-ad10564e-4158-40a7-94e1-51af1b841a47, rgba(0, 85, 255, 0.2)) 0%, var(--token-b6113dae-1252-48c9-8fac-f8a781d683c0, rgba(153, 153, 153, 0.1)) 100%)`,
                    },
                    tlzR6gLMv: {
                      background: `linear-gradient(-7.642439925348299e-8deg, var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)) 0%, var(--token-b456af2e-fd88-41ae-8686-ad7692875dfd, rgba(97, 97, 97, 0.09)) 100%)`,
                      backgroundColor: `rgba(0, 0, 0, 0)`,
                    },
                    v198rP5n0: {
                      background: `linear-gradient(-7.642439925348299e-8deg, var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)) 0%, var(--token-b456af2e-fd88-41ae-8686-ad7692875dfd, rgba(97, 97, 97, 0.09)) 100%)`,
                    },
                    V2617cqhF: {
                      background: `linear-gradient(0.07383128568086761deg, var(--token-64bf095d-9ad7-4fc0-9f3c-f96ec87f9b9b, rgba(0, 85, 255, 0.08)) 0%, var(--token-b6113dae-1252-48c9-8fac-f8a781d683c0, rgba(153, 153, 153, 0.1)) 100%)`,
                      backgroundColor: `rgba(0, 0, 0, 0)`,
                    },
                    YhpbrGmRY: {
                      background: `linear-gradient(0.07383128568086761deg, var(--token-64bf095d-9ad7-4fc0-9f3c-f96ec87f9b9b, rgba(0, 85, 255, 0.08)) 0%, var(--token-b6113dae-1252-48c9-8fac-f8a781d683c0, rgba(153, 153, 153, 0.1)) 100%)`,
                    },
                  },
                  ...M_(
                    {
                      HxtDE9ucL: { "data-framer-name": `Dark` },
                      jVUJF1yBC: { "data-framer-name": `Purple Tag` },
                      tlzR6gLMv: { "data-framer-name": `Variant 7` },
                      v198rP5n0: { "data-framer-name": `Grey Linear Tag` },
                      V2617cqhF: { "data-framer-name": `Variant Mobile` },
                      YhpbrGmRY: { "data-framer-name": `Dotted Highlight Tag` },
                    },
                    S,
                    E
                  ),
                  children: [
                    u(D.div, {
                      className: `framer-1nimvst`,
                      "data-framer-name": `Gradient Overlay`,
                      layoutDependency: M,
                      layoutId: `bMqrafKRk`,
                      style: {
                        background: `conic-gradient(from 0deg at 50% 50%, rgba(255, 255, 255, 0.15) 0deg, rgba(255, 255, 255, 0) 72deg, rgba(79, 26, 214, 0.2) 171.8918918918919deg, rgba(255, 255, 255, 0) 270deg, rgba(255, 255, 255, 0.15) 360deg)`,
                        opacity: 0.2,
                      },
                    }),
                    F() &&
                      u(D.div, {
                        className: `framer-nmesiq`,
                        "data-border": !0,
                        "data-framer-name": `Highlighter`,
                        layoutDependency: M,
                        layoutId: `Ac33HUXbw`,
                        style: {
                          "--border-bottom-width": `2px`,
                          "--border-color": `var(--token-a58752c8-168c-47db-857e-906f22f33790, rgba(255, 255, 255, 0.15))`,
                          "--border-left-width": `2px`,
                          "--border-right-width": `2px`,
                          "--border-style": `solid`,
                          "--border-top-width": `2px`,
                          background: `linear-gradient(180deg, rgba(84, 107, 255, 0.97) 0%, rgb(25, 45, 176) 100%)`,
                          borderBottomLeftRadius: 26,
                          borderBottomRightRadius: 26,
                          borderTopLeftRadius: 26,
                          borderTopRightRadius: 26,
                        },
                        children: u(R, {
                          __fromCanvasComponent: !0,
                          children: u(y, {
                            children: u(D.p, {
                              style: {
                                "--font-selector": `R0Y7RE0gU2Fucy03MDA=`,
                                "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                "--framer-font-size": `12px`,
                                "--framer-font-weight": `700`,
                                "--framer-letter-spacing": `-0.5px`,
                                "--framer-line-height": `10px`,
                                "--framer-text-color": `var(--extracted-r6o4lv, var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255)))`,
                              },
                              children: `NEW`,
                            }),
                          }),
                          className: `framer-v01nh6`,
                          "data-framer-name": `Text`,
                          fonts: [`GF;DM Sans-700`],
                          layoutDependency: M,
                          layoutId: `j26Zmiz7Q`,
                          style: {
                            "--extracted-r6o4lv": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                            "--framer-link-text-color": `rgb(0, 153, 255)`,
                            "--framer-link-text-decoration": `underline`,
                          },
                          text: h,
                          verticalAlignment: `top`,
                          withExternalLayout: !0,
                        }),
                      }),
                    u(R, {
                      __fromCanvasComponent: !0,
                      children: u(y, {
                        children: u(D.p, {
                          style: {
                            "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                            "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                            "--framer-letter-spacing": `-0.5px`,
                            "--framer-line-height": `26px`,
                            "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                          },
                          children: u(D.span, {
                            "data-text-fill": `true`,
                            style: {
                              backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                            },
                            children: `About Landin`,
                          }),
                        }),
                      }),
                      className: `framer-1bo88pe`,
                      "data-framer-name": `Title`,
                      fonts: [`GF;Geist-regular`],
                      layoutDependency: M,
                      layoutId: `rkyX3L5tU`,
                      style: {
                        "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                        "--framer-link-text-color": `rgb(0, 153, 255)`,
                        "--framer-link-text-decoration": `underline`,
                      },
                      text: _,
                      variants: {
                        v198rP5n0: {
                          "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                        },
                      },
                      verticalAlignment: `top`,
                      withExternalLayout: !0,
                      ...M_(
                        {
                          tlzR6gLMv: {
                            children: u(y, {
                              children: u(D.p, {
                                style: {
                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                  "--framer-font-size": `12px`,
                                  "--framer-letter-spacing": `-0.5px`,
                                  "--framer-line-height": `26px`,
                                  "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                },
                                children: u(D.span, {
                                  "data-text-fill": `true`,
                                  style: {
                                    backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                  },
                                  children: `About Landin`,
                                }),
                              }),
                            }),
                          },
                          v198rP5n0: {
                            children: u(y, {
                              children: u(D.p, {
                                style: {
                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                  "--framer-letter-spacing": `-0.5px`,
                                  "--framer-line-height": `26px`,
                                  "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                },
                                children: u(D.span, {
                                  "data-text-fill": `true`,
                                  style: {
                                    backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                  },
                                  children: `About Landin`,
                                }),
                              }),
                            }),
                          },
                          V2617cqhF: {
                            children: u(y, {
                              children: u(D.p, {
                                style: {
                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                  "--framer-font-size": `12px`,
                                  "--framer-letter-spacing": `-0.5px`,
                                  "--framer-line-height": `26px`,
                                  "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                },
                                children: u(D.span, {
                                  "data-text-fill": `true`,
                                  style: {
                                    backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                  },
                                  children: `About Landin`,
                                }),
                              }),
                            }),
                          },
                        },
                        S,
                        E
                      ),
                    }),
                    ee() &&
                      u(D.div, {
                        className: `framer-1ihcrbw`,
                        "data-border": !0,
                        "data-framer-name": `Icon`,
                        layoutDependency: M,
                        layoutId: `dvlHHlvlP`,
                        style: {
                          "--border-bottom-width": `2px`,
                          "--border-color": `var(--token-a58752c8-168c-47db-857e-906f22f33790, rgba(255, 255, 255, 0.15))`,
                          "--border-left-width": `2px`,
                          "--border-right-width": `2px`,
                          "--border-style": `solid`,
                          "--border-top-width": `2px`,
                          background: `linear-gradient(180deg, var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214)) 0%, rgb(128, 89, 227) 100%)`,
                          borderBottomLeftRadius: 30,
                          borderBottomRightRadius: 30,
                          borderTopLeftRadius: 30,
                          borderTopRightRadius: 30,
                        },
                        variants: {
                          V2617cqhF: {
                            background: `linear-gradient(180deg, rgb(70, 17, 175) 0%, rgb(116, 50, 247) 100%)`,
                          },
                          YhpbrGmRY: {
                            background: `linear-gradient(180deg, rgb(84, 107, 255) 0%, rgb(30, 50, 182) 100%)`,
                          },
                        },
                        children: u(N, {
                          children: u(ie, {
                            className: `framer-11jlme6-container`,
                            isAuthoredByUser: !0,
                            isModuleExternal: !0,
                            layoutDependency: M,
                            layoutId: `EdTwHMoks-container`,
                            nodeId: `EdTwHMoks`,
                            rendersWithMotion: !0,
                            scopeId: `pO03HjKnD`,
                            children: u(E_, {
                              color: `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                              height: `100%`,
                              iconSearch: `House`,
                              iconSelection: m,
                              id: `EdTwHMoks`,
                              layoutId: `EdTwHMoks`,
                              mirrored: !1,
                              selectByList: !0,
                              style: { height: `100%`, width: `100%` },
                              weight: `duotone`,
                              width: `100%`,
                            }),
                          }),
                        }),
                      }),
                    ee() &&
                      u(P_, {
                        __framer__spring: {
                          bounce: 0.2,
                          damping: 60,
                          delay: 0,
                          duration: 0.3,
                          durationBasedSpring: !1,
                          ease: [0.44, 0, 0.56, 1],
                          mass: 1,
                          stiffness: 300,
                          type: `spring`,
                        },
                        __framer__styleTransformEffectEnabled: !0,
                        __framer__transformTargets: [
                          {
                            target: {
                              opacity: 0,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 0.3,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                          {
                            target: {
                              opacity: 1,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 1,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                        ],
                        __framer__transformTrigger: `onInView`,
                        __perspectiveFX: !1,
                        __smartComponentFX: !0,
                        __targetOpacity: 1,
                        className: `framer-ow7br5`,
                        "data-framer-name": `Blue Line`,
                        layoutDependency: M,
                        layoutId: `ifb5CDcyg`,
                        style: {
                          background: `linear-gradient(90.00000000000155deg, rgba(79, 26, 214, 0) 0%, var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214)) 50%, rgba(0, 85, 255, 0) 100%)`,
                        },
                        variants: {
                          YhpbrGmRY: {
                            background: `linear-gradient(90.00000000000155deg, rgba(26, 51, 214, 0) 0%, rgb(26, 67, 214) 50%, rgba(0, 85, 255, 0) 100%)`,
                          },
                        },
                      }),
                    te() &&
                      u(D.div, {
                        className: `framer-1j4mwyj`,
                        "data-framer-name": `Shadow`,
                        layoutDependency: M,
                        layoutId: `xRNVP6084`,
                        style: {
                          background: `radial-gradient(50% 50% at 50% 50%, rgba(79, 26, 214, 0.15) 0%, rgb(15, 9, 18) 100%)`,
                          boxShadow: `inset 0px 10px 10px -1px rgba(79, 26, 214, 0.1)`,
                        },
                      }),
                  ],
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-ADdGV.framer-jiung6, .framer-ADdGV .framer-jiung6 { display: block; }`,
          `.framer-ADdGV.framer-1oyuivg { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: center; overflow: hidden; padding: 6px 16px 6px 6px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-ADdGV .framer-1nimvst { flex: none; height: 100%; left: 0px; overflow: visible; position: absolute; right: 0px; top: calc(50.00000000000002% - 100% / 2); }`,
          `.framer-ADdGV .framer-nmesiq { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; padding: 9px 10px 9px 10px; position: relative; width: min-content; }`,
          `.framer-ADdGV .framer-v01nh6, .framer-ADdGV .framer-1bo88pe { flex: none; height: auto; position: relative; white-space: pre; width: auto; z-index: 1; }`,
          `.framer-ADdGV .framer-1ihcrbw { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; padding: 8px; position: relative; width: min-content; }`,
          `.framer-ADdGV .framer-11jlme6-container { flex: none; height: 13px; position: relative; width: 13px; }`,
          `.framer-ADdGV .framer-ow7br5 { flex: none; height: 1px; left: calc(50.3937007874016% - 60px / 2); position: absolute; top: 0px; width: 60px; z-index: 1; }`,
          `.framer-ADdGV .framer-1j4mwyj { flex: none; height: 100%; left: calc(50.00000000000002% - 100% / 2); overflow: visible; position: absolute; top: calc(50.00000000000002% - 100% / 2); width: 100%; z-index: 0; }`,
          `.framer-ADdGV.framer-v-11pzqi4.framer-1oyuivg { gap: 10px; }`,
          `.framer-ADdGV.framer-v-11pzqi4 .framer-1nimvst, .framer-ADdGV.framer-v-8m8hbc .framer-1nimvst, .framer-ADdGV.framer-v-yuoydt .framer-1nimvst, .framer-ADdGV.framer-v-1u0ualr .framer-1nimvst, .framer-ADdGV.framer-v-11dpoqa .framer-1nimvst, .framer-ADdGV.framer-v-19km74t .framer-1nimvst { order: 4; }`,
          `.framer-ADdGV.framer-v-11pzqi4 .framer-1bo88pe, .framer-ADdGV.framer-v-8m8hbc .framer-1bo88pe, .framer-ADdGV.framer-v-yuoydt .framer-1bo88pe, .framer-ADdGV.framer-v-1u0ualr .framer-1bo88pe, .framer-ADdGV.framer-v-11dpoqa .framer-1bo88pe, .framer-ADdGV.framer-v-19km74t .framer-1bo88pe { order: 2; }`,
          `.framer-ADdGV.framer-v-11pzqi4 .framer-1ihcrbw { order: 1; }`,
          `.framer-ADdGV.framer-v-11pzqi4 .framer-ow7br5 { left: calc(50.3937007874016% - 62% / 2); order: 3; width: 62%; }`,
          `.framer-ADdGV.framer-v-8m8hbc.framer-1oyuivg, .framer-ADdGV.framer-v-yuoydt.framer-1oyuivg, .framer-ADdGV.framer-v-1u0ualr.framer-1oyuivg { gap: 10px; padding: 6px 16px 6px 16px; }`,
          `.framer-ADdGV.framer-v-1u0ualr .framer-1j4mwyj { order: 5; }`,
          `.framer-ADdGV.framer-v-11dpoqa.framer-1oyuivg { gap: 8px; padding: 4px 8px 4px 8px; }`,
          `.framer-ADdGV.framer-v-11dpoqa .framer-1ihcrbw { gap: 0px; order: 1; padding: 6px; }`,
          `.framer-ADdGV.framer-v-11dpoqa .framer-11jlme6-container { height: 12px; width: 12px; }`,
          `.framer-ADdGV.framer-v-11dpoqa .framer-ow7br5 { left: calc(50.3937007874016% - 80px / 2); order: 3; width: 80px; }`,
          `.framer-ADdGV.framer-v-19km74t.framer-1oyuivg { gap: 10px; height: 30px; padding: 6px 16px 6px 16px; }`,
          `.framer-ADdGV[data-border="true"]::after, .framer-ADdGV [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
        ],
        `framer-ADdGV`
      )),
      (K_ = G_),
      (G_.displayName = `Tag/Primary Tag 2`),
      (G_.defaultProps = { height: 40, width: 172 }),
      V(G_, {
        variant: {
          options: [
            `VnAxrCsZD`,
            `YhpbrGmRY`,
            `v198rP5n0`,
            `jVUJF1yBC`,
            `HxtDE9ucL`,
            `V2617cqhF`,
            `tlzR6gLMv`,
          ],
          optionTitles: [
            `Highlight Tag`,
            `Dotted Highlight Tag`,
            `Grey Linear Tag`,
            `Purple Tag`,
            `Dark`,
            `Variant Mobile`,
            `Variant 7`,
          ],
          title: `Variant`,
          type: F.Enum,
        },
        aZ7GvMqIl: F_?.iconSelection && {
          ...F_.iconSelection,
          defaultValue: `Acorn`,
          description: void 0,
          hidden: void 0,
          title: `Icon`,
        },
        rQKAY6456: {
          defaultValue: `NEW`,
          description: `If the tag contains a mini tag, enter this text. Use All Uppercase.`,
          displayTextArea: !1,
          placeholder: ``,
          title: `Highlight`,
          type: F.String,
        },
        KS7KLFqN8: {
          defaultValue: `About Landin`,
          displayTextArea: !0,
          title: `Title`,
          type: F.String,
        },
        xAPRy8bad: {
          defaultValue: 0,
          title: `Background Blur`,
          type: F.Number,
        },
      }),
      B(
        G_,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `DM Sans`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/dmsans/v16/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwARZthS2f3ZGMZpg.woff2`,
                weight: `700`,
              },
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RnOM4mJPby1QNtA.woff2`,
                weight: `400`,
              },
            ],
          },
          ...N_,
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  });
function J_(e, ...t) {
  let n = {};
  return t?.forEach((t) => t && Object.assign(n, e[t])), n;
}
var Y_,
  X_,
  Z_,
  Q_,
  $_,
  ev,
  tv,
  nv,
  rv,
  iv,
  av,
  ov,
  sv,
  cv = e(() => {
    a(),
      se(),
      E(),
      o(),
      (Y_ = [`CyOidWSxa`, `gJePCiFxC`, `CqJihxKtO`]),
      (X_ = `framer-a9Wy5`),
      (Z_ = {
        CqJihxKtO: `framer-v-gona14`,
        CyOidWSxa: `framer-v-7nutjk`,
        gJePCiFxC: `framer-v-1y6abvb`,
      }),
      (Q_ = { duration: 0, type: `tween` }),
      ($_ = {
        delay: 0,
        duration: 0.7,
        ease: [0.12, 0.23, 0.5, 1],
        type: `tween`,
      }),
      (ev = (e, t) => `translate(-50%, -50%) ${t}`),
      (tv = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (nv = D.create(y)),
      (rv = {
        "Available-2": `gJePCiFxC`,
        Available: `CyOidWSxa`,
        Unavailable: `CqJihxKtO`,
      }),
      (iv = ({
        greenText: e,
        height: t,
        id: n,
        link: r,
        redText: i,
        width: a,
        ...o
      }) => ({
        ...o,
        jn909WTNI: e ?? o.jn909WTNI ?? `Open to Work`,
        tCgMNdSJ8: i ?? o.tCgMNdSJ8 ?? `UNAVAILABLE`,
        variant: rv[o.variant] ?? o.variant ?? `CyOidWSxa`,
        zM2dkJ0Mt: r ?? o.zM2dkJ0Mt,
      })),
      (av = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (ov = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe();
          le();
          let {
              style: c,
              className: l,
              layoutId: f,
              variant: p,
              jn909WTNI: m,
              tCgMNdSJ8: h,
              zM2dkJ0Mt: _,
              ...v
            } = iv(e),
            {
              baseVariant: b,
              classNames: S,
              clearLoadingGesture: C,
              gestureHandlers: w,
              gestureVariant: T,
              isLoading: E,
              setGestureState: O,
              setVariant: k,
              variants: A,
            } = ve({
              cycleOrder: Y_,
              defaultVariant: `CyOidWSxa`,
              ref: i,
              variant: p,
              variantClassNames: Z_,
            }),
            j = av(e, A),
            { activeVariantCallback: M, delay: N } = ce(b),
            P = M(async (...e) => {
              await N(() => k(`gJePCiFxC`), 1e3);
            }),
            F = M(async (...e) => {
              await N(() => k(`CyOidWSxa`), 1e3);
            });
          he(b, { CqJihxKtO: void 0, default: P, gJePCiFxC: F });
          let ee = H(X_);
          return u(x, {
            id: f ?? a,
            children: u(nv, {
              animate: A,
              initial: !1,
              children: u(tv, {
                value: Q_,
                ...J_({ gJePCiFxC: { value: $_ } }, b, T),
                children: u(I, {
                  href: _,
                  motionChild: !0,
                  nodeId: `CyOidWSxa`,
                  scopeId: `vdfHJ8emC`,
                  smoothScroll: !0,
                  children: g(D.a, {
                    ...v,
                    ...w,
                    className: `${H(ee, `framer-7nutjk`, l, S)} framer-1il57e9`,
                    "data-framer-name": `Available`,
                    "data-highlight": !0,
                    layoutDependency: j,
                    layoutId: `CyOidWSxa`,
                    ref: i,
                    style: { ...c },
                    ...J_(
                      {
                        CqJihxKtO: {
                          "data-framer-name": `Unavailable`,
                          "data-highlight": void 0,
                        },
                        gJePCiFxC: { "data-framer-name": `Available-2` },
                      },
                      b,
                      T
                    ),
                    children: [
                      g(D.div, {
                        className: `framer-jf8nqg`,
                        "data-framer-name": `Pulser`,
                        layoutDependency: j,
                        layoutId: `iS0J_vWwk`,
                        children: [
                          u(D.div, {
                            className: `framer-s574xf`,
                            "data-framer-name": `Pulsing`,
                            layoutDependency: j,
                            layoutId: `c4Jh3f5y0`,
                            style: {
                              backgroundColor: `rgb(49, 238, 51)`,
                              borderBottomLeftRadius: 10,
                              borderBottomRightRadius: 10,
                              borderTopLeftRadius: 10,
                              borderTopRightRadius: 10,
                              opacity: 0.5,
                            },
                            variants: {
                              CqJihxKtO: {
                                backgroundColor: `rgb(237, 49, 49)`,
                              },
                              gJePCiFxC: {
                                borderBottomLeftRadius: 100,
                                borderBottomRightRadius: 100,
                                borderTopLeftRadius: 100,
                                borderTopRightRadius: 100,
                                opacity: 0,
                              },
                            },
                            ...J_(
                              { gJePCiFxC: { transformTemplate: ev } },
                              b,
                              T
                            ),
                          }),
                          u(D.div, {
                            className: `framer-1l4v055`,
                            "data-framer-name": `Solid`,
                            layoutDependency: j,
                            layoutId: `FUbDjbGPz`,
                            style: {
                              backgroundColor: `rgb(49, 238, 51)`,
                              borderBottomLeftRadius: 10,
                              borderBottomRightRadius: 10,
                              borderTopLeftRadius: 10,
                              borderTopRightRadius: 10,
                              boxShadow: `0px 0px 20px 0px rgba(49, 238, 51, 0.5)`,
                            },
                            variants: {
                              CqJihxKtO: {
                                backgroundColor: `rgb(237, 49, 49)`,
                                boxShadow: `0px 0px 20px 0px rgba(237, 49, 49, 0.5)`,
                              },
                              gJePCiFxC: {
                                borderBottomLeftRadius: 100,
                                borderBottomRightRadius: 100,
                                borderTopLeftRadius: 100,
                                borderTopRightRadius: 100,
                              },
                            },
                          }),
                        ],
                      }),
                      u(R, {
                        __fromCanvasComponent: !0,
                        children: u(y, {
                          children: u(D.p, {
                            style: {
                              "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                              "--framer-font-size": `14px`,
                              "--framer-font-weight": `500`,
                              "--framer-line-height": `160%`,
                              "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                            },
                            children: `Open to Work`,
                          }),
                        }),
                        className: `framer-cg5sn1`,
                        "data-framer-name": `Text`,
                        fonts: [`GF;Geist-500`],
                        layoutDependency: j,
                        layoutId: `blU6txlYo`,
                        style: {
                          "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                          "--framer-link-text-color": `rgb(0, 153, 255)`,
                          "--framer-link-text-decoration": `underline`,
                          "--framer-paragraph-spacing": `0px`,
                        },
                        text: m,
                        verticalAlignment: `top`,
                        withExternalLayout: !0,
                        ...J_({ CqJihxKtO: { text: h } }, b, T),
                      }),
                    ],
                  }),
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-a9Wy5.framer-1il57e9, .framer-a9Wy5 .framer-1il57e9 { display: block; }`,
          `.framer-a9Wy5.framer-7nutjk { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 8px 12px 8px 12px; position: relative; text-decoration: none; width: min-content; }`,
          `.framer-a9Wy5 .framer-jf8nqg { flex: none; height: 12px; overflow: visible; position: relative; width: 12px; }`,
          `.framer-a9Wy5 .framer-s574xf { flex: none; height: 7px; left: calc(50.00000000000002% - 7px / 2); overflow: hidden; position: absolute; top: calc(50.00000000000002% - 7px / 2); width: 7px; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-a9Wy5 .framer-1l4v055 { bottom: 3px; flex: none; left: 3px; overflow: hidden; position: absolute; right: 3px; top: 3px; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-a9Wy5 .framer-cg5sn1 { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }`,
          `.framer-a9Wy5.framer-v-1y6abvb .framer-s574xf { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 48px); left: 50%; top: 50%; width: 48px; }`,
        ],
        `framer-a9Wy5`
      )),
      (sv = ov),
      (ov.displayName = `Availability`),
      (ov.defaultProps = { height: 38.5, width: 136.5 }),
      V(ov, {
        variant: {
          options: [`CyOidWSxa`, `gJePCiFxC`, `CqJihxKtO`],
          optionTitles: [`Available`, `Available-2`, `Unavailable`],
          title: `Variant`,
          type: F.Enum,
        },
        jn909WTNI: {
          defaultValue: `Open to Work`,
          displayTextArea: !1,
          title: `Green text`,
          type: F.String,
        },
        tCgMNdSJ8: {
          defaultValue: `UNAVAILABLE`,
          displayTextArea: !1,
          title: `Red text`,
          type: F.String,
        },
        zM2dkJ0Mt: { title: `Link`, type: F.Link },
      }),
      B(
        ov,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RruM4mJPby1QNtA.woff2`,
                weight: `500`,
              },
            ],
          },
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  });
function lv(e, ...t) {
  let n = {};
  return t?.forEach((t) => t && Object.assign(n, e[t])), n;
}
var uv,
  dv,
  fv,
  pv,
  mv,
  hv,
  gv,
  _v,
  vv,
  yv,
  bv,
  xv,
  Sv,
  Cv,
  wv,
  Tv = e(() => {
    a(),
      se(),
      E(),
      o(),
      (uv = be(ye(D.div))),
      (dv = ye(D.div)),
      (fv = [
        `hA2zrzixE`,
        `crJIB3Rvl`,
        `JTc8OQMhD`,
        `udSq8lYgM`,
        `XOvUeRO4b`,
        `GTqO6MMCA`,
        `vEOwkGwpr`,
        `b_STnpYUl`,
        `vC1WaNV6G`,
      ]),
      (pv = `framer-5w4Y0`),
      (mv = {
        b_STnpYUl: `framer-v-1kz8o92`,
        crJIB3Rvl: `framer-v-11bg5s6`,
        GTqO6MMCA: `framer-v-r4wioo`,
        hA2zrzixE: `framer-v-162mdxd`,
        JTc8OQMhD: `framer-v-1ouhtt`,
        udSq8lYgM: `framer-v-ku054v`,
        vC1WaNV6G: `framer-v-1bqo33d`,
        vEOwkGwpr: `framer-v-akvwsy`,
        XOvUeRO4b: `framer-v-1jpp3nf`,
      }),
      (hv = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: `spring` }),
      (gv = {
        opacity: 1,
        rotate: 0,
        rotateX: 0,
        rotateY: 0,
        scale: 1,
        skewX: 0,
        skewY: 0,
        transition: {
          damping: 60,
          delay: 0.5,
          mass: 1,
          stiffness: 200,
          type: `spring`,
        },
        x: 0,
        y: 0,
      }),
      (_v = {
        opacity: 0.001,
        rotate: 0,
        rotateX: 0,
        rotateY: 0,
        scale: 1,
        skewX: 0,
        skewY: 0,
        x: 0,
        y: 0,
      }),
      (vv = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (yv = D.create(y)),
      (bv = {
        "Case #1 Mobile": `crJIB3Rvl`,
        "Case #2 Mobile": `udSq8lYgM`,
        "Case #3 Mobile": `GTqO6MMCA`,
        "Case #4 Mobile": `b_STnpYUl`,
        "Case #4": `vEOwkGwpr`,
        "Case #5": `vC1WaNV6G`,
        "Learn To Type": `JTc8OQMhD`,
        "Map Practice": `XOvUeRO4b`,
        "Primary (Curation)": `hA2zrzixE`,
      }),
      (xv = ({ height: e, id: t, width: n, ...r }) => ({
        ...r,
        variant: bv[r.variant] ?? r.variant ?? `hA2zrzixE`,
      })),
      (Sv = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (Cv = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe(),
            c = le(),
            { style: l, className: f, layoutId: p, variant: m, ...h } = xv(e),
            {
              baseVariant: _,
              classNames: v,
              clearLoadingGesture: b,
              gestureHandlers: S,
              gestureVariant: C,
              isLoading: w,
              setGestureState: T,
              setVariant: E,
              variants: O,
            } = ve({
              cycleOrder: fv,
              defaultVariant: `hA2zrzixE`,
              ref: i,
              variant: m,
              variantClassNames: mv,
            }),
            k = Sv(e, O),
            A = H(pv),
            j = () => ![`udSq8lYgM`, `GTqO6MMCA`, `b_STnpYUl`].includes(_),
            M = () => _ === `udSq8lYgM`,
            N = () => _ === `GTqO6MMCA`,
            P = () => _ === `b_STnpYUl`;
          return u(x, {
            id: p ?? a,
            children: u(yv, {
              animate: O,
              initial: !1,
              children: u(vv, {
                value: hv,
                children: u(I, {
                  href: { webPageId: `YUN0ipZRa` },
                  motionChild: !0,
                  nodeId: `hA2zrzixE`,
                  openInNewTab: !0,
                  scopeId: `WZUiSoSL_`,
                  ...lv(
                    {
                      b_STnpYUl: {
                        href: `https://prernakohli.notion.site/Ask-a-Doubt-9239b31b336349999d45f65e6d08503b`,
                      },
                      GTqO6MMCA: {
                        href: `https://prernakohli.notion.site/Map-Practic-74a9469e26e340319645277b47aa0b33`,
                      },
                      JTc8OQMhD: {
                        href: `https://prernakohli.notion.site/Learn-to-Type-e3be404947b0404bb5a0282595aa3cf3`,
                      },
                      udSq8lYgM: {
                        href: `https://prernakohli.notion.site/Learn-to-Type-e3be404947b0404bb5a0282595aa3cf3`,
                      },
                      vC1WaNV6G: { href: { webPageId: `KguGd9lJo` } },
                      vEOwkGwpr: {
                        href: `https://prernakohli.notion.site/Ask-a-Doubt-9239b31b336349999d45f65e6d08503b`,
                      },
                      XOvUeRO4b: {
                        href: `https://prernakohli.notion.site/Map-Practic-74a9469e26e340319645277b47aa0b33`,
                      },
                    },
                    _,
                    C
                  ),
                  children: g(D.a, {
                    ...h,
                    ...S,
                    className: `${H(A, `framer-162mdxd`, f, v)} framer-yxx8a9`,
                    "data-border": !0,
                    "data-framer-name": `Primary (Curation)`,
                    layoutDependency: k,
                    layoutId: `hA2zrzixE`,
                    ref: i,
                    style: {
                      "--border-bottom-width": `1px`,
                      "--border-color": `rgba(204, 204, 204, 0.1)`,
                      "--border-left-width": `1px`,
                      "--border-right-width": `1px`,
                      "--border-style": `solid`,
                      "--border-top-width": `1px`,
                      background: `linear-gradient(0deg, rgb(13, 29, 61) 0%, rgb(2, 7, 18) 100%)`,
                      borderBottomLeftRadius: 32,
                      borderBottomRightRadius: 32,
                      borderTopLeftRadius: 32,
                      borderTopRightRadius: 32,
                      ...l,
                    },
                    variants: {
                      b_STnpYUl: {
                        borderBottomLeftRadius: 24,
                        borderBottomRightRadius: 24,
                        borderTopLeftRadius: 24,
                        borderTopRightRadius: 24,
                      },
                      crJIB3Rvl: {
                        borderBottomLeftRadius: 24,
                        borderBottomRightRadius: 24,
                        borderTopLeftRadius: 24,
                        borderTopRightRadius: 24,
                      },
                      GTqO6MMCA: {
                        borderBottomLeftRadius: 24,
                        borderBottomRightRadius: 24,
                        borderTopLeftRadius: 24,
                        borderTopRightRadius: 24,
                      },
                      JTc8OQMhD: {
                        background: `linear-gradient(0deg, rgb(26, 25, 84) 0%, rgb(1, 2, 5) 100%)`,
                      },
                      vEOwkGwpr: {
                        background: `linear-gradient(0deg, rgb(26, 25, 22) 0%, rgb(0, 0, 0) 100%)`,
                      },
                      XOvUeRO4b: {
                        background: `linear-gradient(180deg, rgb(1, 0, 3) 0%, rgb(22, 6, 38) 100%)`,
                      },
                    },
                    ...lv(
                      {
                        b_STnpYUl: { "data-framer-name": `Case #4 Mobile` },
                        crJIB3Rvl: { "data-framer-name": `Case #1 Mobile` },
                        GTqO6MMCA: { "data-framer-name": `Case #3 Mobile` },
                        JTc8OQMhD: { "data-framer-name": `Learn To Type` },
                        udSq8lYgM: { "data-framer-name": `Case #2 Mobile` },
                        vC1WaNV6G: { "data-framer-name": `Case #5` },
                        vEOwkGwpr: { "data-framer-name": `Case #4` },
                        XOvUeRO4b: { "data-framer-name": `Map Practice` },
                      },
                      _,
                      C
                    ),
                    children: [
                      j() &&
                        g(D.div, {
                          className: `framer-1cn1bx6`,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `dqMcB8omg`,
                          style: {
                            borderBottomLeftRadius: 0,
                            borderBottomRightRadius: 0,
                            borderTopLeftRadius: 0,
                            borderTopRightRadius: 0,
                          },
                          variants: {
                            crJIB3Rvl: {
                              borderBottomLeftRadius: 24,
                              borderBottomRightRadius: 24,
                              borderTopLeftRadius: 24,
                              borderTopRightRadius: 24,
                            },
                            JTc8OQMhD: {
                              borderBottomLeftRadius: 0,
                              borderBottomRightRadius: 0,
                              borderTopLeftRadius: 0,
                              borderTopRightRadius: 0,
                            },
                            vC1WaNV6G: {
                              borderBottomLeftRadius: 0,
                              borderBottomRightRadius: 0,
                              borderTopLeftRadius: 0,
                              borderTopRightRadius: 0,
                            },
                            vEOwkGwpr: {
                              borderBottomLeftRadius: 0,
                              borderBottomRightRadius: 0,
                              borderTopLeftRadius: 0,
                              borderTopRightRadius: 0,
                            },
                            XOvUeRO4b: {
                              borderBottomLeftRadius: 0,
                              borderBottomRightRadius: 0,
                              borderTopLeftRadius: 0,
                              borderTopRightRadius: 0,
                            },
                          },
                          children: [
                            g(D.div, {
                              className: `framer-1chuvcp`,
                              "data-framer-name": `Card Headings`,
                              layoutDependency: k,
                              layoutId: `Qt9QOQfAx`,
                              style: {
                                borderBottomLeftRadius: 0,
                                borderBottomRightRadius: 0,
                                borderTopLeftRadius: 0,
                                borderTopRightRadius: 0,
                              },
                              variants: {
                                crJIB3Rvl: {
                                  borderBottomLeftRadius: 24,
                                  borderBottomRightRadius: 24,
                                  borderTopLeftRadius: 24,
                                  borderTopRightRadius: 24,
                                },
                                JTc8OQMhD: {
                                  borderBottomLeftRadius: 0,
                                  borderBottomRightRadius: 0,
                                  borderTopLeftRadius: 0,
                                  borderTopRightRadius: 0,
                                },
                                vC1WaNV6G: {
                                  borderBottomLeftRadius: 0,
                                  borderBottomRightRadius: 0,
                                  borderTopLeftRadius: 0,
                                  borderTopRightRadius: 0,
                                },
                                vEOwkGwpr: {
                                  borderBottomLeftRadius: 0,
                                  borderBottomRightRadius: 0,
                                  borderTopLeftRadius: 0,
                                  borderTopRightRadius: 0,
                                },
                                XOvUeRO4b: {
                                  borderBottomLeftRadius: 0,
                                  borderBottomRightRadius: 0,
                                  borderTopLeftRadius: 0,
                                  borderTopRightRadius: 0,
                                },
                              },
                              children: [
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: g(D.h3, {
                                      style: {
                                        "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                        "--framer-font-size": `30px`,
                                        "--framer-font-weight": `700`,
                                        "--framer-letter-spacing": `-0.5px`,
                                        "--framer-line-height": `1.4em`,
                                        "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                      },
                                      children: [
                                        `Live Collaboration System: `,
                                        u(D.br, {}),
                                        `MERN,WebSocket,MongoDB`,
                                      ],
                                    }),
                                  }),
                                  className: `framer-w9flqj`,
                                  fonts: [`GF;Geist-700`],
                                  layoutDependency: k,
                                  layoutId: `dZKAODi8k`,
                                  style: {
                                    "--extracted-a0htzi": `rgb(255, 255, 255)`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  variants: {
                                    JTc8OQMhD: {
                                      "--extracted-2gxw0f": `rgb(255, 255, 255)`,
                                      "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                    },
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                  ...lv(
                                    {
                                      crJIB3Rvl: {
                                        children: u(y, {
                                          children: g(D.h3, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-size": `28px`,
                                              "--framer-font-weight": `700`,
                                              "--framer-letter-spacing": `-0.5px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                            },
                                            children: [
                                              `Live Collaboration System:`,
                                              u(D.br, {}),
                                              `MERN,WebSocket,MongoDB`,
                                            ],
                                          }),
                                        }),
                                      },
                                      JTc8OQMhD: {
                                        children: g(y, {
                                          children: [
                                            u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `30px`,
                                                "--framer-font-weight": `700`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                              },
                                              children: `Event App `,
                                            }),
                                            u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `30px`,
                                                "--framer-font-weight": `700`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `var(--extracted-2gxw0f, rgb(255, 255, 255))`,
                                              },
                                              children: `React Native + MERN, Firebase,MySQL`,
                                            }),
                                          ],
                                        }),
                                      },
                                      vC1WaNV6G: {
                                        children: u(y, {
                                          children: u(D.h3, {
                                            style: {
                                              "--font-selector": `RlM7U2F0b3NoaS1ib2xk`,
                                              "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                              "--framer-font-size": `32px`,
                                              "--framer-font-weight": `700`,
                                              "--framer-letter-spacing": `-0.5px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                            },
                                            children: `LinkUp:`,
                                          }),
                                        }),
                                        fonts: [`FS;Satoshi-bold`],
                                      },
                                      vEOwkGwpr: {
                                        children: u(y, {
                                          children: g(D.h3, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-weight": `700`,
                                              "--framer-letter-spacing": `-0.5px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                            },
                                            children: [
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `30px`,
                                                },
                                                children: `LinkUp:`,
                                              }),
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `30px`,
                                                },
                                                children: u(D.br, {}),
                                              }),
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `30px`,
                                                },
                                                children: `MERN,Socket,Cloudinary`,
                                              }),
                                            ],
                                          }),
                                        }),
                                      },
                                      XOvUeRO4b: {
                                        children: u(y, {
                                          children: g(D.h3, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-size": `30px`,
                                              "--framer-font-weight": `700`,
                                              "--framer-letter-spacing": `-0.5px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                            },
                                            children: [
                                              `Travelers Portal :`,
                                              u(D.br, {}),
                                              `Salesforce Experience Cloud`,
                                            ],
                                          }),
                                        }),
                                      },
                                    },
                                    _,
                                    C
                                  ),
                                }),
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: u(D.p, {
                                      style: {
                                        "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                        "--framer-font-size": `18px`,
                                        "--framer-letter-spacing": `-0.3px`,
                                        "--framer-line-height": `1.4em`,
                                        "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                      },
                                      children: `Developed a real-time multiplayer Snake game that enabled instant player interaction.The game provided a seamless and engaging experience for multiple users simultaneously. `,
                                    }),
                                  }),
                                  className: `framer-ipqtql`,
                                  fonts: [`GF;Geist-regular`],
                                  layoutDependency: k,
                                  layoutId: `XsDPMD6vH`,
                                  style: {
                                    "--extracted-r6o4lv": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                  ...lv(
                                    {
                                      crJIB3Rvl: {
                                        children: u(y, {
                                          children: u(D.p, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-size": `14px`,
                                              "--framer-letter-spacing": `-0.3px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                            },
                                            children: `Developed a real-time multiplayer Snake game that enabled instant player interaction.The game provided a seamless and engaging experience for multiple users simultaneously. `,
                                          }),
                                        }),
                                      },
                                      JTc8OQMhD: {
                                        children: u(y, {
                                          children: g(D.p, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-letter-spacing": `-0.3px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                            },
                                            children: [
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `18px`,
                                                },
                                                children: `Developed a real-time event update app for schools and colleges, enabling event creation and sharing.The app streamlined communication and reduced manual coordination efforts.`,
                                              }),
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `18px`,
                                                },
                                                children: u(D.br, {}),
                                              }),
                                              u(D.span, {
                                                style: {
                                                  "--framer-font-size": `18px`,
                                                },
                                                children: `With gamified practice and real-time feedback, it strengthens attention, motor skills, and retention`,
                                              }),
                                            ],
                                          }),
                                        }),
                                      },
                                      vEOwkGwpr: {
                                        children: u(y, {
                                          children: g(D.p, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-size": `18px`,
                                              "--framer-letter-spacing": `-0.3px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                            },
                                            children: [
                                              ` Developed a real-time chat application with seamless messaging and user authentication.Used WebSockets to enable instant communication and ensure a fast, responsive experience.`,
                                              u(D.br, {}),
                                              `Built to assist over 75 million learners with quick, photo-based doubt resolution.`,
                                            ],
                                          }),
                                        }),
                                      },
                                      XOvUeRO4b: {
                                        children: u(y, {
                                          children: u(D.p, {
                                            style: {
                                              "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                              "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                              "--framer-font-size": `18px`,
                                              "--framer-letter-spacing": `-0.3px`,
                                              "--framer-line-height": `1.4em`,
                                              "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                            },
                                            children: `Built a personalized travel portal that enabled seamless booking management and itinerary tracking.The platform provided users with a simplified travel planning experience. Boosted overall user satisfaction by 25% through personalized features.`,
                                          }),
                                        }),
                                      },
                                    },
                                    _,
                                    C
                                  ),
                                }),
                              ],
                            }),
                            g(D.div, {
                              className: `framer-oru3xk`,
                              layoutDependency: k,
                              layoutId: `FnjrJZSlx`,
                              children: [
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-vrv7ks`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `vrv7ks`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `CYOHwGZ93`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.05) 0%, rgba(15, 23, 41, 0.61) 100%)`,
                                    backgroundColor: `rgba(0, 0, 0, 0)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  variants: {
                                    JTc8OQMhD: {
                                      background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.06) 0%, rgba(255, 255, 255, 0.06) 100%)`,
                                      backgroundColor: `rgba(255, 255, 255, 0.06)`,
                                    },
                                    vC1WaNV6G: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                    vEOwkGwpr: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                    XOvUeRO4b: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Snake Game `,
                                        }),
                                      }),
                                    }),
                                    className: `framer-10jgom1`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;DM Sans-regular`],
                                    layoutDependency: k,
                                    layoutId: `EB3vyWj4p`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                    ...lv(
                                      {
                                        JTc8OQMhD: {
                                          children: u(y, {
                                            children: u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `26px`,
                                                "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                              },
                                              children: u(D.span, {
                                                "data-text-fill": `true`,
                                                style: {
                                                  backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                                },
                                                children: `UX Casestudy`,
                                              }),
                                            }),
                                          }),
                                          fonts: [`GF;Geist-regular`],
                                        },
                                      },
                                      _,
                                      C
                                    ),
                                  }),
                                }),
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-1wrj8nf`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `1wrj8nf`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `mM1GnrVDq`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.05) 0%, rgba(15, 23, 41, 0.61) 100%)`,
                                    backgroundColor: `rgba(0, 0, 0, 0)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  variants: {
                                    JTc8OQMhD: {
                                      background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.06) 0%, rgba(255, 255, 255, 0.06) 100%)`,
                                      backgroundColor: `rgba(255, 255, 255, 0.06)`,
                                    },
                                    vC1WaNV6G: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                    vEOwkGwpr: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                    XOvUeRO4b: {
                                      backgroundColor: `rgba(0, 0, 0, 0)`,
                                    },
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Web Application`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-n1rihc`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;DM Sans-regular`],
                                    layoutDependency: k,
                                    layoutId: `p8bZO_r4b`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                    ...lv(
                                      {
                                        JTc8OQMhD: {
                                          children: u(y, {
                                            children: u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `26px`,
                                                "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                              },
                                              children: u(D.span, {
                                                "data-text-fill": `true`,
                                                style: {
                                                  backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                                },
                                                children: `Byjus`,
                                              }),
                                            }),
                                          }),
                                          fonts: [`GF;Geist-regular`],
                                        },
                                        vEOwkGwpr: {
                                          children: u(y, {
                                            children: u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `26px`,
                                                "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                              },
                                              children: u(D.span, {
                                                "data-text-fill": `true`,
                                                style: {
                                                  backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                                },
                                                children: `Byjus`,
                                              }),
                                            }),
                                          }),
                                        },
                                        XOvUeRO4b: {
                                          children: u(y, {
                                            children: u(D.p, {
                                              style: {
                                                "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                "--framer-letter-spacing": `-0.5px`,
                                                "--framer-line-height": `26px`,
                                                "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                              },
                                              children: u(D.span, {
                                                "data-text-fill": `true`,
                                                style: {
                                                  backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                                },
                                                children: `Byjus`,
                                              }),
                                            }),
                                          }),
                                        },
                                      },
                                      _,
                                      C
                                    ),
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                      j() &&
                        u(te, {
                          background: {
                            alt: ``,
                            fit: `fill`,
                            loading: G(
                              (c?.y || 0) +
                                (48 +
                                  ((c?.height || 417) -
                                    96 -
                                    ((c?.height || 417) - 96) * 1) /
                                    2)
                            ),
                            pixelHeight: 347,
                            pixelWidth: 425,
                            src: `https://framerusercontent.com/images/hYNCdqbszY8bfsrepp4tZvg5bG8.png?width=425&height=347`,
                          },
                          className: `framer-1upqxl4`,
                          "data-border": !0,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `ONKHqMQ_n`,
                          style: {
                            "--border-bottom-width": `0.25px`,
                            "--border-color": `rgba(255, 255, 255, 0.2)`,
                            "--border-left-width": `0.25px`,
                            "--border-right-width": `0.25px`,
                            "--border-style": `solid`,
                            "--border-top-width": `0.25px`,
                            borderBottomLeftRadius: 30,
                            borderBottomRightRadius: 30,
                            borderTopLeftRadius: 30,
                            borderTopRightRadius: 30,
                            boxShadow: `none`,
                          },
                          variants: {
                            crJIB3Rvl: {
                              borderBottomLeftRadius: 24,
                              borderBottomRightRadius: 24,
                              borderTopLeftRadius: 24,
                              borderTopRightRadius: 24,
                            },
                            JTc8OQMhD: {
                              "--border-bottom-width": `1.25px`,
                              "--border-color": `rgba(255, 255, 255, 0.1)`,
                              "--border-left-width": `1.25px`,
                              "--border-right-width": `1.25px`,
                              "--border-top-width": `1.25px`,
                              boxShadow: `0px 8px 8px 0px rgba(0, 0, 0, 0.13)`,
                            },
                            vC1WaNV6G: { boxShadow: `none` },
                            vEOwkGwpr: { boxShadow: `none` },
                            XOvUeRO4b: { boxShadow: `none` },
                          },
                          ...lv(
                            {
                              crJIB3Rvl: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      40 +
                                      (((c?.height || 598) - 80 - 459.2) / 2 +
                                        233.2 +
                                        0)
                                  ),
                                  pixelHeight: 390,
                                  pixelWidth: 474,
                                  src: `https://framerusercontent.com/images/ZDHWNROOLi5QRfvju3wCzUNJ6E.png?width=474&height=390`,
                                },
                              },
                              JTc8OQMhD: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      (48 +
                                        ((c?.height || 417) -
                                          96 -
                                          ((c?.height || 417) - 96) * 1) /
                                          2)
                                  ),
                                  pixelHeight: 717,
                                  pixelWidth: 824,
                                  sizes: `calc((${
                                    c?.width || `100vw`
                                  } - 96px) * 0.45)`,
                                  src: `https://framerusercontent.com/images/tCa02RSR5ijHaeSNPsLwwS2lc.jpg?width=824&height=717`,
                                  srcSet: `https://framerusercontent.com/images/tCa02RSR5ijHaeSNPsLwwS2lc.jpg?scale-down-to=512&width=824&height=717 512w,https://framerusercontent.com/images/tCa02RSR5ijHaeSNPsLwwS2lc.jpg?width=824&height=717 824w`,
                                },
                              },
                              vEOwkGwpr: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      (48 +
                                        ((c?.height || 417) -
                                          96 -
                                          ((c?.height || 417) - 96) * 1) /
                                          2)
                                  ),
                                  pixelHeight: 1190,
                                  pixelWidth: 1300,
                                  sizes: `calc((${
                                    c?.width || `100vw`
                                  } - 96px) * 0.45)`,
                                  src: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190`,
                                  srcSet: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=512&width=1300&height=1190 512w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=1024&width=1300&height=1190 1024w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190 1300w`,
                                },
                              },
                              XOvUeRO4b: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      (48 +
                                        ((c?.height || 417) -
                                          96 -
                                          ((c?.height || 417) - 96) * 1) /
                                          2)
                                  ),
                                  pixelHeight: 2236,
                                  pixelWidth: 2347,
                                  sizes: `calc((${
                                    c?.width || `100vw`
                                  } - 96px) * 0.45)`,
                                  src: `https://framerusercontent.com/images/S3kBESRD3IGv8kPC3gbEC86w1o.png?width=2347&height=2236`,
                                  srcSet: `https://framerusercontent.com/images/S3kBESRD3IGv8kPC3gbEC86w1o.png?scale-down-to=512&width=2347&height=2236 512w,https://framerusercontent.com/images/S3kBESRD3IGv8kPC3gbEC86w1o.png?scale-down-to=1024&width=2347&height=2236 1024w,https://framerusercontent.com/images/S3kBESRD3IGv8kPC3gbEC86w1o.png?scale-down-to=2048&width=2347&height=2236 2048w,https://framerusercontent.com/images/S3kBESRD3IGv8kPC3gbEC86w1o.png?width=2347&height=2236 2347w`,
                                },
                              },
                            },
                            _,
                            C
                          ),
                        }),
                      u(dv, {
                        __framer__spring: {
                          bounce: 0.2,
                          damping: 60,
                          delay: 0,
                          duration: 0.3,
                          durationBasedSpring: !1,
                          ease: [0.44, 0, 0.56, 1],
                          mass: 1,
                          stiffness: 300,
                          type: `spring`,
                        },
                        __framer__styleTransformEffectEnabled: !0,
                        __framer__transformTargets: [
                          {
                            target: {
                              opacity: 0,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 0.3,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                          {
                            target: {
                              opacity: 1,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 1,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                        ],
                        __framer__transformTrigger: `onInView`,
                        __perspectiveFX: !1,
                        __smartComponentFX: !0,
                        __targetOpacity: 1,
                        className: `framer-1iqx9q0`,
                        "data-framer-name": `Blue Line`,
                        layoutDependency: k,
                        layoutId: `DFaUgR5vf`,
                        style: {
                          background: `linear-gradient(90.00000000000155deg, rgba(29, 26, 214, 0) 0%, rgb(20, 50, 156) 50%, rgba(0, 85, 255, 0) 100%)`,
                        },
                        variants: {
                          JTc8OQMhD: {
                            background: `linear-gradient(90.00000000000155deg, rgba(29, 26, 214, 0) 0%, rgb(63, 28, 237) 50%, rgba(0, 85, 255, 0) 100%)`,
                          },
                          vEOwkGwpr: {
                            background: `linear-gradient(90.00000000000155deg, rgba(29, 26, 214, 0) 0%, rgb(135, 59, 46) 50%, rgba(0, 85, 255, 0) 100%)`,
                          },
                          XOvUeRO4b: {
                            background: `linear-gradient(90.00000000000155deg, rgba(29, 26, 214, 0) 0%, rgb(90, 8, 191) 50%, rgba(0, 85, 255, 0) 100%)`,
                          },
                        },
                      }),
                      M() &&
                        u(te, {
                          background: {
                            alt: ``,
                            fit: `fill`,
                            pixelHeight: 768,
                            pixelWidth: 904,
                            src: `https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?width=904&height=768`,
                            srcSet: `https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?scale-down-to=512&width=904&height=768 512w,https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?width=904&height=768 904w`,
                          },
                          className: `framer-16o8ekb`,
                          "data-border": !0,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `Wt_ceH5pz`,
                          style: {
                            "--border-bottom-width": `0.25px`,
                            "--border-color": `rgba(255, 255, 255, 0.2)`,
                            "--border-left-width": `0.25px`,
                            "--border-right-width": `0.25px`,
                            "--border-style": `solid`,
                            "--border-top-width": `0.25px`,
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          ...lv(
                            {
                              udSq8lYgM: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      40 +
                                      (((c?.height || 598) - 80 - 812) / 2 +
                                        586 +
                                        0)
                                  ),
                                  pixelHeight: 768,
                                  pixelWidth: 904,
                                  sizes: `calc(${c?.width || `100vw`} - 80px)`,
                                  src: `https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?width=904&height=768`,
                                  srcSet: `https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?scale-down-to=512&width=904&height=768 512w,https://framerusercontent.com/images/7dBZxa7EqsCaEyAzZk6L2gvfLg.jpg?width=904&height=768 904w`,
                                },
                              },
                            },
                            _,
                            C
                          ),
                        }),
                      M() &&
                        g(D.div, {
                          className: `framer-10xeqg3`,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `yb3bKofvK`,
                          style: {
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          children: [
                            g(D.div, {
                              className: `framer-1dzf6bu`,
                              "data-framer-name": `Card Headings`,
                              layoutDependency: k,
                              layoutId: `m3vwaCCOs`,
                              style: {
                                borderBottomLeftRadius: 24,
                                borderBottomRightRadius: 24,
                                borderTopLeftRadius: 24,
                                borderTopRightRadius: 24,
                              },
                              children: [
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: g(y, {
                                    children: [
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `28px`,
                                          "--framer-font-weight": `700`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, rgb(255, 255, 255))`,
                                        },
                                        children: `Event App: `,
                                      }),
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `28px`,
                                          "--framer-font-weight": `700`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-2gxw0f, rgb(255, 255, 255))`,
                                        },
                                        children: `React Native + MERN, Firebase,MySQL`,
                                      }),
                                    ],
                                  }),
                                  className: `framer-193hp8r`,
                                  fonts: [`GF;Geist-700`],
                                  layoutDependency: k,
                                  layoutId: `wDcBK1c8n`,
                                  style: {
                                    "--extracted-2gxw0f": `rgb(255, 255, 255)`,
                                    "--extracted-r6o4lv": `rgb(255, 255, 255)`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: u(D.p, {
                                      style: {
                                        "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                        "--framer-font-size": `14px`,
                                        "--framer-letter-spacing": `0px`,
                                        "--framer-line-height": `1.4em`,
                                        "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                      },
                                      children: `Developed a real-time event update app for schoolsand colleges, enabling event creation and sharing.The app streamlined communication and reduced manual coordination efforts.`,
                                    }),
                                  }),
                                  className: `framer-mrf93f`,
                                  fonts: [`GF;Geist-regular`],
                                  layoutDependency: k,
                                  layoutId: `o_3qnQQZg`,
                                  style: {
                                    "--extracted-r6o4lv": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                              ],
                            }),
                            g(D.div, {
                              className: `framer-a4z126`,
                              layoutDependency: k,
                              layoutId: `lXGiU8nDc`,
                              children: [
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-1kxx8tw`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `1kxx8tw`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `ZcdJ7U_EK`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.05) 0%, rgba(15, 23, 41, 0.61) 100%)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Event Management`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-1ts0sfc`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;DM Sans-regular`],
                                    layoutDependency: k,
                                    layoutId: `pdtMjJeYY`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-io3uz4`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `io3uz4`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `bqZbVt8vX`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    backgroundColor: `rgba(255, 255, 255, 0.06)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Mobile Application`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-xk36dz`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;Geist-regular`],
                                    layoutDependency: k,
                                    layoutId: `c0prDa9ON`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                      N() &&
                        g(D.div, {
                          className: `framer-t5zt8v`,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `DMA8gupDq`,
                          style: {
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          children: [
                            g(D.div, {
                              className: `framer-1ofdbo9`,
                              "data-framer-name": `Card Headings`,
                              layoutDependency: k,
                              layoutId: `uUIpRepU0`,
                              style: {
                                borderBottomLeftRadius: 24,
                                borderBottomRightRadius: 24,
                                borderTopLeftRadius: 24,
                                borderTopRightRadius: 24,
                              },
                              children: [
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: g(D.h3, {
                                      style: {
                                        "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                        "--framer-font-size": `28px`,
                                        "--framer-font-weight": `700`,
                                        "--framer-letter-spacing": `-0.5px`,
                                        "--framer-line-height": `1.4em`,
                                        "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                      },
                                      children: [
                                        `Travelers Portal :`,
                                        u(D.br, {}),
                                        `Salesforce Experience Cloud`,
                                      ],
                                    }),
                                  }),
                                  className: `framer-fwydc1`,
                                  fonts: [`GF;Geist-700`],
                                  layoutDependency: k,
                                  layoutId: `D0j3tAJbi`,
                                  style: {
                                    "--extracted-a0htzi": `rgb(255, 255, 255)`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: g(y, {
                                    children: [
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `14px`,
                                          "--framer-letter-spacing": `-0.3px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                        },
                                        children: `Built a personalized travel portal that enabled seamless booking management and itinerary tracking.The platform provided users with a simplified travel planning experience. Boosted overall user satisfaction by 25% through personalized features.`,
                                      }),
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `14px`,
                                          "--framer-letter-spacing": `-0.3px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-2gxw0f, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                        },
                                        children: u(D.br, {
                                          className: `trailing-break`,
                                        }),
                                      }),
                                    ],
                                  }),
                                  className: `framer-1db9h0p`,
                                  fonts: [`GF;Geist-regular`],
                                  layoutDependency: k,
                                  layoutId: `Q0NzGFwi8`,
                                  style: {
                                    "--extracted-2gxw0f": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--extracted-r6o4lv": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                              ],
                            }),
                            g(D.div, {
                              className: `framer-1susyaj`,
                              layoutDependency: k,
                              layoutId: `OQcPU5SmN`,
                              children: [
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-1wxhm2x`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `1wxhm2x`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `moRxq8NdR`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.05) 0%, rgba(15, 23, 41, 0.61) 100%)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Traveller Portal`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-18nz0gq`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;DM Sans-regular`],
                                    layoutDependency: k,
                                    layoutId: `tts3cS1K8`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-1uf3rfq`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `1uf3rfq`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `VbIm7jpij`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    backgroundColor: `rgba(255, 255, 255, 0.06)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Salesforce `,
                                        }),
                                      }),
                                    }),
                                    className: `framer-1rmegow`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;Geist-regular`],
                                    layoutDependency: k,
                                    layoutId: `KeVAp0heV`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                      N() &&
                        u(te, {
                          background: {
                            alt: ``,
                            fit: `fill`,
                            pixelHeight: 2415,
                            pixelWidth: 3006,
                            src: `https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?width=3006&height=2415`,
                            srcSet: `https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=512&width=3006&height=2415 512w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=1024&width=3006&height=2415 1024w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=2048&width=3006&height=2415 2048w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?width=3006&height=2415 3006w`,
                          },
                          className: `framer-n73qsr`,
                          "data-border": !0,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `zyjqCzbFK`,
                          style: {
                            "--border-bottom-width": `0.25px`,
                            "--border-color": `rgba(255, 255, 255, 0.2)`,
                            "--border-left-width": `0.25px`,
                            "--border-right-width": `0.25px`,
                            "--border-style": `solid`,
                            "--border-top-width": `0.25px`,
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          ...lv(
                            {
                              GTqO6MMCA: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      40 +
                                      (((c?.height || 598) - 80 - 557.2) / 2 +
                                        331.2 +
                                        0)
                                  ),
                                  pixelHeight: 2415,
                                  pixelWidth: 3006,
                                  sizes: `calc(${c?.width || `100vw`} - 80px)`,
                                  src: `https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?width=3006&height=2415`,
                                  srcSet: `https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=512&width=3006&height=2415 512w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=1024&width=3006&height=2415 1024w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?scale-down-to=2048&width=3006&height=2415 2048w,https://framerusercontent.com/images/1V5GlNcCJLwIeepFNN5Xkonhoc.png?width=3006&height=2415 3006w`,
                                },
                              },
                            },
                            _,
                            C
                          ),
                        }),
                      P() &&
                        g(D.div, {
                          className: `framer-14odh2q`,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `vWkRMxrQH`,
                          style: {
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          children: [
                            g(D.div, {
                              className: `framer-7bbjyq`,
                              "data-framer-name": `Card Headings`,
                              layoutDependency: k,
                              layoutId: `bYCTX5SSe`,
                              style: {
                                borderBottomLeftRadius: 24,
                                borderBottomRightRadius: 24,
                                borderTopLeftRadius: 24,
                                borderTopRightRadius: 24,
                              },
                              children: [
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: g(D.h3, {
                                      style: {
                                        "--font-selector": `R0Y7R2Vpc3QtNzAw`,
                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                        "--framer-font-weight": `700`,
                                        "--framer-letter-spacing": `-0.5px`,
                                        "--framer-line-height": `1.4em`,
                                        "--framer-text-color": `var(--extracted-a0htzi, rgb(255, 255, 255))`,
                                      },
                                      children: [
                                        u(D.span, {
                                          style: {
                                            "--framer-font-size": `28px`,
                                          },
                                          children: `LinkUp:`,
                                        }),
                                        u(D.span, {
                                          style: {
                                            "--framer-font-size": `28px`,
                                          },
                                          children: u(D.br, {}),
                                        }),
                                        u(D.span, {
                                          style: {
                                            "--framer-font-size": `28px`,
                                          },
                                          children: `MERN,Socket,Cloudinary`,
                                        }),
                                      ],
                                    }),
                                  }),
                                  className: `framer-1a7zwyf`,
                                  fonts: [`GF;Geist-700`],
                                  layoutDependency: k,
                                  layoutId: `KDxocQVx7`,
                                  style: {
                                    "--extracted-a0htzi": `rgb(255, 255, 255)`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                                u(R, {
                                  __fromCanvasComponent: !0,
                                  children: g(y, {
                                    children: [
                                      g(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `14px`,
                                          "--framer-letter-spacing": `0px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                        },
                                        children: [
                                          `Developed a real-time chat application with seamless messaging and user authentication.Used WebSockets to enable instant communication and ensure a fast, responsive experience.`,
                                          u(D.br, {}),
                                          `Built to assist over 75 million learners with quick, photo-based doubt resolution.`,
                                        ],
                                      }),
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `14px`,
                                          "--framer-letter-spacing": `0px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-2gxw0f, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                        },
                                        children: u(D.br, {
                                          className: `trailing-break`,
                                        }),
                                      }),
                                      u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `14px`,
                                          "--framer-letter-spacing": `0px`,
                                          "--framer-line-height": `1.4em`,
                                          "--framer-text-color": `var(--extracted-1iakedh, var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5)))`,
                                        },
                                        children: u(D.br, {
                                          className: `trailing-break`,
                                        }),
                                      }),
                                    ],
                                  }),
                                  className: `framer-16ao2m5`,
                                  fonts: [`GF;Geist-regular`],
                                  layoutDependency: k,
                                  layoutId: `wbywKO0FV`,
                                  style: {
                                    "--extracted-1iakedh": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--extracted-2gxw0f": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--extracted-r6o4lv": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgba(0, 0, 0, 0.5))`,
                                    "--framer-link-text-color": `rgb(0, 153, 255)`,
                                    "--framer-link-text-decoration": `underline`,
                                  },
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                              ],
                            }),
                            g(D.div, {
                              className: `framer-nz71s6`,
                              layoutDependency: k,
                              layoutId: `Z8zn1geJA`,
                              children: [
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-1bq86a3`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `1bq86a3`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `DYpQEzk74`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    background: `linear-gradient(-7.642439925348299e-8deg, rgba(255, 255, 255, 0.05) 0%, rgba(15, 23, 41, 0.61) 100%)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Live Chat`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-10ybabe`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;DM Sans-regular`],
                                    layoutDependency: k,
                                    layoutId: `i5M0skHkx`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                                u(uv, {
                                  __perspectiveFX: !1,
                                  __smartComponentFX: !0,
                                  __targetOpacity: 1,
                                  animate: gv,
                                  className: `framer-12zlukv`,
                                  "data-border": !0,
                                  "data-framer-appear-id": `12zlukv`,
                                  "data-framer-name": `Tag/Primary Tag 2`,
                                  initial: _v,
                                  layoutDependency: k,
                                  layoutId: `aB6gtcKSh`,
                                  optimized: !0,
                                  style: {
                                    "--border-bottom-width": `1px`,
                                    "--border-color": `var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05))`,
                                    "--border-left-width": `1px`,
                                    "--border-right-width": `1px`,
                                    "--border-style": `solid`,
                                    "--border-top-width": `1px`,
                                    backgroundColor: `rgba(255, 255, 255, 0.06)`,
                                    borderBottomLeftRadius: 40,
                                    borderBottomRightRadius: 40,
                                    borderTopLeftRadius: 40,
                                    borderTopRightRadius: 40,
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(D.p, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-letter-spacing": `-0.5px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                        },
                                        children: u(D.span, {
                                          "data-text-fill": `true`,
                                          style: {
                                            backgroundImage: `linear-gradient(90deg, rgb(255, 255, 255) 0%, rgba(153, 153, 153, 0) 350%)`,
                                          },
                                          children: `Chat Application`,
                                        }),
                                      }),
                                    }),
                                    className: `framer-pb7hjd`,
                                    "data-framer-name": `Title`,
                                    fonts: [`GF;Geist-regular`],
                                    layoutDependency: k,
                                    layoutId: `RflwXRTw2`,
                                    style: {
                                      "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                      "--framer-link-text-color": `rgb(0, 153, 255)`,
                                      "--framer-link-text-decoration": `underline`,
                                    },
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                              ],
                            }),
                          ],
                        }),
                      P() &&
                        u(te, {
                          background: {
                            alt: ``,
                            fit: `fill`,
                            pixelHeight: 1190,
                            pixelWidth: 1300,
                            src: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190`,
                            srcSet: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=512&width=1300&height=1190 512w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=1024&width=1300&height=1190 1024w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190 1300w`,
                          },
                          className: `framer-1szfapl`,
                          "data-border": !0,
                          "data-framer-name": `Card Content`,
                          layoutDependency: k,
                          layoutId: `xiISkBgKz`,
                          style: {
                            "--border-bottom-width": `0.25px`,
                            "--border-color": `rgba(255, 255, 255, 0.2)`,
                            "--border-left-width": `0.25px`,
                            "--border-right-width": `0.25px`,
                            "--border-style": `solid`,
                            "--border-top-width": `0.25px`,
                            borderBottomLeftRadius: 24,
                            borderBottomRightRadius: 24,
                            borderTopLeftRadius: 24,
                            borderTopRightRadius: 24,
                          },
                          ...lv(
                            {
                              b_STnpYUl: {
                                background: {
                                  alt: ``,
                                  fit: `fill`,
                                  loading: G(
                                    (c?.y || 0) +
                                      40 +
                                      (((c?.height || 598) - 80 - 655.2) / 2 +
                                        429.2 +
                                        0)
                                  ),
                                  pixelHeight: 1190,
                                  pixelWidth: 1300,
                                  sizes: `calc(${c?.width || `100vw`} - 80px)`,
                                  src: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190`,
                                  srcSet: `https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=512&width=1300&height=1190 512w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?scale-down-to=1024&width=1300&height=1190 1024w,https://framerusercontent.com/images/hvfX4teCp4fejEpDWavmMLf5pMw.png?width=1300&height=1190 1300w`,
                                },
                              },
                            },
                            _,
                            C
                          ),
                        }),
                    ],
                  }),
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-5w4Y0.framer-yxx8a9, .framer-5w4Y0 .framer-yxx8a9 { display: block; }`,
          `.framer-5w4Y0.framer-162mdxd { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; height: 417px; justify-content: space-between; max-width: 1100px; overflow: hidden; padding: 48px; position: relative; text-decoration: none; width: 958px; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-5w4Y0 .framer-1cn1bx6 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; height: 100%; justify-content: space-between; overflow: visible; padding: 0px; position: relative; width: 45%; }`,
          `.framer-5w4Y0 .framer-1chuvcp, .framer-5w4Y0 .framer-1dzf6bu, .framer-5w4Y0 .framer-1ofdbo9, .framer-5w4Y0 .framer-7bbjyq { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
          `.framer-5w4Y0 .framer-w9flqj, .framer-5w4Y0 .framer-ipqtql, .framer-5w4Y0 .framer-193hp8r, .framer-5w4Y0 .framer-mrf93f, .framer-5w4Y0 .framer-fwydc1, .framer-5w4Y0 .framer-1db9h0p, .framer-5w4Y0 .framer-1a7zwyf, .framer-5w4Y0 .framer-16ao2m5 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }`,
          `.framer-5w4Y0 .framer-oru3xk, .framer-5w4Y0 .framer-a4z126, .framer-5w4Y0 .framer-1susyaj, .framer-5w4Y0 .framer-nz71s6 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }`,
          `.framer-5w4Y0 .framer-vrv7ks, .framer-5w4Y0 .framer-1wrj8nf, .framer-5w4Y0 .framer-1kxx8tw, .framer-5w4Y0 .framer-io3uz4, .framer-5w4Y0 .framer-1wxhm2x, .framer-5w4Y0 .framer-1uf3rfq, .framer-5w4Y0 .framer-1bq86a3, .framer-5w4Y0 .framer-12zlukv { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 38px; justify-content: flex-start; overflow: hidden; padding: 6px 16px 6px 16px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-5w4Y0 .framer-10jgom1, .framer-5w4Y0 .framer-n1rihc, .framer-5w4Y0 .framer-1ts0sfc, .framer-5w4Y0 .framer-xk36dz, .framer-5w4Y0 .framer-18nz0gq, .framer-5w4Y0 .framer-1rmegow, .framer-5w4Y0 .framer-10ybabe, .framer-5w4Y0 .framer-pb7hjd { flex: none; height: auto; position: relative; white-space: pre; width: auto; z-index: 1; }`,
          `.framer-5w4Y0 .framer-1upqxl4 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; height: 100%; justify-content: space-between; overflow: visible; padding: 40px 0px 40px 0px; position: relative; width: 45%; }`,
          `.framer-5w4Y0 .framer-1iqx9q0 { flex: none; height: 1px; left: calc(50.00000000000002% - 682px / 2); position: absolute; top: 0px; width: 682px; z-index: 1; }`,
          `.framer-5w4Y0 .framer-16o8ekb, .framer-5w4Y0 .framer-n73qsr, .framer-5w4Y0 .framer-1szfapl { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 32px; height: 226px; justify-content: center; overflow: visible; padding: 40px 0px 40px 0px; position: relative; width: 1px; }`,
          `.framer-5w4Y0 .framer-10xeqg3, .framer-5w4Y0 .framer-t5zt8v, .framer-5w4Y0 .framer-14odh2q { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: visible; padding: 0px 0px 24px 0px; position: relative; width: 1px; }`,
          `.framer-5w4Y0.framer-v-11bg5s6.framer-162mdxd, .framer-5w4Y0.framer-v-1kz8o92.framer-162mdxd { flex-direction: column; gap: 0px; height: min-content; justify-content: center; max-width: unset; padding: 40px; width: 428px; }`,
          `.framer-5w4Y0.framer-v-11bg5s6 .framer-1cn1bx6 { gap: 24px; height: min-content; justify-content: center; padding: 0px 0px 24px 0px; width: 100%; }`,
          `.framer-5w4Y0.framer-v-11bg5s6 .framer-1upqxl4 { gap: 32px; height: 226px; justify-content: center; width: 100%; }`,
          `.framer-5w4Y0.framer-v-11bg5s6 .framer-1iqx9q0, .framer-5w4Y0.framer-v-1kz8o92 .framer-1iqx9q0 { left: calc(50.00000000000002% - 100% / 2); width: 100%; }`,
          `.framer-5w4Y0.framer-v-1ouhtt .framer-1chuvcp { overflow: unset; }`,
          `.framer-5w4Y0.framer-v-ku054v.framer-162mdxd, .framer-5w4Y0.framer-v-r4wioo.framer-162mdxd { flex-direction: column; gap: 0px; height: min-content; justify-content: center; padding: 40px; width: 428px; }`,
          `.framer-5w4Y0.framer-v-ku054v .framer-1iqx9q0, .framer-5w4Y0.framer-v-r4wioo .framer-1iqx9q0 { left: calc(50.00000000000002% - 100% / 2); order: 4; width: 100%; }`,
          `.framer-5w4Y0.framer-v-ku054v .framer-16o8ekb { flex: none; order: 5; width: 100%; }`,
          `.framer-5w4Y0.framer-v-ku054v .framer-10xeqg3 { flex: none; order: 3; width: 100%; }`,
          `.framer-5w4Y0.framer-v-1jpp3nf .framer-1upqxl4 { padding: 40px 8px 40px 0px; }`,
          `.framer-5w4Y0.framer-v-r4wioo .framer-t5zt8v { flex: none; order: 2; width: 100%; }`,
          `.framer-5w4Y0.framer-v-r4wioo .framer-n73qsr { flex: none; order: 7; width: 100%; }`,
          `.framer-5w4Y0.framer-v-1kz8o92 .framer-14odh2q, .framer-5w4Y0.framer-v-1kz8o92 .framer-1szfapl { flex: none; width: 100%; }`,
          `.framer-5w4Y0[data-border="true"]::after, .framer-5w4Y0 [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
        ],
        `framer-5w4Y0`
      )),
      (wv = Cv),
      (Cv.displayName = `Case Study / Cards 3`),
      (Cv.defaultProps = { height: 417, width: 958 }),
      V(Cv, {
        variant: {
          options: [
            `hA2zrzixE`,
            `crJIB3Rvl`,
            `JTc8OQMhD`,
            `udSq8lYgM`,
            `XOvUeRO4b`,
            `GTqO6MMCA`,
            `vEOwkGwpr`,
            `b_STnpYUl`,
            `vC1WaNV6G`,
          ],
          optionTitles: [
            `Primary (Curation)`,
            `Case #1 Mobile`,
            `Learn To Type`,
            `Case #2 Mobile`,
            `Map Practice`,
            `Case #3 Mobile`,
            `Case #4`,
            `Case #4 Mobile`,
            `Case #5`,
          ],
          title: `Variant`,
          type: F.Enum,
        },
      }),
      B(
        Cv,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_Re-Q4mJPby1QNtA.woff2`,
                weight: `700`,
              },
              {
                family: `Satoshi`,
                source: `fontshare`,
                style: `normal`,
                url: `https://framerusercontent.com/third-party-assets/fontshare/wf/LAFFD4SDUCDVQEXFPDC7C53EQ4ZELWQI/PXCT3G6LO6ICM5I3NTYENYPWJAECAWDD/GHM6WVH6MILNYOOCXHXB5GTSGNTMGXZR.woff2`,
                weight: `700`,
              },
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RnOM4mJPby1QNtA.woff2`,
                weight: `400`,
              },
              {
                family: `DM Sans`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/dmsans/v16/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwAopxhS2f3ZGMZpg.woff2`,
                weight: `400`,
              },
            ],
          },
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  });
function Ev(e, ...t) {
  let n = {};
  return t?.forEach((t) => t && Object.assign(n, e[t])), n;
}
var Dv,
  Ov,
  kv,
  Av,
  jv,
  Mv,
  Nv,
  Pv,
  Fv,
  Iv,
  Lv,
  Rv,
  zv = e(() => {
    a(),
      se(),
      E(),
      o(),
      (Dv = ye(D.div)),
      (Ov = { t5TQwG25z: { hover: !0 } }),
      (kv = `framer-o03rU`),
      (Av = { t5TQwG25z: `framer-v-uoiani` }),
      (jv = { damping: 60, delay: 0, mass: 1, stiffness: 200, type: `spring` }),
      (Mv = (e) =>
        typeof e == `object` && e && typeof e.src == `string`
          ? e
          : typeof e == `string`
          ? { src: e }
          : void 0),
      (Nv = ({ value: e, children: t }) => {
        let n = p(S),
          r = e ?? n.transition,
          i = m(() => ({ ...n, transition: r }), [JSON.stringify(r)]);
        return u(S.Provider, { value: i, children: t });
      }),
      (Pv = D.create(y)),
      (Fv = ({
        bodyText: e,
        height: t,
        id: n,
        image2: r,
        link: i,
        title: a,
        title2: o,
        width: s,
        ...c
      }) => ({
        ...c,
        dCx0Bolw9: o ?? c.dCx0Bolw9 ?? `Halle Van De Hey`,
        MRnowVoHC: r ??
          c.MRnowVoHC ?? {
            alt: ``,
            pixelHeight: 774,
            pixelWidth: 740,
            src: `https://framerusercontent.com/images/MgkbqtYm6DEIfcLqboU5nCPNuvQ.png?scale-down-to=512`,
            srcSet: `https://framerusercontent.com/images/MgkbqtYm6DEIfcLqboU5nCPNuvQ.png 740w`,
          },
        oHlymWWA0: i ?? c.oHlymWWA0,
        rsuSWE2Wj: a ?? c.rsuSWE2Wj ?? `Alexandre Trochut`,
        zJ7dVXMEI:
          e ??
          c.zJ7dVXMEI ??
          `Designers can take control of HTML, CSS, and JavaScript in a visual canvas — while marketers can work with pre-made, design-approved building blocks.`,
      })),
      (Iv = (e, t) =>
        e.layoutDependency ? t.join(`-`) + e.layoutDependency : t.join(`-`)),
      (Lv = K(
        t(function (e, t) {
          let r = d(null),
            i = t ?? r,
            a = n(),
            { activeLocale: o, setLocale: s } = pe(),
            c = le(),
            {
              style: l,
              className: f,
              layoutId: p,
              variant: m,
              zJ7dVXMEI: h,
              oHlymWWA0: _,
              MRnowVoHC: v,
              rsuSWE2Wj: b,
              dCx0Bolw9: S,
              ...C
            } = Fv(e),
            {
              baseVariant: w,
              classNames: T,
              clearLoadingGesture: E,
              gestureHandlers: O,
              gestureVariant: k,
              isLoading: A,
              setGestureState: j,
              setVariant: M,
              variants: N,
            } = ve({
              defaultVariant: `t5TQwG25z`,
              enabledGestures: Ov,
              ref: i,
              variant: m,
              variantClassNames: Av,
            }),
            P = Iv(e, N),
            F = H(kv);
          return u(x, {
            id: p ?? a,
            children: u(Pv, {
              animate: N,
              initial: !1,
              children: u(Nv, {
                value: jv,
                children: u(I, {
                  href: _,
                  motionChild: !0,
                  nodeId: `t5TQwG25z`,
                  openInNewTab: !0,
                  scopeId: `yobNKbOef`,
                  children: g(D.a, {
                    ...C,
                    ...O,
                    className: `${H(F, `framer-uoiani`, f, T)} framer-1ty89bw`,
                    "data-border": !0,
                    "data-framer-name": `Default`,
                    layoutDependency: P,
                    layoutId: `t5TQwG25z`,
                    ref: i,
                    style: {
                      "--border-bottom-width": `1px`,
                      "--border-color": `var(--token-a9883d9b-c1bd-4bd9-be15-284cd72e1b1f, rgba(255, 255, 255, 0.07))`,
                      "--border-left-width": `1px`,
                      "--border-right-width": `1px`,
                      "--border-style": `solid`,
                      "--border-top-width": `1px`,
                      backgroundColor: `var(--token-74f48371-76c0-476a-a319-1331b3a438c2, rgb(8, 8, 8))`,
                      borderBottomLeftRadius: 20,
                      borderBottomRightRadius: 20,
                      borderTopLeftRadius: 20,
                      borderTopRightRadius: 20,
                      ...l,
                    },
                    ...Ev(
                      { "t5TQwG25z-hover": { "data-framer-name": void 0 } },
                      w,
                      k
                    ),
                    children: [
                      u(te, {
                        as: `figure`,
                        background: {
                          alt: ``,
                          fit: `fill`,
                          loading: G(
                            (c?.y || 0) +
                              ((c?.height || 333) * 0.5016611295681065 -
                                ((c?.height || 333) * 1) / 2)
                          ),
                          pixelHeight: 3425,
                          pixelWidth: 5071,
                          sizes: c?.width || `100vw`,
                          src: `https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png`,
                          srcSet: `https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png?scale-down-to=512 512w,https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png?scale-down-to=1024 1024w,https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png?scale-down-to=2048 2048w,https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png?scale-down-to=4096 4096w,https://framerusercontent.com/images/1xOqMa4sAAwBCrdkiSJfIXups.png 5071w`,
                        },
                        className: `framer-1lfyrde`,
                        "data-framer-name": `Abstract Dots`,
                        layoutDependency: P,
                        layoutId: `IEkSboYKs`,
                        style: {
                          borderBottomLeftRadius: `100%`,
                          borderBottomRightRadius: `100%`,
                          borderTopLeftRadius: `100%`,
                          borderTopRightRadius: `100%`,
                        },
                      }),
                      g(D.div, {
                        className: `framer-117tlk8`,
                        "data-framer-name": `Content`,
                        layoutDependency: P,
                        layoutId: `s0e6dKzfF`,
                        children: [
                          u(D.div, {
                            className: `framer-1dpmcto`,
                            "data-framer-name": `Middle`,
                            layoutDependency: P,
                            layoutId: `Z0A_Cb9qk`,
                            children: g(D.div, {
                              className: `framer-f5gd71`,
                              layoutDependency: P,
                              layoutId: `Yam6lSkb_`,
                              children: [
                                u(te, {
                                  background: {
                                    alt: ``,
                                    fit: `fill`,
                                    intrinsicHeight: 600,
                                    intrinsicWidth: 600,
                                    loading: G(
                                      (c?.y || 0) +
                                        30 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0
                                    ),
                                    pixelHeight: 774,
                                    pixelWidth: 740,
                                    sizes: `54px`,
                                    ...Mv(v),
                                  },
                                  className: `framer-i04fc1`,
                                  "data-framer-name": `Picture`,
                                  layoutDependency: P,
                                  layoutId: `xRYNr9RvI`,
                                  style: {
                                    borderBottomLeftRadius: 42,
                                    borderBottomRightRadius: 42,
                                    borderTopLeftRadius: 42,
                                    borderTopRightRadius: 42,
                                  },
                                }),
                                g(D.div, {
                                  className: `framer-iuwuw3`,
                                  layoutDependency: P,
                                  layoutId: `B6gVxd70q`,
                                  children: [
                                    u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(D.p, {
                                          style: {
                                            "--font-selector": `R0Y7R2Vpc3QtNjAw`,
                                            "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                            "--framer-font-size": `24px`,
                                            "--framer-font-weight": `600`,
                                            "--framer-letter-spacing": `-0.5px`,
                                            "--framer-line-height": `26px`,
                                            "--framer-text-color": `var(--extracted-r6o4lv, var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255)))`,
                                          },
                                          children: `Alexandre Trochut`,
                                        }),
                                      }),
                                      className: `framer-1rpayfi`,
                                      "data-framer-name": `Text`,
                                      fonts: [`GF;Geist-600`],
                                      layoutDependency: P,
                                      layoutId: `Ug8EGmSV_`,
                                      style: {
                                        "--extracted-r6o4lv": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                                        "--framer-paragraph-spacing": `0px`,
                                      },
                                      text: b,
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                    u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(D.p, {
                                          style: {
                                            "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                            "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-letter-spacing": `-0.2px`,
                                            "--framer-line-height": `26px`,
                                            "--framer-text-alignment": `left`,
                                            "--framer-text-color": `var(--extracted-r6o4lv, var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6)))`,
                                          },
                                          children: `Halle Van De Hey`,
                                        }),
                                      }),
                                      className: `framer-1oy96nb`,
                                      "data-framer-name": `Body Text`,
                                      fonts: [`GF;Geist-regular`],
                                      layoutDependency: P,
                                      layoutId: `zlSI8ci0i`,
                                      style: {
                                        "--extracted-r6o4lv": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                        "--framer-link-text-color": `rgb(0, 153, 255)`,
                                        "--framer-link-text-decoration": `underline`,
                                      },
                                      text: S,
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  ],
                                }),
                              ],
                            }),
                          }),
                          u(D.div, {
                            className: `framer-18axa9x`,
                            "data-framer-name": `Seperator`,
                            layoutDependency: P,
                            layoutId: `KVzc8kD4s`,
                            style: {
                              background: `linear-gradient(90.00000000000075deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0) 100%)`,
                            },
                          }),
                          u(R, {
                            __fromCanvasComponent: !0,
                            children: u(y, {
                              children: u(D.p, {
                                style: {
                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                  "--framer-font-size": `14px`,
                                  "--framer-letter-spacing": `-0.2px`,
                                  "--framer-line-height": `26px`,
                                  "--framer-text-alignment": `left`,
                                  "--framer-text-color": `var(--extracted-r6o4lv, var(--token-d2ee1de5-88f8-41d7-8642-338767096a94, rgba(255, 255, 255, 0.5)))`,
                                },
                                children: `Designers can take control of HTML, CSS, and JavaScript in a visual canvas — while marketers can work with pre-made, design-approved building blocks.`,
                              }),
                            }),
                            className: `framer-68d372`,
                            "data-framer-name": `Body Text`,
                            fonts: [`GF;Geist-regular`],
                            layoutDependency: P,
                            layoutId: `xMGwRkLJb`,
                            style: {
                              "--extracted-r6o4lv": `var(--token-d2ee1de5-88f8-41d7-8642-338767096a94, rgba(255, 255, 255, 0.5))`,
                              "--framer-link-text-color": `rgb(0, 153, 255)`,
                              "--framer-link-text-decoration": `underline`,
                            },
                            text: h,
                            verticalAlignment: `top`,
                            withExternalLayout: !0,
                          }),
                        ],
                      }),
                      u(Dv, {
                        __framer__spring: {
                          bounce: 0.2,
                          damping: 60,
                          delay: 0,
                          duration: 0.3,
                          durationBasedSpring: !1,
                          ease: [0.44, 0, 0.56, 1],
                          mass: 1,
                          stiffness: 300,
                          type: `spring`,
                        },
                        __framer__styleTransformEffectEnabled: !0,
                        __framer__transformTargets: [
                          {
                            target: {
                              opacity: 0,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 0.3,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                          {
                            target: {
                              opacity: 1,
                              rotate: 0,
                              rotateX: 0,
                              rotateY: 0,
                              scale: 1,
                              skewX: 0,
                              skewY: 0,
                              x: 0,
                              y: 0,
                            },
                          },
                        ],
                        __framer__transformTrigger: `onInView`,
                        __perspectiveFX: !1,
                        __smartComponentFX: !0,
                        __targetOpacity: 1,
                        className: `framer-1typx2l`,
                        "data-framer-name": `Blue Line`,
                        layoutDependency: P,
                        layoutId: `OFR5l97eQ`,
                        style: {
                          background: `linear-gradient(90.00000000000155deg, rgba(26, 51, 214, 0) 0%, rgb(26, 67, 214) 50%, rgba(0, 85, 255, 0) 100%)`,
                        },
                      }),
                    ],
                  }),
                }),
              }),
            }),
          });
        }),
        [
          `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
          `.framer-o03rU.framer-1ty89bw, .framer-o03rU .framer-1ty89bw { display: block; }`,
          `.framer-o03rU.framer-uoiani { align-content: flex-start; align-items: flex-start; cursor: pointer; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 22px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 30px 28px 30px 28px; position: relative; text-decoration: none; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
          `.framer-o03rU .framer-1lfyrde { flex: none; height: 100%; left: calc(50.00000000000002% - 100% / 2); position: absolute; top: calc(50.16611295681065% - 100% / 2); width: 100%; }`,
          `.framer-o03rU .framer-117tlk8 { align-content: flex-start; align-items: flex-start; align-self: stretch; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: auto; }`,
          `.framer-o03rU .framer-1dpmcto { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
          `.framer-o03rU .framer-f5gd71 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }`,
          `.framer-o03rU .framer-i04fc1 { flex: none; height: 54px; position: relative; width: 54px; }`,
          `.framer-o03rU .framer-iuwuw3 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 4px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }`,
          `.framer-o03rU .framer-1rpayfi { flex: none; height: auto; position: relative; white-space: pre; width: auto; }`,
          `.framer-o03rU .framer-1oy96nb { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 230px; word-break: break-word; word-wrap: break-word; z-index: 1; }`,
          `.framer-o03rU .framer-18axa9x { flex: none; height: 1px; position: relative; width: 230px; }`,
          `.framer-o03rU .framer-68d372 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; z-index: 1; }`,
          `.framer-o03rU .framer-1typx2l { flex: none; height: 1px; left: calc(50.00000000000002% - 63% / 2); position: absolute; top: 0px; width: 63%; z-index: 1; }`,
          `.framer-o03rU[data-border="true"]::after, .framer-o03rU [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
        ],
        `framer-o03rU`
      )),
      (Rv = Lv),
      (Lv.displayName = `Card/Testimonial Card`),
      (Lv.defaultProps = { height: 333, width: 286 }),
      V(Lv, {
        zJ7dVXMEI: {
          defaultValue: `Designers can take control of HTML, CSS, and JavaScript in a visual canvas — while marketers can work with pre-made, design-approved building blocks.`,
          displayTextArea: !0,
          title: `Body Text`,
          type: F.String,
        },
        oHlymWWA0: { title: `Link`, type: F.Link },
        MRnowVoHC: {
          __defaultAssetReference: `data:framer/asset-reference,MgkbqtYm6DEIfcLqboU5nCPNuvQ.png?originalFilename=Screenshot+2025-06-30+at+11.13.14%C3%A2%C2%80%C2%AFPM.png&preferredSize=auto`,
          __vekterDefault: {
            alt: ``,
            assetReference: `data:framer/asset-reference,MgkbqtYm6DEIfcLqboU5nCPNuvQ.png?originalFilename=Screenshot+2025-06-30+at+11.13.14%C3%A2%C2%80%C2%AFPM.png&preferredSize=auto`,
          },
          title: `Image 2`,
          type: F.ResponsiveImage,
        },
        rsuSWE2Wj: {
          defaultValue: `Alexandre Trochut`,
          displayTextArea: !1,
          title: `Title`,
          type: F.String,
        },
        dCx0Bolw9: {
          defaultValue: `Halle Van De Hey`,
          displayTextArea: !1,
          title: `Title 2`,
          type: F.String,
        },
      }),
      B(
        Lv,
        [
          {
            explicitInter: !0,
            fonts: [
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RQuQ4mJPby1QNtA.woff2`,
                weight: `600`,
              },
              {
                family: `Geist`,
                source: `google`,
                style: `normal`,
                url: `https://fonts.gstatic.com/s/geist/v3/gyBhhwUxId8gMGYQMKR3pzfaWI_RnOM4mJPby1QNtA.woff2`,
                weight: `400`,
              },
            ],
          },
        ],
        { supportsExplicitInterCodegen: !0 }
      );
  }),
  Bv,
  Vv,
  Hv,
  Uv,
  Wv,
  Gv,
  Kv,
  qv,
  Jv,
  Yv,
  Xv,
  Zv,
  Qv,
  $v,
  ey,
  ty,
  ny,
  ry,
  iy,
  ay,
  oy,
  sy,
  cy,
  ly,
  uy,
  dy,
  fy,
  py,
  my,
  hy,
  gy,
  _y,
  vy,
  yy,
  by,
  xy,
  Sy,
  Cy,
  wy,
  Ty,
  Ey,
  Dy,
  Oy,
  ky,
  Ay,
  jy,
  My,
  Ny,
  Py,
  Fy,
  Iy,
  Ly,
  Ry;
e(() => {
  a(),
    se(),
    E(),
    o(),
    qe(),
    Kt(),
    rn(),
    ng(),
    Lg(),
    $g(),
    ke(),
    Ae(),
    f_(),
    q_(),
    cv(),
    Tv(),
    zv(),
    De(),
    Oe(),
    (Bv = U(sv)),
    (Vv = be(R)),
    (Hv = be(D.div)),
    (Uv = U(we)),
    (Wv = U(Ig)),
    (Gv = U(Kg)),
    (Kv = U(wv)),
    (qv = ye(P)),
    (Jv = ye(D.div)),
    (Yv = U(K_)),
    (Xv = U(Gh)),
    (Zv = U(Rv)),
    (Qv = U(It)),
    ($v = U(nn)),
    (ey = U(Ke)),
    (ty = U(d_)),
    (ny = xe(d_)),
    (ry = U(Ee)),
    (iy = {
      Oc18Q6NWV: `(min-width: 810px) and (max-width: 1199.98px)`,
      WQLkyLRf1: `(min-width: 1200px)`,
      YDU0n2zno: `(max-width: 809.98px)`,
    }),
    (ay = () => typeof document < `u`),
    (oy = `framer-pOlB9`),
    (sy = {
      Oc18Q6NWV: `framer-v-1nc64nb`,
      WQLkyLRf1: `framer-v-72rtr7`,
      YDU0n2zno: `framer-v-1pn6j55`,
    }),
    (cy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: {
        damping: 60,
        delay: 0.5,
        mass: 1,
        stiffness: 358,
        type: `spring`,
      },
      x: 0,
      y: 0,
    }),
    (ly = {
      opacity: 0.001,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      x: 0,
      y: 0,
    }),
    (uy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 0.97,
      skewX: 0,
      skewY: 0,
      transition: {
        damping: 30,
        delay: 0,
        mass: 1,
        stiffness: 400,
        type: `spring`,
      },
    }),
    (dy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: {
        damping: 72,
        delay: 0.5,
        mass: 1,
        stiffness: 433,
        type: `spring`,
      },
      x: 0,
      y: 0,
    }),
    (fy = {
      filter: `blur(10px)`,
      opacity: 0.001,
      rotate: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      x: 0,
      y: 10,
    }),
    (py = {
      damping: 50,
      delay: 0.05,
      mass: 1,
      stiffness: 300,
      type: `spring`,
    }),
    (my = {
      effect: fy,
      startDelay: 0.6,
      tokenization: `word`,
      transition: py,
      trigger: `onMount`,
      type: `appear`,
    }),
    (hy = {
      effect: fy,
      startDelay: 0.8,
      tokenization: `word`,
      transition: {
        delay: 0.05,
        duration: 0.8,
        ease: [0.44, 0, 0.56, 1],
        type: `tween`,
      },
      trigger: `onMount`,
      type: `appear`,
    }),
    (gy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: {
        damping: 60,
        delay: 1.1,
        mass: 1,
        stiffness: 200,
        type: `spring`,
      },
      x: 0,
      y: 0,
    }),
    (_y = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: {
        damping: 60,
        delay: 1.2,
        mass: 1,
        stiffness: 200,
        type: `spring`,
      },
      x: 0,
      y: 0,
    }),
    (vy = {
      effect: fy,
      startDelay: 0.9,
      tokenization: `word`,
      transition: py,
      trigger: `onMount`,
      type: `appear`,
    }),
    (yy = {
      opacity: 0,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transformPerspective: 1200,
      x: 0,
      y: 0,
    }),
    (by = { bounce: 0.2, delay: 0, duration: 0.3, type: `spring` }),
    (xy = {
      opacity: 0,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transformPerspective: 1200,
      transition: by,
      x: 0,
      y: 0,
    }),
    (Sy = {
      effect: fy,
      repeat: !1,
      startDelay: 0,
      threshold: 0.5,
      tokenization: `word`,
      transition: {
        damping: 37,
        delay: 0.06,
        mass: 1,
        stiffness: 315,
        type: `spring`,
      },
      trigger: `onInView`,
      type: `appear`,
    }),
    (Cy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: { bounce: 0.2, delay: 0.9, duration: 0.4, type: `spring` },
      x: 0,
      y: 0,
    }),
    (wy = {
      opacity: 1,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      transition: { bounce: 0.2, delay: 1.2, duration: 0.4, type: `spring` },
      x: 0,
      y: 0,
    }),
    (Ty = (e, t) => {
      if (!(!e || typeof e != `object`)) return { ...e, alt: t };
    }),
    (Ey = {
      effect: fy,
      repeat: !1,
      startDelay: 0,
      threshold: 0.5,
      tokenization: `word`,
      transition: py,
      trigger: `onInView`,
      type: `appear`,
    }),
    (Dy = {
      effect: fy,
      repeat: !1,
      startDelay: 0.2,
      threshold: 0.5,
      tokenization: `word`,
      transition: py,
      trigger: `onInView`,
      type: `appear`,
    }),
    (Oy = {
      opacity: 0,
      rotate: 0,
      rotateX: 0,
      rotateY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0,
      x: 0,
      y: 0,
    }),
    (ky = { bounce: 0.2, delay: 0, duration: 0.4, type: `spring` }),
    (Ay = ({ value: e }) =>
      fe()
        ? null
        : u(`style`, {
            dangerouslySetInnerHTML: { __html: e },
            "data-framer-html-style": ``,
          })),
    (jy = { Desktop: `WQLkyLRf1`, Phone: `YDU0n2zno`, Tablet: `Oc18Q6NWV` }),
    (My = ({ height: e, id: t, width: n, ...r }) => ({
      ...r,
      variant: jy[r.variant] ?? r.variant ?? `WQLkyLRf1`,
    })),
    (Ny = { component: Ee, variant: `woIRdd3N0` }),
    (Py = t(function (e, t) {
      let r = d(null),
        i = t ?? r,
        a = n(),
        { activeLocale: o, setLocale: s } = pe(),
        c = le(),
        { style: l, className: f, layoutId: p, variant: h, ..._ } = My(e),
        v = m(() => je({}, o), [o]);
      me(v);
      let [b, S] = de(h, iy, !1),
        C = H(oy, Se),
        w = ge(`BgNtyLH0x`),
        T = d(null),
        E = ge(`OunIGDRQr`),
        O = d(null),
        k = () => (ay() ? ![`Oc18Q6NWV`, `YDU0n2zno`].includes(b) : !0);
      _e();
      let A = () => !ay() || b === `Oc18Q6NWV`,
        j = () => !ay() || b === `YDU0n2zno`,
        M = ge(`V5V4Z4DQQ`),
        F = d(null),
        ne = ge(`Rd_hGxn1c`),
        ie = d(null),
        B = d(null),
        V = d(null),
        ae = d(null),
        U = ge(`dCDC69rMu`),
        W = d(null),
        oe = ge(`uqYhhRTT9`),
        se = ge(`FTMlkB5I5`),
        ce = ge(`MLufM5z_P`),
        fe = () => (ay() ? b !== `YDU0n2zno` : !0),
        he = ge(`qiLmUSAi8`),
        ve = d(null),
        K = () => (ay() ? b !== `Oc18Q6NWV` : !0),
        ye = ge(`UDHvzrpMW`),
        be = d(null),
        xe = ge(`k637go2MC`),
        Ce = d(null),
        Te = ge(`cF0GYYqyR`),
        Ee = d(null);
      return (
        ue({ "18qojda": Ny }),
        u(ee.Provider, {
          value: { primaryVariantId: `WQLkyLRf1`, variantClassNames: sy },
          children: g(x, {
            id: p ?? a,
            children: [
              u(Ay, { value: `html body { background: rgb(0, 0, 0); }` }),
              g(D.div, {
                ..._,
                className: H(C, `framer-72rtr7`, f),
                ref: i,
                style: { ...l },
                children: [
                  u(`div`, {
                    className: `framer-1tq1nri`,
                    children: g(z, {
                      className: `framer-1szpd2c`,
                      opacity: 1,
                      requiresOverflowVisible: !1,
                      svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 98 46" overflow="visible"><g><path d="M 4.17 46 C 1.867 46 0 44.128 0 41.818 L 0 4.182 C 0 1.872 1.867 0 4.17 0 L 93.83 0 C 96.133 0 98 1.872 98 4.182 L 98 41.818 C 98 44.128 96.133 46 93.83 46 Z" fill="transparent"></path><path d="M 4.17 46 C 1.867 46 0 44.128 0 41.818 L 0 4.182 C 0 1.872 1.867 0 4.17 0 L 93.83 0 C 96.133 0 98 1.872 98 4.182 L 98 41.818 C 98 44.128 96.133 46 93.83 46 Z" fill="rgb(24,24,24)"></path><path d="M 97.57 42.593 C 97.57 44.239 96.223 45.574 94.562 45.574 L 3.438 45.574 C 1.777 45.574 0.43 44.239 0.43 42.593 L 0.43 17.675 L 97.57 17.675 Z M 97.57 17.25 L 0.43 17.25 L 0.43 3.408 C 0.43 1.76 1.777 0.424 3.438 0.424 L 94.562 0.424 C 96.223 0.424 97.57 1.76 97.57 3.406 Z M 98 3.408 C 98 1.526 96.46 0 94.562 0 L 3.438 0 C 1.54 0 0 1.526 0 3.408 L 0 42.592 C 0 44.474 1.54 46 3.438 46 L 94.562 46 C 96.46 46 98 44.474 98 42.592 Z" fill="rgb(255,255,255)"></path><path d="M 31.669 31.518 L 31.635 31.518 L 31.662 31.508 Z" fill="rgb(255,255,255)"></path><path d="M 15.315 28.369 L 15.315 28.275 C 11.934 29.454 9.296 30.703 7.923 31.779 C 7.525 32.091 7.234 32.388 7.061 32.665 C 6.901 32.922 6.842 33.162 6.898 33.379 C 6.952 33.597 7.116 33.781 7.38 33.933 C 7.916 34.244 8.861 34.421 10.122 34.47 C 9.963 33.752 10.013 33.005 10.266 32.315 C 10.126 32.233 10.02 32.105 9.964 31.952 L 9.962 31.948 L 9.962 31.945 C 9.959 31.938 9.957 31.93 9.954 31.923 C 9.732 31.04 11.886 29.684 15.315 28.368 Z M 12.26 32.767 C 11.982 33.289 11.97 33.914 12.229 34.447 C 12.534 35.074 13.181 35.508 13.931 35.508 C 14.808 35.508 15.547 34.914 15.757 34.11 C 15.887 33.616 15.808 33.09 15.538 32.657 C 15.205 32.124 14.61 31.768 13.931 31.768 C 13.206 31.768 12.577 32.173 12.26 32.767 Z" fill="rgb(255,255,255)"></path><path d="M 22.863 30.272 L 22.863 24.039 L 26.637 24.039 L 30.08 29.157 C 30.192 29.114 30.302 29.07 30.411 29.026 L 30.411 24.039 L 34.185 24.039 L 34.185 24.43 C 35.314 24.406 36.27 24.46 37.006 24.593 C 37.506 24.683 37.904 24.811 38.189 24.975 C 38.452 25.127 38.616 25.311 38.671 25.529 C 38.727 25.746 38.668 25.986 38.508 26.243 C 37.997 27.062 36.448 28.059 34.185 29.082 C 33.112 29.563 32.021 30.001 30.915 30.398 C 29.793 30.801 28.661 31.175 27.519 31.518 C 26.413 31.852 25.3 32.161 24.18 32.447 C 22.082 32.984 19.963 33.435 17.828 33.797 C 17.848 33.323 17.779 32.848 17.625 32.399 C 17.247 31.301 16.4 30.43 15.315 30.023 L 15.315 24.039 L 19.089 24.039 Z M 35.287 25.691 L 35.287 25.688 C 35.286 25.68 35.284 25.672 35.282 25.665 C 35.201 25.345 34.816 25.116 34.185 24.974 L 34.185 27.135 C 34.963 26.591 35.363 26.097 35.288 25.695 L 35.288 25.691 Z" fill="rgb(255,255,255)"></path><path d="M 20.346 38.999 L 22.863 38.999 L 22.863 34.113 C 21.169 34.509 19.461 34.848 17.744 35.13 L 20.346 38.998 Z M 28.147 38.999 L 30.411 38.999 L 34.185 31.518 L 34.185 30.493 C 33.355 30.857 32.513 31.195 31.662 31.509 L 31.669 31.519 L 31.635 31.519 C 31.239 31.666 30.83 31.812 30.411 31.956 C 28.59 32.577 26.747 33.13 24.886 33.614 Z M 50.295 24.003 L 48.635 29.984 L 47.059 29.984 L 46.586 27.971 C 46.503 27.631 46.418 27.191 46.333 26.651 C 46.277 26.311 46.229 26.04 46.19 25.841 C 46.147 26.105 46.105 26.369 46.064 26.634 C 46.002 27.057 45.92 27.494 45.819 27.946 L 45.364 29.985 L 43.762 29.985 L 42.118 24.003 L 43.703 24.003 L 44.158 25.933 C 44.339 26.717 44.478 27.531 44.58 28.372 C 44.683 27.56 44.824 26.755 45.002 25.957 L 45.456 24.002 L 46.958 24.002 L 47.379 25.841 C 47.576 26.708 47.725 27.553 47.826 28.372 C 47.944 27.431 48.101 26.556 48.298 25.747 L 48.711 24.002 L 50.296 24.002 Z M 53.928 24.003 L 56.187 29.984 L 54.552 29.984 L 54.164 28.89 L 52.072 28.89 L 51.685 29.984 L 50.067 29.984 L 52.326 24.003 Z M 53.801 27.77 L 53.514 26.96 C 53.36 26.519 53.23 26.07 53.126 25.615 C 53.014 26.049 52.876 26.503 52.714 26.977 L 52.435 27.77 Z M 60.949 28.639 L 60.949 29.984 L 56.539 29.984 L 56.539 24.004 L 58.116 24.004 L 58.116 28.64 L 60.949 28.64 Z M 65.983 28.639 L 65.983 29.984 L 61.574 29.984 L 61.574 24.004 L 63.151 24.004 L 63.151 28.64 L 65.984 28.64 Z M 70.729 23.852 C 71.667 23.852 72.415 24.18 72.97 24.838 C 73.449 25.412 73.688 26.13 73.688 26.994 C 73.688 27.99 73.379 28.781 72.76 29.367 C 72.221 29.879 71.543 30.134 70.729 30.134 C 69.773 30.134 69.014 29.806 68.452 29.148 C 67.969 28.581 67.727 27.862 67.727 26.994 C 67.727 25.996 68.025 25.216 68.621 24.654 C 69.194 24.119 69.897 23.852 70.729 23.852 Z M 70.721 25.138 C 70.265 25.138 69.91 25.328 69.657 25.707 C 69.438 26.03 69.329 26.455 69.329 26.985 C 69.329 27.602 69.469 28.079 69.75 28.413 C 69.998 28.703 70.323 28.848 70.729 28.848 C 71.156 28.848 71.49 28.683 71.732 28.355 C 71.974 28.02 72.095 27.556 72.095 26.96 C 72.095 26.353 71.954 25.888 71.672 25.564 C 71.437 25.284 71.086 25.127 70.721 25.139 Z M 78.834 24.003 L 78.834 25.288 L 75.95 25.288 L 75.95 26.459 L 78.446 26.459 L 78.446 27.678 L 75.95 27.678 L 75.95 29.984 L 74.374 29.984 L 74.374 24.004 L 78.834 24.004 Z M 37.182 33.053 L 39.669 33.053 C 40.467 33.053 41.043 33.172 41.398 33.412 C 41.948 33.78 42.223 34.337 42.223 35.083 C 42.223 35.69 42.015 36.181 41.6 36.553 C 41.239 36.877 40.709 37.038 40.006 37.038 L 38.758 37.038 L 38.758 39.035 L 37.182 39.035 Z M 38.758 34.339 L 38.758 35.81 L 39.795 35.81 C 40.392 35.81 40.689 35.565 40.689 35.075 C 40.689 34.596 40.372 34.354 39.736 34.348 L 38.758 34.34 Z M 45.574 32.903 C 46.512 32.903 47.26 33.231 47.817 33.888 C 48.294 34.462 48.534 35.181 48.534 36.044 C 48.534 37.04 48.224 37.832 47.606 38.417 C 47.066 38.93 46.389 39.185 45.574 39.185 C 44.619 39.185 43.86 38.856 43.298 38.199 C 42.815 37.631 42.573 36.913 42.573 36.044 C 42.573 35.047 42.871 34.267 43.466 33.704 C 44.04 33.17 44.742 32.903 45.574 32.903 Z M 45.566 34.188 C 45.11 34.188 44.757 34.379 44.502 34.757 C 44.283 35.081 44.175 35.507 44.175 36.036 C 44.175 36.654 44.315 37.13 44.596 37.464 C 44.843 37.753 45.17 37.899 45.574 37.899 C 46.002 37.899 46.335 37.735 46.577 37.405 C 46.819 37.071 46.94 36.607 46.94 36.011 C 46.94 35.404 46.799 34.938 46.519 34.615 C 46.283 34.334 45.932 34.177 45.566 34.19 Z M 49.202 33.053 L 52.179 33.053 C 52.791 33.053 53.258 33.147 53.578 33.337 C 54.123 33.654 54.396 34.136 54.396 34.782 C 54.396 35.117 54.312 35.415 54.143 35.676 C 53.974 35.938 53.747 36.128 53.46 36.245 C 53.712 36.311 53.93 36.473 54.067 36.695 C 54.168 36.852 54.236 37.013 54.269 37.181 C 54.309 37.342 54.354 37.712 54.405 38.291 C 54.444 38.659 54.494 38.887 54.556 38.977 L 54.607 39.035 L 52.996 39.035 C 52.946 38.918 52.887 38.5 52.819 37.781 C 52.774 37.42 52.673 37.169 52.517 37.03 C 52.358 36.885 52.103 36.813 51.748 36.813 L 50.779 36.813 L 50.779 39.035 L 49.202 39.035 Z M 50.779 34.281 L 50.779 35.693 L 51.892 35.693 C 52.527 35.693 52.845 35.453 52.845 34.975 C 52.845 34.513 52.522 34.281 51.875 34.281 Z M 60.121 33.053 L 60.121 34.399 L 58.317 34.399 L 58.317 39.035 L 56.748 39.035 L 56.748 34.399 L 54.953 34.399 L 54.953 33.053 Z M 65.124 33.053 L 65.124 34.339 L 62.24 34.339 L 62.24 35.51 L 64.736 35.51 L 64.736 36.729 L 62.24 36.729 L 62.24 39.035 L 60.664 39.035 L 60.664 33.053 Z M 68.406 32.903 C 69.344 32.903 70.092 33.231 70.649 33.888 C 71.126 34.462 71.365 35.181 71.365 36.044 C 71.365 37.04 71.056 37.832 70.437 38.417 C 69.898 38.93 69.221 39.185 68.406 39.185 C 67.45 39.185 66.692 38.856 66.129 38.199 C 65.646 37.631 65.405 36.913 65.405 36.044 C 65.405 35.047 65.703 34.267 66.298 33.704 C 66.871 33.17 67.574 32.903 68.406 32.903 Z M 68.398 34.188 C 67.942 34.188 67.589 34.379 67.334 34.757 C 67.115 35.081 67.007 35.507 67.007 36.036 C 67.007 36.654 67.147 37.13 67.428 37.464 C 67.675 37.753 68.002 37.899 68.406 37.899 C 68.834 37.899 69.167 37.735 69.409 37.405 C 69.651 37.071 69.772 36.607 69.772 36.011 C 69.772 35.404 69.631 34.938 69.351 34.615 C 69.115 34.334 68.764 34.177 68.398 34.19 Z M 76.461 37.69 L 76.461 39.035 L 72.051 39.035 L 72.051 33.053 L 73.628 33.053 L 73.628 37.69 Z M 78.663 33.053 L 78.663 39.035 L 77.086 39.035 L 77.086 33.053 Z M 82.341 32.903 C 83.28 32.903 84.028 33.231 84.584 33.888 C 85.062 34.462 85.301 35.181 85.301 36.044 C 85.301 37.04 84.992 37.832 84.373 38.417 C 83.834 38.93 83.156 39.185 82.342 39.185 C 81.386 39.185 80.627 38.856 80.065 38.199 C 79.582 37.631 79.34 36.913 79.34 36.044 C 79.34 35.047 79.638 34.267 80.234 33.704 C 80.807 33.17 81.51 32.903 82.342 32.903 Z M 82.334 34.188 C 81.878 34.188 81.523 34.379 81.27 34.757 C 81.051 35.081 80.942 35.507 80.942 36.036 C 80.942 36.654 81.082 37.13 81.364 37.464 C 81.611 37.753 81.937 37.899 82.342 37.899 C 82.769 37.899 83.103 37.735 83.345 37.405 C 83.587 37.071 83.708 36.607 83.708 36.011 C 83.708 35.404 83.567 34.938 83.285 34.615 C 83.05 34.334 82.699 34.177 82.334 34.19 Z M 90.607 34.849 L 89.106 34.849 C 89.084 34.359 88.761 34.114 88.136 34.114 C 87.591 34.114 87.319 34.29 87.319 34.64 C 87.319 34.802 87.392 34.919 87.538 34.991 C 87.661 35.053 88.058 35.167 88.726 35.334 C 89.362 35.495 89.822 35.665 90.109 35.843 C 90.604 36.145 90.851 36.596 90.851 37.197 C 90.851 37.854 90.591 38.361 90.067 38.717 C 89.612 39.029 89.014 39.185 88.271 39.185 C 87.372 39.185 86.686 38.97 86.214 38.542 C 85.798 38.169 85.585 37.661 85.574 37.022 L 87.158 37.022 C 87.192 37.656 87.583 37.973 88.33 37.973 C 88.943 37.973 89.25 37.77 89.25 37.364 C 89.258 37.188 89.162 37.024 89.005 36.945 C 88.848 36.851 88.451 36.715 87.816 36.538 C 87.046 36.319 86.529 36.1 86.265 35.877 C 85.955 35.616 85.801 35.236 85.801 34.74 C 85.801 34.15 86.048 33.685 86.543 33.346 C 86.976 33.05 87.53 32.903 88.204 32.903 C 89.007 32.903 89.62 33.095 90.042 33.479 C 90.407 33.813 90.595 34.27 90.607 34.849 Z M 8.597 11.817 L 8.597 5.621 L 12.473 5.621 L 12.473 6.426 L 9.539 6.426 L 9.539 8.314 L 12.196 8.314 L 12.196 9.115 L 9.539 9.115 L 9.539 11.817 Z M 15.954 11.817 L 15.954 5.621 L 19.874 5.621 L 19.874 6.426 L 16.898 6.426 L 16.898 8.314 L 19.67 8.314 L 19.67 9.115 L 16.898 9.115 L 16.898 11.013 L 19.911 11.013 L 19.911 11.818 L 15.954 11.818 Z M 23.984 11.817 L 22.983 11.817 L 25.232 5.621 L 26.321 5.621 L 28.572 11.817 L 27.571 11.817 L 25.803 6.746 L 25.754 6.746 Z M 24.151 9.391 L 27.399 9.391 L 27.399 10.177 L 24.152 10.177 L 24.152 9.391 Z M 30.749 6.426 L 30.749 5.621 L 35.587 5.621 L 35.587 6.426 L 33.637 6.426 L 33.637 11.817 L 32.697 11.817 L 32.697 6.426 Z M 42.998 5.621 L 43.944 5.621 L 43.944 9.697 C 43.944 10.13 43.841 10.514 43.636 10.849 C 43.431 11.182 43.141 11.445 42.769 11.636 C 42.396 11.825 41.96 11.92 41.459 11.92 C 40.961 11.92 40.525 11.825 40.153 11.636 C 39.797 11.459 39.496 11.187 39.285 10.849 C 39.076 10.501 38.97 10.102 38.977 9.697 L 38.977 5.621 L 39.92 5.621 L 39.92 9.621 C 39.92 9.901 39.983 10.15 40.107 10.368 C 40.232 10.586 40.411 10.758 40.641 10.882 C 40.87 11.005 41.143 11.067 41.459 11.067 C 41.776 11.067 42.05 11.004 42.281 10.882 C 42.512 10.757 42.689 10.586 42.812 10.368 C 42.935 10.15 42.998 9.901 42.998 9.621 Z M 47.636 11.817 L 47.636 5.621 L 49.865 5.621 C 50.349 5.621 50.751 5.705 51.071 5.87 C 51.393 6.035 51.633 6.264 51.792 6.556 C 51.95 6.847 52.03 7.183 52.03 7.564 C 52.03 7.943 51.949 8.277 51.789 8.565 C 51.624 8.858 51.372 9.092 51.068 9.234 C 50.748 9.393 50.346 9.473 49.862 9.473 L 48.173 9.473 L 48.173 8.668 L 49.777 8.668 C 50.082 8.668 50.329 8.625 50.521 8.538 C 50.701 8.464 50.85 8.33 50.945 8.16 C 51.035 7.995 51.081 7.796 51.081 7.564 C 51.081 7.33 51.034 7.127 50.942 6.955 C 50.849 6.78 50.699 6.642 50.518 6.562 C 50.327 6.469 50.076 6.423 49.764 6.423 L 48.58 6.423 L 48.58 11.818 L 47.636 11.818 Z M 50.722 9.022 L 52.267 11.817 L 51.194 11.817 L 49.678 9.022 Z M 55.498 11.817 L 55.498 5.621 L 59.418 5.621 L 59.418 6.426 L 56.442 6.426 L 56.442 8.314 L 59.214 8.314 L 59.214 9.115 L 56.442 9.115 L 56.442 11.013 L 59.455 11.013 L 59.455 11.818 L 55.498 11.818 Z M 65.024 11.817 L 62.999 11.817 L 62.999 5.621 L 65.088 5.621 C 65.7 5.621 66.226 5.746 66.666 5.994 C 67.105 6.24 67.442 6.594 67.676 7.056 C 67.912 7.516 68.031 8.067 68.031 8.711 C 68.031 9.356 67.911 9.91 67.673 10.374 C 67.447 10.827 67.09 11.2 66.647 11.445 C 66.199 11.693 65.658 11.817 65.023 11.817 Z M 63.943 11 L 64.971 11 C 65.447 11 65.843 10.911 66.159 10.734 C 66.474 10.555 66.71 10.295 66.867 9.957 C 67.024 9.616 67.102 9.2 67.102 8.711 C 67.102 8.225 67.024 7.812 66.867 7.473 C 66.725 7.148 66.482 6.877 66.174 6.701 C 65.866 6.526 65.486 6.439 65.029 6.439 L 63.943 6.439 Z M 81.551 8.719 C 81.551 9.381 81.429 9.95 81.186 10.425 C 80.961 10.878 80.612 11.258 80.181 11.521 C 79.743 11.779 79.244 11.91 78.737 11.901 C 78.195 11.901 77.712 11.775 77.287 11.521 C 76.856 11.257 76.509 10.876 76.286 10.423 C 76.041 9.946 75.919 9.379 75.919 8.719 C 75.919 8.058 76.041 7.491 76.285 7.016 C 76.53 6.54 76.863 6.175 77.286 5.921 C 77.725 5.661 78.227 5.528 78.737 5.537 C 79.276 5.537 79.757 5.665 80.181 5.921 C 80.606 6.175 80.941 6.54 81.185 7.016 C 81.429 7.491 81.552 8.058 81.552 8.72 Z M 80.616 8.719 C 80.616 8.215 80.534 7.791 80.369 7.446 C 80.227 7.123 79.994 6.85 79.698 6.66 C 79.41 6.479 79.076 6.385 78.737 6.39 C 78.376 6.39 78.055 6.48 77.771 6.66 C 77.49 6.837 77.265 7.099 77.1 7.446 C 76.937 7.791 76.856 8.215 76.856 8.719 C 76.856 9.224 76.937 9.65 77.1 9.996 C 77.265 10.341 77.489 10.603 77.771 10.783 C 78.055 10.961 78.376 11.048 78.737 11.048 C 79.094 11.048 79.414 10.959 79.698 10.783 C 79.983 10.603 80.207 10.341 80.369 9.996 C 80.534 9.65 80.616 9.224 80.616 8.72 Z M 90.094 5.621 L 90.094 11.817 L 89.227 11.817 L 86.049 7.273 L 85.992 7.273 L 85.992 11.817 L 85.048 11.817 L 85.048 5.621 L 85.921 5.621 L 89.102 10.171 L 89.16 10.171 L 89.16 5.621 Z" fill="rgb(255,255,255)"></path></g></svg>`,
                      withExternalLayout: !0,
                      children: [
                        u(z, {
                          className: `framer-13uz815`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 98 46" overflow="visible"><path d="M 4.17 46 C 1.867 46 0 44.128 0 41.818 L 0 4.182 C 0 1.872 1.867 0 4.17 0 L 93.83 0 C 96.133 0 98 1.872 98 4.182 L 98 41.818 C 98 44.128 96.133 46 93.83 46 Z" fill="transparent"></path></svg>`,
                          withExternalLayout: !0,
                        }),
                        u(z, {
                          className: `framer-1fjon6k`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 98 46" overflow="visible"><path d="M 4.17 46 C 1.867 46 0 44.128 0 41.818 L 0 4.182 C 0 1.872 1.867 0 4.17 0 L 93.83 0 C 96.133 0 98 1.872 98 4.182 L 98 41.818 C 98 44.128 96.133 46 93.83 46 Z" fill="rgb(24,24,24)"></path></svg>`,
                          withExternalLayout: !0,
                        }),
                        g(z, {
                          className: `framer-8wz2zk`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 98 46" overflow="visible"><path d="M 97.57 42.593 C 97.57 44.239 96.223 45.574 94.562 45.574 L 3.438 45.574 C 1.777 45.574 0.43 44.239 0.43 42.593 L 0.43 17.675 L 97.57 17.675 Z M 97.57 17.25 L 0.43 17.25 L 0.43 3.408 C 0.43 1.76 1.777 0.424 3.438 0.424 L 94.562 0.424 C 96.223 0.424 97.57 1.76 97.57 3.406 Z M 98 3.408 C 98 1.526 96.46 0 94.562 0 L 3.438 0 C 1.54 0 0 1.526 0 3.408 L 0 42.592 C 0 44.474 1.54 46 3.438 46 L 94.562 46 C 96.46 46 98 44.474 98 42.592 Z" fill="rgb(255,255,255)"></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-1757az2`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 97.141 27.899" overflow="visible"><path d="M 97.141 0 L 0 0 L 0 24.917 C 0 26.564 1.347 27.899 3.009 27.899 L 94.132 27.899 C 95.794 27.899 97.141 26.564 97.141 24.917 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1xm20x9`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 97.141 16.826" overflow="visible"><path d="M 97.141 16.826 L 0 16.826 L 0 2.984 C 0 1.335 1.347 0 3.009 0 L 94.132 0 C 95.794 0 97.141 1.335 97.141 2.982 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-175k5jf`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 98 46" overflow="visible"><path d="M 98 3.408 C 98 1.526 96.46 0 94.562 0 L 3.438 0 C 1.54 0 0 1.526 0 3.408 L 0 42.592 C 0 44.474 1.54 46 3.438 46 L 94.562 46 C 96.46 46 98 44.474 98 42.592 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                        u(z, {
                          className: `framer-1qhljh5`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1 1" overflow="visible"><path d="M 0.033 0.01 L 0 0.01 L 0.027 0 Z" fill="rgb(255,255,255)"></path></svg>`,
                          withExternalLayout: !0,
                        }),
                        g(z, {
                          className: `framer-xpfl6q`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 8.941 7.232" overflow="visible"><path d="M 8.438 0.094 L 8.438 0 C 5.057 1.178 2.419 2.428 1.046 3.503 C 0.648 3.816 0.357 4.113 0.184 4.39 C 0.023 4.647 -0.035 4.886 0.02 5.104 C 0.075 5.321 0.239 5.505 0.503 5.658 C 1.039 5.969 1.983 6.145 3.245 6.194 C 3.086 5.477 3.136 4.729 3.389 4.04 C 3.249 3.957 3.142 3.829 3.086 3.677 L 3.084 3.673 L 3.084 3.67 C 3.082 3.662 3.079 3.655 3.077 3.648 C 2.855 2.764 5.009 1.408 8.438 0.093 Z M 5.383 4.491 C 5.104 5.014 5.093 5.639 5.352 6.171 C 5.656 6.799 6.304 7.232 7.053 7.232 C 7.931 7.232 8.669 6.639 8.88 5.835 C 9.01 5.341 8.931 4.815 8.661 4.381 C 8.327 3.848 7.733 3.493 7.053 3.493 C 6.329 3.493 5.7 3.897 5.383 4.491 Z" fill="rgb(255,255,255)"></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-1h3o72g`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 8.438 6.194" overflow="visible"><path d="M 8.438 0.094 L 8.438 0 C 5.057 1.178 2.419 2.428 1.046 3.503 C 0.648 3.816 0.357 4.113 0.184 4.39 C 0.023 4.647 -0.035 4.886 0.02 5.104 C 0.075 5.321 0.239 5.505 0.503 5.658 C 1.039 5.969 1.983 6.145 3.245 6.194 C 3.086 5.477 3.136 4.729 3.389 4.04 C 3.249 3.957 3.142 3.829 3.086 3.677 L 3.084 3.673 L 3.084 3.67 C 3.082 3.662 3.079 3.655 3.077 3.648 C 2.855 2.764 5.009 1.408 8.438 0.093 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1u9xh7p`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.776 3.74" overflow="visible"><path d="M 0.218 0.998 C -0.061 1.521 -0.073 2.146 0.186 2.678 C 0.491 3.306 1.138 3.74 1.888 3.74 C 2.766 3.74 3.504 3.146 3.714 2.342 C 3.845 1.848 3.766 1.322 3.496 0.889 C 3.162 0.355 2.568 0 1.888 0 C 1.163 0 0.535 0.405 0.218 0.998 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                        g(z, {
                          className: `framer-q4jt8z`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 23.377 9.758" overflow="visible"><path d="M 7.548 6.233 L 7.548 0 L 11.322 0 L 14.765 5.118 C 14.877 5.075 14.987 5.031 15.096 4.987 L 15.096 0 L 18.87 0 L 18.87 0.391 C 19.999 0.367 20.955 0.421 21.691 0.554 C 22.191 0.644 22.589 0.772 22.874 0.936 C 23.137 1.088 23.301 1.272 23.356 1.49 C 23.412 1.707 23.353 1.947 23.193 2.204 C 22.682 3.022 21.133 4.02 18.87 5.043 C 17.797 5.524 16.706 5.962 15.6 6.358 C 14.478 6.762 13.346 7.135 12.204 7.479 C 11.098 7.813 9.984 8.122 8.865 8.408 C 6.767 8.945 4.648 9.395 2.513 9.758 C 2.533 9.283 2.464 8.809 2.31 8.359 C 1.932 7.262 1.085 6.391 0 5.984 L 0 0 L 3.774 0 Z M 19.972 1.652 L 19.972 1.649 C 19.971 1.641 19.969 1.633 19.967 1.626 C 19.886 1.306 19.501 1.077 18.87 0.935 L 18.87 3.096 C 19.648 2.552 20.048 2.057 19.973 1.656 L 19.973 1.652 Z" fill="rgb(255,255,255)"></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-366mke`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 23.377 9.758" overflow="visible"><path d="M 3.774 0 L 0 0 L 0 5.984 C 1.085 6.391 1.932 7.262 2.31 8.359 C 2.464 8.809 2.533 9.283 2.513 9.758 C 4.648 9.395 6.767 8.945 8.865 8.408 C 9.984 8.122 11.098 7.813 12.204 7.479 C 13.346 7.135 14.478 6.762 15.6 6.358 C 16.706 5.962 17.797 5.524 18.87 5.043 C 21.133 4.02 22.682 3.022 23.193 2.204 C 23.353 1.947 23.412 1.707 23.356 1.49 C 23.301 1.272 23.137 1.088 22.874 0.936 C 22.589 0.772 22.191 0.644 21.691 0.554 C 20.955 0.421 19.999 0.367 18.87 0.391 L 18.87 0 L 15.096 0 L 15.096 4.987 C 14.987 5.031 14.877 5.075 14.765 5.117 L 11.322 0 L 7.548 0 L 7.548 6.233 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-49hh7k`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.112 2.161" overflow="visible"><path d="M 1.102 0.717 L 1.102 0.714 C 1.1 0.706 1.099 0.699 1.097 0.691 C 1.015 0.371 0.631 0.142 0 0 L 0 2.161 C 0.778 1.617 1.178 1.123 1.103 0.721 L 1.103 0.717 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                        g(z, {
                          className: `framer-fvyq0c`,
                          opacity: 1,
                          requiresOverflowVisible: !1,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 82.254 33.648" overflow="visible"><path d="M 11.75 33.462 L 14.266 33.462 L 14.266 28.577 C 12.572 28.973 10.864 29.312 9.147 29.594 L 11.75 33.461 Z M 19.55 33.462 L 21.814 33.462 L 25.588 25.982 L 25.588 24.956 C 24.758 25.32 23.916 25.659 23.065 25.973 L 23.072 25.983 L 23.038 25.983 C 22.642 26.129 22.233 26.276 21.814 26.42 C 19.994 27.041 18.15 27.594 16.289 28.078 Z M 41.698 18.466 L 40.038 24.447 L 38.462 24.447 L 37.99 22.435 C 37.906 22.095 37.821 21.655 37.736 21.114 C 37.68 20.775 37.632 20.504 37.593 20.304 C 37.55 20.568 37.508 20.833 37.467 21.098 C 37.405 21.521 37.323 21.958 37.222 22.41 L 36.767 24.448 L 35.165 24.448 L 33.521 18.466 L 35.106 18.466 L 35.561 20.396 C 35.742 21.18 35.882 21.995 35.983 22.835 C 36.086 22.024 36.227 21.218 36.405 20.42 L 36.859 18.465 L 38.361 18.465 L 38.782 20.304 C 38.979 21.172 39.128 22.017 39.229 22.835 C 39.347 21.894 39.504 21.019 39.701 20.211 L 40.114 18.465 L 41.699 18.465 Z M 45.331 18.466 L 47.59 24.447 L 45.955 24.447 L 45.567 23.354 L 43.476 23.354 L 43.088 24.447 L 41.47 24.447 L 43.729 18.466 Z M 45.204 22.234 L 44.917 21.424 C 44.763 20.983 44.633 20.534 44.53 20.078 C 44.417 20.512 44.279 20.967 44.117 21.441 L 43.838 22.234 Z M 52.352 23.103 L 52.352 24.447 L 47.942 24.447 L 47.942 18.467 L 49.519 18.467 L 49.519 23.104 L 52.352 23.104 Z M 57.386 23.103 L 57.386 24.447 L 52.977 24.447 L 52.977 18.467 L 54.554 18.467 L 54.554 23.104 L 57.387 23.104 Z M 62.132 18.316 C 63.07 18.316 63.818 18.644 64.373 19.302 C 64.852 19.876 65.091 20.594 65.091 21.457 C 65.091 22.454 64.782 23.245 64.163 23.83 C 63.624 24.343 62.946 24.598 62.132 24.598 C 61.176 24.598 60.417 24.27 59.855 23.612 C 59.372 23.044 59.13 22.326 59.13 21.457 C 59.13 20.46 59.428 19.68 60.024 19.118 C 60.597 18.582 61.3 18.316 62.132 18.316 Z M 62.124 19.602 C 61.668 19.602 61.314 19.792 61.06 20.17 C 60.841 20.493 60.732 20.919 60.732 21.449 C 60.732 22.066 60.873 22.542 61.153 22.877 C 61.401 23.167 61.726 23.312 62.132 23.312 C 62.559 23.312 62.893 23.147 63.135 22.818 C 63.377 22.484 63.498 22.02 63.498 21.424 C 63.498 20.816 63.357 20.351 63.076 20.028 C 62.84 19.747 62.489 19.59 62.124 19.603 Z M 70.237 18.466 L 70.237 19.752 L 67.353 19.752 L 67.353 20.923 L 69.849 20.923 L 69.849 22.142 L 67.353 22.142 L 67.353 24.447 L 65.777 24.447 L 65.777 18.467 L 70.237 18.467 Z M 28.585 27.517 L 31.072 27.517 C 31.87 27.517 32.446 27.636 32.801 27.875 C 33.351 28.243 33.627 28.801 33.627 29.547 C 33.627 30.153 33.418 30.645 33.003 31.017 C 32.642 31.341 32.112 31.502 31.409 31.502 L 30.161 31.502 L 30.161 33.499 L 28.585 33.499 Z M 30.161 28.803 L 30.161 30.274 L 31.198 30.274 C 31.795 30.274 32.092 30.029 32.092 29.539 C 32.092 29.06 31.775 28.817 31.139 28.812 L 30.161 28.804 Z M 36.977 27.366 C 37.916 27.366 38.663 27.694 39.22 28.352 C 39.697 28.926 39.937 29.644 39.937 30.508 C 39.937 31.504 39.627 32.296 39.009 32.881 C 38.469 33.393 37.793 33.648 36.977 33.648 C 36.022 33.648 35.263 33.32 34.701 32.662 C 34.218 32.095 33.976 31.377 33.976 30.508 C 33.976 29.51 34.274 28.731 34.869 28.168 C 35.443 27.634 36.145 27.366 36.977 27.366 Z M 36.969 28.652 C 36.513 28.652 36.16 28.842 35.906 29.221 C 35.687 29.545 35.578 29.97 35.578 30.499 C 35.578 31.117 35.718 31.594 35.999 31.928 C 36.246 32.217 36.573 32.362 36.977 32.362 C 37.405 32.362 37.738 32.198 37.98 31.869 C 38.222 31.534 38.343 31.07 38.343 30.474 C 38.343 29.868 38.202 29.402 37.922 29.079 C 37.686 28.798 37.335 28.641 36.969 28.653 Z M 40.605 27.517 L 43.582 27.517 C 44.194 27.517 44.661 27.611 44.981 27.801 C 45.526 28.118 45.799 28.6 45.799 29.246 C 45.799 29.58 45.715 29.878 45.546 30.14 C 45.377 30.401 45.15 30.591 44.863 30.709 C 45.116 30.775 45.333 30.936 45.47 31.159 C 45.571 31.316 45.639 31.477 45.672 31.644 C 45.712 31.805 45.757 32.175 45.808 32.754 C 45.847 33.122 45.897 33.35 45.959 33.44 L 46.01 33.499 L 44.399 33.499 C 44.349 33.382 44.29 32.964 44.222 32.244 C 44.177 31.884 44.076 31.633 43.92 31.494 C 43.761 31.348 43.506 31.276 43.151 31.276 L 42.182 31.276 L 42.182 33.499 L 40.605 33.499 Z M 42.182 28.745 L 42.182 30.157 L 43.295 30.157 C 43.93 30.157 44.248 29.917 44.248 29.438 C 44.248 28.976 43.925 28.745 43.278 28.745 Z M 51.524 27.517 L 51.524 28.862 L 49.72 28.862 L 49.72 33.499 L 48.151 33.499 L 48.151 28.862 L 46.356 28.862 L 46.356 27.517 Z M 56.527 27.517 L 56.527 28.803 L 53.644 28.803 L 53.644 29.974 L 56.139 29.974 L 56.139 31.193 L 53.644 31.193 L 53.644 33.499 L 52.067 33.499 L 52.067 27.517 Z M 59.809 27.366 C 60.747 27.366 61.495 27.694 62.052 28.352 C 62.529 28.926 62.768 29.644 62.768 30.508 C 62.768 31.504 62.459 32.296 61.84 32.881 C 61.301 33.393 60.624 33.648 59.809 33.648 C 58.853 33.648 58.095 33.32 57.532 32.662 C 57.05 32.095 56.808 31.377 56.808 30.508 C 56.808 29.51 57.106 28.731 57.701 28.168 C 58.275 27.634 58.977 27.366 59.809 27.366 Z M 59.801 28.652 C 59.345 28.652 58.992 28.842 58.737 29.221 C 58.519 29.545 58.41 29.97 58.41 30.499 C 58.41 31.117 58.55 31.594 58.831 31.928 C 59.078 32.217 59.405 32.362 59.809 32.362 C 60.237 32.362 60.57 32.198 60.812 31.869 C 61.054 31.534 61.175 31.07 61.175 30.474 C 61.175 29.868 61.034 29.402 60.754 29.079 C 60.518 28.798 60.167 28.641 59.801 28.653 Z M 67.864 32.153 L 67.864 33.499 L 63.454 33.499 L 63.454 27.517 L 65.031 27.517 L 65.031 32.153 Z M 70.066 27.517 L 70.066 33.499 L 68.489 33.499 L 68.489 27.517 Z M 73.744 27.366 C 74.683 27.366 75.431 27.694 75.988 28.352 C 76.465 28.926 76.704 29.644 76.704 30.508 C 76.704 31.504 76.395 32.296 75.776 32.881 C 75.237 33.393 74.559 33.648 73.745 33.648 C 72.789 33.648 72.03 33.32 71.468 32.662 C 70.985 32.095 70.743 31.377 70.743 30.508 C 70.743 29.51 71.041 28.731 71.637 28.168 C 72.21 27.634 72.913 27.366 73.745 27.366 Z M 73.737 28.652 C 73.281 28.652 72.927 28.842 72.673 29.221 C 72.454 29.545 72.345 29.97 72.345 30.499 C 72.345 31.117 72.486 31.594 72.767 31.928 C 73.014 32.217 73.34 32.362 73.745 32.362 C 74.172 32.362 74.506 32.198 74.748 31.869 C 74.99 31.534 75.111 31.07 75.111 30.474 C 75.111 29.868 74.97 29.402 74.689 29.079 C 74.453 28.798 74.102 28.641 73.737 28.653 Z M 82.01 29.313 L 80.509 29.313 C 80.487 28.823 80.164 28.578 79.54 28.578 C 78.994 28.578 78.722 28.754 78.722 29.104 C 78.722 29.266 78.795 29.383 78.941 29.455 C 79.064 29.517 79.461 29.631 80.13 29.798 C 80.766 29.959 81.225 30.128 81.512 30.307 C 82.007 30.608 82.254 31.06 82.254 31.661 C 82.254 32.317 81.994 32.825 81.47 33.181 C 81.015 33.493 80.417 33.648 79.674 33.648 C 78.775 33.648 78.089 33.434 77.617 33.005 C 77.201 32.632 76.988 32.125 76.977 31.485 L 78.562 31.485 C 78.595 32.12 78.986 32.437 79.733 32.437 C 80.346 32.437 80.653 32.234 80.653 31.827 C 80.661 31.651 80.565 31.487 80.408 31.409 C 80.252 31.315 79.854 31.179 79.219 31.001 C 78.449 30.783 77.932 30.563 77.668 30.341 C 77.358 30.079 77.204 29.7 77.204 29.204 C 77.204 28.613 77.451 28.148 77.946 27.809 C 78.379 27.514 78.933 27.366 79.607 27.366 C 80.41 27.366 81.023 27.559 81.445 27.942 C 81.81 28.277 81.998 28.734 82.01 29.313 Z M 0 6.28 L 0 0.085 L 3.876 0.085 L 3.876 0.89 L 0.942 0.89 L 0.942 2.778 L 3.599 2.778 L 3.599 3.579 L 0.942 3.579 L 0.942 6.28 Z M 7.357 6.28 L 7.357 0.085 L 11.277 0.085 L 11.277 0.89 L 8.301 0.89 L 8.301 2.778 L 11.073 2.778 L 11.073 3.579 L 8.301 3.579 L 8.301 5.476 L 11.314 5.476 L 11.314 6.281 L 7.357 6.281 Z M 15.387 6.28 L 14.386 6.28 L 16.635 0.085 L 17.724 0.085 L 19.975 6.28 L 18.974 6.28 L 17.206 1.21 L 17.157 1.21 Z M 15.554 3.855 L 18.802 3.855 L 18.802 4.641 L 15.555 4.641 L 15.555 3.855 Z M 22.152 0.89 L 22.152 0.085 L 26.99 0.085 L 26.99 0.89 L 25.04 0.89 L 25.04 6.28 L 24.1 6.28 L 24.1 0.89 Z M 34.401 0.085 L 35.347 0.085 L 35.347 4.16 C 35.347 4.594 35.245 4.978 35.039 5.312 C 34.834 5.646 34.544 5.908 34.172 6.1 C 33.8 6.289 33.363 6.384 32.862 6.384 C 32.364 6.384 31.928 6.289 31.556 6.1 C 31.2 5.923 30.899 5.65 30.689 5.312 C 30.48 4.965 30.373 4.566 30.38 4.16 L 30.38 0.085 L 31.324 0.085 L 31.324 4.085 C 31.324 4.365 31.386 4.614 31.51 4.831 C 31.635 5.05 31.815 5.221 32.044 5.346 C 32.273 5.469 32.546 5.531 32.862 5.531 C 33.179 5.531 33.453 5.468 33.684 5.346 C 33.915 5.22 34.093 5.05 34.216 4.831 C 34.339 4.614 34.401 4.365 34.401 4.085 Z M 39.039 6.28 L 39.039 0.085 L 41.268 0.085 C 41.752 0.085 42.155 0.169 42.474 0.334 C 42.796 0.499 43.037 0.728 43.195 1.02 C 43.354 1.31 43.433 1.647 43.433 2.028 C 43.433 2.407 43.352 2.741 43.192 3.029 C 43.027 3.322 42.775 3.555 42.472 3.698 C 42.151 3.857 41.749 3.937 41.265 3.937 L 39.576 3.937 L 39.576 3.132 L 41.18 3.132 C 41.485 3.132 41.732 3.089 41.924 3.002 C 42.104 2.927 42.254 2.794 42.349 2.623 C 42.438 2.458 42.484 2.26 42.484 2.028 C 42.484 1.793 42.437 1.591 42.345 1.419 C 42.252 1.244 42.102 1.106 41.921 1.026 C 41.73 0.933 41.479 0.887 41.167 0.887 L 39.983 0.887 L 39.983 6.281 L 39.039 6.281 Z M 42.125 3.486 L 43.67 6.28 L 42.597 6.28 L 41.081 3.486 Z M 46.901 6.28 L 46.901 0.085 L 50.821 0.085 L 50.821 0.89 L 47.845 0.89 L 47.845 2.778 L 50.617 2.778 L 50.617 3.579 L 47.845 3.579 L 47.845 5.476 L 50.858 5.476 L 50.858 6.281 L 46.901 6.281 Z M 56.427 6.28 L 54.403 6.28 L 54.403 0.085 L 56.491 0.085 C 57.103 0.085 57.629 0.209 58.069 0.457 C 58.508 0.704 58.845 1.057 59.079 1.519 C 59.315 1.979 59.434 2.53 59.434 3.174 C 59.434 3.819 59.314 4.374 59.076 4.838 C 58.85 5.291 58.493 5.664 58.05 5.908 C 57.602 6.157 57.061 6.28 56.426 6.28 Z M 55.346 5.464 L 56.374 5.464 C 56.85 5.464 57.247 5.375 57.562 5.197 C 57.877 5.019 58.113 4.758 58.27 4.421 C 58.427 4.08 58.505 3.664 58.505 3.174 C 58.505 2.688 58.427 2.275 58.27 1.937 C 58.128 1.611 57.885 1.341 57.577 1.165 C 57.27 0.989 56.889 0.903 56.432 0.903 L 55.346 0.903 Z M 72.954 3.183 C 72.954 3.845 72.832 4.413 72.589 4.889 C 72.364 5.342 72.015 5.722 71.584 5.985 C 71.147 6.242 70.647 6.374 70.14 6.365 C 69.598 6.365 69.115 6.239 68.69 5.985 C 68.259 5.721 67.912 5.34 67.689 4.887 C 67.444 4.41 67.322 3.842 67.322 3.183 C 67.322 2.522 67.444 1.954 67.688 1.48 C 67.933 1.004 68.266 0.639 68.689 0.385 C 69.128 0.125 69.63 -0.008 70.14 0 C 70.679 0 71.161 0.129 71.584 0.385 C 72.009 0.639 72.344 1.004 72.588 1.48 C 72.832 1.954 72.955 2.522 72.955 3.184 Z M 72.02 3.183 C 72.02 2.679 71.937 2.254 71.772 1.909 C 71.631 1.587 71.397 1.313 71.101 1.123 C 70.813 0.942 70.48 0.849 70.14 0.853 C 69.779 0.853 69.458 0.943 69.174 1.123 C 68.893 1.301 68.668 1.562 68.503 1.909 C 68.34 2.254 68.259 2.679 68.259 3.183 C 68.259 3.688 68.34 4.113 68.503 4.459 C 68.668 4.804 68.892 5.067 69.174 5.246 C 69.458 5.424 69.779 5.512 70.14 5.512 C 70.497 5.512 70.818 5.423 71.101 5.246 C 71.386 5.067 71.61 4.804 71.772 4.459 C 71.937 4.113 72.02 3.688 72.02 3.184 Z M 81.497 0.085 L 81.497 6.28 L 80.63 6.28 L 77.452 1.737 L 77.395 1.737 L 77.395 6.28 L 76.451 6.28 L 76.451 0.085 L 77.324 0.085 L 80.505 4.635 L 80.563 4.635 L 80.563 0.085 Z" fill="rgb(255,255,255)"></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-1vzn31j`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.119 4.885" overflow="visible"><path d="M 2.602 4.885 L 5.119 4.885 L 5.119 0 C 3.424 0.396 1.717 0.735 0 1.017 L 2.602 4.884 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1eg6ovr`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 9.3 8.506" overflow="visible"><path d="M 3.261 8.506 L 5.526 8.506 L 9.3 1.026 L 9.3 0 C 8.469 0.364 7.627 0.703 6.777 1.016 L 6.783 1.027 L 6.749 1.027 C 6.353 1.173 5.945 1.319 5.526 1.464 C 3.705 2.084 1.862 2.637 0 3.122 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1x95i8u`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 8.178 5.983" overflow="visible"><path d="M 8.177 0.001 L 6.517 5.982 L 4.941 5.982 L 4.468 3.97 C 4.385 3.63 4.299 3.19 4.215 2.649 C 4.159 2.309 4.111 2.039 4.072 1.839 C 4.029 2.103 3.987 2.368 3.946 2.632 C 3.884 3.056 3.802 3.493 3.701 3.945 L 3.245 5.983 L 1.644 5.983 L 0 0.001 L 1.585 0.001 L 2.04 1.931 C 2.221 2.715 2.36 3.529 2.461 4.37 C 2.565 3.559 2.706 2.753 2.884 1.955 L 3.338 0 L 4.84 0 L 5.261 1.839 C 5.458 2.707 5.607 3.551 5.708 4.37 C 5.826 3.429 5.983 2.554 6.18 1.746 L 6.593 0 L 8.178 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-18uqasx`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 6.121 5.981" overflow="visible"><path d="M 3.862 0 L 6.121 5.981 L 4.485 5.981 L 4.097 4.888 L 2.006 4.888 L 1.618 5.981 L 0 5.981 L 2.259 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-86hfie`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.366 2.156" overflow="visible"><path d="M 1.366 2.156 L 1.079 1.345 C 0.925 0.905 0.795 0.455 0.691 0 C 0.579 0.434 0.441 0.889 0.278 1.362 L 0 2.156 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-14bpjcl`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.41 5.98" overflow="visible"><path d="M 4.41 4.636 L 4.41 5.98 L 0 5.98 L 0 0 L 1.577 0 L 1.577 4.637 L 4.41 4.637 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-11neasa`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.41 5.98" overflow="visible"><path d="M 4.409 4.636 L 4.409 5.98 L 0 5.98 L 0 0 L 1.576 0 L 1.576 4.637 L 4.41 4.637 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-6m60j6`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.96 6.282" overflow="visible"><path d="M 3.002 0 C 3.94 0 4.687 0.328 5.243 0.986 C 5.722 1.56 5.96 2.278 5.96 3.142 C 5.96 4.138 5.652 4.929 5.032 5.515 C 4.493 6.027 3.816 6.282 3.002 6.282 C 2.045 6.282 1.287 5.954 0.725 5.296 C 0.242 4.729 0 4.01 0 3.142 C 0 2.144 0.297 1.364 0.893 0.802 C 1.467 0.267 2.17 0 3.002 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1myletb`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.766 3.71" overflow="visible"><path d="M 1.392 0 C 0.936 0 0.582 0.19 0.328 0.569 C 0.109 0.892 0 1.317 0 1.847 C 0 2.464 0.141 2.941 0.421 3.275 C 0.669 3.565 0.995 3.71 1.4 3.71 C 1.828 3.71 2.161 3.545 2.403 3.217 C 2.645 2.882 2.766 2.418 2.766 1.822 C 2.766 1.215 2.625 0.75 2.344 0.427 C 2.108 0.146 1.757 -0.011 1.392 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-7lxjsu`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.46 5.981" overflow="visible"><path d="M 4.46 0 L 4.46 1.286 L 1.576 1.286 L 1.576 2.457 L 4.072 2.457 L 4.072 3.676 L 1.576 3.676 L 1.576 5.981 L 0 5.981 L 0 0.001 L 4.46 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-69i36u`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.042 5.982" overflow="visible"><path d="M 0 0 L 2.488 0 C 3.285 0 3.862 0.119 4.216 0.359 C 4.767 0.727 5.042 1.284 5.042 2.03 C 5.042 2.637 4.833 3.128 4.418 3.5 C 4.058 3.824 3.527 3.985 2.824 3.985 L 1.576 3.985 L 1.576 5.982 L 0 5.982 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-sapovd`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.931 1.471" overflow="visible"><path d="M 0 0 L 0 1.471 L 1.037 1.471 C 1.634 1.471 1.931 1.226 1.931 0.736 C 1.931 0.257 1.614 0.015 0.978 0.009 L 0 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1ygrbhu`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.961 6.282" overflow="visible"><path d="M 3.002 0 C 3.94 0 4.687 0.328 5.244 0.986 C 5.722 1.56 5.961 2.278 5.961 3.142 C 5.961 4.138 5.652 4.929 5.033 5.515 C 4.493 6.027 3.817 6.282 3.002 6.282 C 2.047 6.282 1.288 5.954 0.726 5.296 C 0.242 4.729 0 4.01 0 3.142 C 0 2.144 0.298 1.364 0.893 0.802 C 1.467 0.268 2.17 0 3.002 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-ur4bxx`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.765 3.71" overflow="visible"><path d="M 1.391 0 C 0.935 0 0.582 0.19 0.327 0.569 C 0.108 0.893 0 1.318 0 1.847 C 0 2.465 0.14 2.942 0.421 3.275 C 0.668 3.565 0.995 3.71 1.399 3.71 C 1.827 3.71 2.16 3.546 2.402 3.217 C 2.644 2.882 2.765 2.418 2.765 1.822 C 2.765 1.216 2.624 0.75 2.344 0.427 C 2.108 0.145 1.757 -0.011 1.391 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-63tmxj`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.405 5.982" overflow="visible"><path d="M 0 0 L 2.976 0 C 3.588 0 4.056 0.094 4.376 0.284 C 4.921 0.601 5.194 1.083 5.194 1.729 C 5.194 2.064 5.11 2.362 4.941 2.623 C 4.772 2.884 4.544 3.075 4.258 3.192 C 4.51 3.258 4.727 3.42 4.865 3.642 C 4.966 3.799 5.033 3.96 5.067 4.127 C 5.106 4.288 5.151 4.659 5.202 5.238 C 5.242 5.606 5.292 5.834 5.354 5.924 L 5.405 5.982 L 3.794 5.982 C 3.744 5.865 3.684 5.447 3.617 4.728 C 3.572 4.367 3.471 4.116 3.314 3.977 C 3.156 3.832 2.9 3.759 2.546 3.759 L 1.576 3.759 L 1.576 5.982 L 0 5.982 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-wnsecz`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.066 1.411" overflow="visible"><path d="M 0 0 L 0 1.411 L 1.113 1.411 C 1.748 1.411 2.066 1.172 2.066 0.693 C 2.066 0.231 1.743 0 1.097 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1kxha38`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.168 5.982" overflow="visible"><path d="M 5.168 0 L 5.168 1.345 L 3.364 1.345 L 3.364 5.982 L 1.795 5.982 L 1.795 1.345 L 0 1.345 L 0 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-119eivn`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.46 5.982" overflow="visible"><path d="M 4.46 0 L 4.46 1.286 L 1.576 1.286 L 1.576 2.457 L 4.072 2.457 L 4.072 3.676 L 1.576 3.676 L 1.576 5.982 L 0 5.982 L 0 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1f5lj0k`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.96 6.282" overflow="visible"><path d="M 3.002 0 C 3.94 0 4.687 0.328 5.244 0.986 C 5.722 1.56 5.96 2.278 5.96 3.142 C 5.96 4.138 5.652 4.929 5.032 5.515 C 4.493 6.027 3.817 6.282 3.002 6.282 C 2.045 6.282 1.288 5.954 0.725 5.296 C 0.242 4.729 0 4.01 0 3.142 C 0 2.144 0.298 1.364 0.893 0.802 C 1.467 0.268 2.17 0 3.002 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-voohij`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.765 3.71" overflow="visible"><path d="M 1.391 0 C 0.935 0 0.582 0.19 0.327 0.569 C 0.108 0.893 0 1.318 0 1.847 C 0 2.465 0.14 2.942 0.421 3.275 C 0.668 3.565 0.995 3.71 1.399 3.71 C 1.827 3.71 2.16 3.546 2.402 3.217 C 2.644 2.882 2.765 2.418 2.765 1.822 C 2.765 1.216 2.624 0.75 2.344 0.427 C 2.108 0.145 1.757 -0.011 1.391 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-k6lbia`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.41 5.982" overflow="visible"><path d="M 4.41 4.637 L 4.41 5.982 L 0 5.982 L 0 0 L 1.577 0 L 1.577 4.637 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-rurcie`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.576 5.982" overflow="visible"><path d="M 1.576 0 L 1.576 5.982 L 0 5.982 L 0 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-fzppfh`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.96 6.282" overflow="visible"><path d="M 3 0 C 3.94 0 4.687 0.328 5.244 0.986 C 5.722 1.56 5.96 2.278 5.96 3.142 C 5.96 4.138 5.652 4.929 5.032 5.515 C 4.493 6.027 3.816 6.282 3.002 6.282 C 2.045 6.282 1.287 5.954 0.725 5.296 C 0.242 4.729 0 4.01 0 3.142 C 0 2.144 0.297 1.364 0.893 0.802 C 1.467 0.268 2.17 0 3.002 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1szx9ts`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.766 3.71" overflow="visible"><path d="M 1.392 0 C 0.936 0 0.582 0.19 0.328 0.569 C 0.109 0.893 0 1.318 0 1.847 C 0 2.465 0.141 2.942 0.422 3.275 C 0.669 3.565 0.996 3.71 1.4 3.71 C 1.828 3.71 2.161 3.546 2.403 3.217 C 2.645 2.882 2.766 2.418 2.766 1.822 C 2.766 1.216 2.625 0.75 2.344 0.427 C 2.108 0.146 1.757 -0.011 1.392 0.001 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-id80is`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.277 6.282" overflow="visible"><path d="M 5.033 1.947 L 3.532 1.947 C 3.51 1.456 3.187 1.212 2.563 1.212 C 2.017 1.212 1.745 1.387 1.745 1.738 C 1.745 1.9 1.818 2.017 1.964 2.089 C 2.087 2.151 2.484 2.264 3.153 2.432 C 3.789 2.593 4.248 2.762 4.535 2.941 C 5.03 3.242 5.277 3.694 5.277 4.295 C 5.277 4.951 5.017 5.458 4.493 5.815 C 4.038 6.126 3.44 6.282 2.697 6.282 C 1.798 6.282 1.112 6.068 0.64 5.639 C 0.224 5.266 0.011 4.759 0 4.119 L 1.585 4.119 C 1.618 4.754 2.009 5.07 2.757 5.07 C 3.37 5.07 3.676 4.868 3.676 4.461 C 3.684 4.285 3.588 4.121 3.431 4.043 C 3.275 3.949 2.877 3.813 2.243 3.635 C 1.472 3.417 0.955 3.197 0.691 2.974 C 0.382 2.713 0.227 2.333 0.227 1.838 C 0.227 1.247 0.474 0.782 0.97 0.443 C 1.402 0.147 1.956 0 2.63 0 C 3.433 0 4.046 0.192 4.468 0.576 C 4.833 0.911 5.021 1.367 5.033 1.947 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-17x298s`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.876 6.195" overflow="visible"><path d="M 0 6.195 L 0 0 L 3.876 0 L 3.876 0.805 L 0.942 0.805 L 0.942 2.693 L 3.599 2.693 L 3.599 3.494 L 0.942 3.494 L 0.942 6.195 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-ob0hod`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.956 6.196" overflow="visible"><path d="M 0 6.195 L 0 0 L 3.92 0 L 3.92 0.805 L 0.944 0.805 L 0.944 2.693 L 3.716 2.693 L 3.716 3.494 L 0.944 3.494 L 0.944 5.391 L 3.956 5.391 L 3.956 6.196 L 0 6.196 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-u513gw`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.589 6.195" overflow="visible"><path d="M 1.001 6.195 L 0 6.195 L 2.249 0 L 3.338 0 L 5.589 6.195 L 4.588 6.195 L 2.82 1.125 L 2.771 1.125 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1ne4iim`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.249 1" overflow="visible"><path d="M 0 0 L 3.249 0 L 3.249 0.786 L 0.001 0.786 L 0.001 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-t0pi19`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.837 6.195" overflow="visible"><path d="M 0 0.805 L 0 0 L 4.837 0 L 4.837 0.805 L 2.888 0.805 L 2.888 6.195 L 1.947 6.195 L 1.947 0.805 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-33nx9g`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.967 6.299" overflow="visible"><path d="M 4.021 0 L 4.967 0 L 4.967 4.075 C 4.967 4.509 4.865 4.893 4.66 5.227 C 4.454 5.561 4.164 5.823 3.792 6.014 C 3.42 6.204 2.983 6.299 2.483 6.299 C 1.984 6.299 1.549 6.204 1.176 6.014 C 0.82 5.838 0.52 5.565 0.309 5.227 C 0.1 4.88 -0.007 4.481 0 4.075 L 0 0 L 0.944 0 L 0.944 4 C 0.944 4.28 1.006 4.529 1.13 4.746 C 1.256 4.965 1.435 5.136 1.664 5.261 C 1.894 5.384 2.167 5.446 2.483 5.446 C 2.8 5.446 3.074 5.383 3.304 5.261 C 3.536 5.135 3.713 4.965 3.836 4.746 C 3.959 4.529 4.021 4.28 4.021 4 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-o2flsv`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 4.393 6.196" overflow="visible"><path d="M 0 6.195 L 0 0 L 2.229 0 C 2.713 0 3.115 0.084 3.434 0.249 C 3.756 0.414 3.997 0.643 4.156 0.935 C 4.314 1.225 4.393 1.562 4.393 1.942 C 4.393 2.322 4.313 2.655 4.152 2.944 C 3.987 3.237 3.736 3.47 3.432 3.613 C 3.112 3.772 2.71 3.851 2.226 3.851 L 0.537 3.851 L 0.537 3.046 L 2.14 3.046 C 2.446 3.046 2.693 3.004 2.885 2.917 C 3.065 2.842 3.214 2.709 3.309 2.538 C 3.399 2.373 3.445 2.175 3.445 1.942 C 3.445 1.708 3.398 1.505 3.306 1.334 C 3.212 1.159 3.063 1.021 2.882 0.941 C 2.691 0.848 2.44 0.802 2.128 0.802 L 0.944 0.802 L 0.944 6.196 L 0 6.196 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-yhfgpw`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.59 2.795" overflow="visible"><path d="M 1.045 0 L 2.59 2.795 L 1.516 2.795 L 0 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1pvg2t3`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.956 6.196" overflow="visible"><path d="M 0 6.195 L 0 0 L 3.92 0 L 3.92 0.805 L 0.944 0.805 L 0.944 2.693 L 3.716 2.693 L 3.716 3.494 L 0.944 3.494 L 0.944 5.391 L 3.956 5.391 L 3.956 6.196 L 0 6.196 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1tnqmeu`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.031 6.195" overflow="visible"><path d="M 2.025 6.195 L 0 6.195 L 0 0 L 2.088 0 C 2.7 0 3.227 0.124 3.667 0.372 C 4.106 0.619 4.442 0.972 4.677 1.434 C 4.913 1.894 5.031 2.445 5.031 3.089 C 5.031 3.734 4.911 4.288 4.674 4.753 C 4.448 5.206 4.09 5.579 3.648 5.823 C 3.2 6.072 2.659 6.195 2.024 6.195 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1fuokfb`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.159 4.561" overflow="visible"><path d="M 0 4.561 L 1.028 4.561 C 1.504 4.561 1.901 4.472 2.216 4.295 C 2.531 4.116 2.767 3.856 2.924 3.518 C 3.081 3.177 3.159 2.761 3.159 2.272 C 3.159 1.786 3.081 1.373 2.924 1.034 C 2.782 0.709 2.539 0.438 2.231 0.262 C 1.924 0.087 1.543 0 1.086 0 L 0 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-enjlui`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.633 6.366" overflow="visible"><path d="M 5.632 3.183 C 5.632 3.845 5.51 4.413 5.267 4.889 C 5.042 5.342 4.694 5.722 4.262 5.985 C 3.825 6.242 3.325 6.374 2.818 6.365 C 2.276 6.365 1.793 6.239 1.368 5.985 C 0.938 5.721 0.591 5.34 0.367 4.887 C 0.122 4.41 0 3.842 0 3.183 C 0 2.522 0.122 1.954 0.366 1.48 C 0.611 1.004 0.945 0.639 1.367 0.385 C 1.806 0.125 2.308 -0.008 2.818 0 C 3.357 0 3.839 0.129 4.262 0.385 C 4.687 0.639 5.022 1.004 5.266 1.48 C 5.51 1.954 5.633 2.522 5.633 3.184 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-e86sae`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.76 4.659" overflow="visible"><path d="M 3.76 2.329 C 3.76 1.826 3.678 1.401 3.513 1.056 C 3.371 0.734 3.138 0.46 2.842 0.27 C 2.554 0.089 2.22 -0.005 1.881 0 C 1.52 0 1.199 0.09 0.915 0.27 C 0.634 0.448 0.409 0.709 0.244 1.056 C 0.081 1.401 0 1.826 0 2.329 C 0 2.834 0.081 3.26 0.244 3.606 C 0.409 3.951 0.633 4.213 0.915 4.393 C 1.199 4.571 1.52 4.659 1.881 4.659 C 2.238 4.659 2.558 4.57 2.842 4.393 C 3.127 4.213 3.351 3.951 3.513 3.606 C 3.678 3.26 3.76 2.834 3.76 2.331 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-188eiut`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.046 6.195" overflow="visible"><path d="M 5.046 0 L 5.046 6.195 L 4.179 6.195 L 1.001 1.652 L 0.944 1.652 L 0.944 6.195 L 0 6.195 L 0 0 L 0.873 0 L 4.053 4.55 L 4.112 4.55 L 4.112 0 Z" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                  u(`div`, {
                    className: `framer-myerdc`,
                    "data-framer-name": `Home`,
                    id: w,
                    ref: T,
                    children: g(`section`, {
                      className: `framer-11ai8la`,
                      "data-framer-name": `Hero`,
                      id: E,
                      ref: O,
                      children: [
                        u(`div`, {
                          className: `framer-jetu0a`,
                          "data-framer-name": `Spacer`,
                        }),
                        g(`div`, {
                          className: `framer-1m3393h`,
                          "data-framer-name": `Container`,
                          children: [
                            g(`div`, {
                              className: `framer-1ag7ox7`,
                              "data-framer-name": `Top`,
                              children: [
                                g(`div`, {
                                  className: `framer-10g5zow`,
                                  children: [
                                    u(`div`, {
                                      className: `framer-ine0je`,
                                      children: u(te, {
                                        background: {
                                          alt: ``,
                                          fit: `fill`,
                                          intrinsicHeight: 400,
                                          intrinsicWidth: 361,
                                          pixelHeight: 800,
                                          pixelWidth: 722,
                                          sizes: `129px`,
                                          src: `https://framerusercontent.com/images/CcwWqAgPS76aQJcXvYbOINxayU.png?scale-down-to=512&width=722&height=800`,
                                          srcSet: `https://framerusercontent.com/images/CcwWqAgPS76aQJcXvYbOINxayU.png?width=722&height=800 722w`,
                                        },
                                        className: `framer-1k2xb9w`,
                                        "data-framer-name": `Mask group`,
                                      }),
                                    }),
                                    u(`div`, {
                                      className: `framer-x4puw1`,
                                      children: g(`div`, {
                                        className: `framer-1btrok4`,
                                        "data-framer-name": `Tag & Title`,
                                        children: [
                                          u(L, {
                                            breakpoint: b,
                                            overrides: {
                                              YDU0n2zno: {
                                                animate: cy,
                                                initial: ly,
                                                optimized: !0,
                                              },
                                            },
                                            children: g(Hv, {
                                              className: `framer-sjwugm`,
                                              "data-framer-appear-id": `sjwugm`,
                                              "data-framer-name": `Title`,
                                              children: [
                                                k() &&
                                                  u(re, {
                                                    links: [
                                                      {
                                                        href: {
                                                          webPageId: `augiA20Il`,
                                                        },
                                                        implicitPathVariables:
                                                          void 0,
                                                      },
                                                    ],
                                                    children: (e) =>
                                                      u(N, {
                                                        height: 38,
                                                        children: u(P, {
                                                          className: `framer-ryz8g3-container hidden-1nc64nb hidden-1pn6j55`,
                                                          nodeId: `z8x3JzkfH`,
                                                          rendersWithMotion: !0,
                                                          scopeId: `augiA20Il`,
                                                          whileTap: uy,
                                                          children: u(sv, {
                                                            height: `100%`,
                                                            id: `z8x3JzkfH`,
                                                            jn909WTNI: `Open to Work`,
                                                            layoutId: `z8x3JzkfH`,
                                                            tCgMNdSJ8: ``,
                                                            variant: `CyOidWSxa`,
                                                            width: `100%`,
                                                            zM2dkJ0Mt: e[0],
                                                          }),
                                                        }),
                                                      }),
                                                  }),
                                                u(L, {
                                                  breakpoint: b,
                                                  overrides: {
                                                    YDU0n2zno: {
                                                      animate: void 0,
                                                      children: u(y, {
                                                        children: u(`h1`, {
                                                          style: {
                                                            "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                            "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                            "--framer-font-size": `32px`,
                                                            "--framer-font-weight": `500`,
                                                            "--framer-letter-spacing": `0px`,
                                                            "--framer-line-height": `70px`,
                                                            "--framer-text-alignment": `center`,
                                                            "--framer-text-color": `rgb(255, 255, 255)`,
                                                          },
                                                          children: u(`span`, {
                                                            "data-text-fill": `true`,
                                                            style: {
                                                              backgroundImage: `linear-gradient(90deg, var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255)) 0%, var(--token-14f74354-f5bc-49c1-9486-2936a231e276, rgba(255, 255, 255, 0.3)) 350%)`,
                                                            },
                                                            children: `Hi I'm Mugesh V`,
                                                          }),
                                                        }),
                                                      }),
                                                      initial: void 0,
                                                      optimized: void 0,
                                                    },
                                                  },
                                                  children: u(Vv, {
                                                    __fromCanvasComponent: !0,
                                                    animate: dy,
                                                    children: u(y, {
                                                      children: u(`h1`, {
                                                        style: {
                                                          "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                          "--framer-font-size": `62px`,
                                                          "--framer-font-weight": `500`,
                                                          "--framer-letter-spacing": `-3.8px`,
                                                          "--framer-line-height": `90px`,
                                                          "--framer-text-alignment": `center`,
                                                          "--framer-text-color": `rgb(255, 255, 255)`,
                                                        },
                                                        children: u(`span`, {
                                                          "data-text-fill": `true`,
                                                          style: {
                                                            backgroundImage: `linear-gradient(90deg, var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255)) 0%, var(--token-14f74354-f5bc-49c1-9486-2936a231e276, rgba(255, 255, 255, 0.3)) 350%)`,
                                                          },
                                                          children: `Hi I'm Mugesh V`,
                                                        }),
                                                      }),
                                                    }),
                                                    className: `framer-16s785y`,
                                                    "data-framer-appear-id": `16s785y`,
                                                    "data-framer-name": `Text 1`,
                                                    fonts: [`GF;Geist-500`],
                                                    initial: ly,
                                                    optimized: !0,
                                                    verticalAlignment: `top`,
                                                    withExternalLayout: !0,
                                                  }),
                                                }),
                                              ],
                                            }),
                                          }),
                                          g(`div`, {
                                            className: `framer-1mrnzwg`,
                                            children: [
                                              u(L, {
                                                breakpoint: b,
                                                overrides: {
                                                  YDU0n2zno: {
                                                    children: u(y, {
                                                      children: u(`p`, {
                                                        style: {
                                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                          "--framer-font-size": `18px`,
                                                          "--framer-letter-spacing": `-0.2px`,
                                                          "--framer-line-height": `26px`,
                                                          "--framer-text-alignment": `center`,
                                                          "--framer-text-color": `rgb(255, 255, 255)`,
                                                        },
                                                        children: `Des`,
                                                      }),
                                                    }),
                                                  },
                                                },
                                                children: u(R, {
                                                  __fromCanvasComponent: !0,
                                                  children: u(y, {
                                                    children: u(`p`, {
                                                      style: {
                                                        "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                        "--framer-font-size": `28px`,
                                                        "--framer-letter-spacing": `-0.2px`,
                                                        "--framer-line-height": `26px`,
                                                        "--framer-text-alignment": `center`,
                                                        "--framer-text-color": `rgb(255, 255, 255)`,
                                                      },
                                                      children: ``,
                                                    }),
                                                  }),
                                                  className: `framer-1o8x1zq`,
                                                  "data-framer-name": `Text`,
                                                  effect: my,
                                                  fonts: [`GF;Geist-regular`],
                                                  verticalAlignment: `top`,
                                                  withExternalLayout: !0,
                                                }),
                                              }),
                                              u(L, {
                                                breakpoint: b,
                                                overrides: {
                                                  YDU0n2zno: {
                                                    children: u(y, {
                                                      children: u(`p`, {
                                                        style: {
                                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                          "--framer-font-size": `14px`,
                                                          "--framer-letter-spacing": `-0.2px`,
                                                          "--framer-line-height": `26px`,
                                                          "--framer-text-alignment": `center`,
                                                          "--framer-text-color": `rgba(255, 255, 255, 0.6)`,
                                                        },
                                                        children: `Software Developer and Salesforce Developer `,
                                                      }),
                                                    }),
                                                  },
                                                },
                                                children: u(R, {
                                                  __fromCanvasComponent: !0,
                                                  children: u(y, {
                                                    children: u(`p`, {
                                                      style: {
                                                        "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                        "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                        "--framer-font-size": `18px`,
                                                        "--framer-letter-spacing": `-0.2px`,
                                                        "--framer-line-height": `26px`,
                                                        "--framer-text-alignment": `center`,
                                                        "--framer-text-color": `rgba(255, 255, 255, 0.6)`,
                                                      },
                                                      children: `Software Developer and Salesforce Developer `,
                                                    }),
                                                  }),
                                                  className: `framer-camxi5`,
                                                  "data-framer-name": `Text`,
                                                  effect: hy,
                                                  fonts: [`GF;Geist-regular`],
                                                  verticalAlignment: `top`,
                                                  withExternalLayout: !0,
                                                }),
                                              }),
                                            ],
                                          }),
                                        ],
                                      }),
                                    }),
                                    A() &&
                                      u(re, {
                                        links: [
                                          {
                                            href: { webPageId: `augiA20Il` },
                                            implicitPathVariables: void 0,
                                          },
                                          {
                                            href: { webPageId: `augiA20Il` },
                                            implicitPathVariables: void 0,
                                          },
                                        ],
                                        children: (e) =>
                                          u(L, {
                                            breakpoint: b,
                                            overrides: {
                                              Oc18Q6NWV: { height: 38 },
                                            },
                                            children: u(N, {
                                              children: u(P, {
                                                className: `framer-1giq28c-container hidden-72rtr7 hidden-1pn6j55`,
                                                nodeId: `BSESEyTle`,
                                                rendersWithMotion: !0,
                                                scopeId: `augiA20Il`,
                                                whileTap: uy,
                                                children: u(L, {
                                                  breakpoint: b,
                                                  overrides: {
                                                    Oc18Q6NWV: {
                                                      zM2dkJ0Mt: e[1],
                                                    },
                                                  },
                                                  children: u(sv, {
                                                    height: `100%`,
                                                    id: `BSESEyTle`,
                                                    jn909WTNI: `Open to Work`,
                                                    layoutId: `BSESEyTle`,
                                                    tCgMNdSJ8: ``,
                                                    variant: `CyOidWSxa`,
                                                    width: `100%`,
                                                    zM2dkJ0Mt: e[0],
                                                  }),
                                                }),
                                              }),
                                            }),
                                          }),
                                      }),
                                    j() &&
                                      u(re, {
                                        links: [
                                          {
                                            href: { webPageId: `augiA20Il` },
                                            implicitPathVariables: void 0,
                                          },
                                          {
                                            href: { webPageId: `augiA20Il` },
                                            implicitPathVariables: void 0,
                                          },
                                        ],
                                        children: (e) =>
                                          u(L, {
                                            breakpoint: b,
                                            overrides: {
                                              YDU0n2zno: { height: 38 },
                                            },
                                            children: u(N, {
                                              children: u(P, {
                                                className: `framer-kkkzdm-container hidden-72rtr7 hidden-1nc64nb`,
                                                nodeId: `lHxvAvm_L`,
                                                rendersWithMotion: !0,
                                                scopeId: `augiA20Il`,
                                                whileTap: uy,
                                                children: u(L, {
                                                  breakpoint: b,
                                                  overrides: {
                                                    YDU0n2zno: {
                                                      zM2dkJ0Mt: e[1],
                                                    },
                                                  },
                                                  children: u(sv, {
                                                    height: `100%`,
                                                    id: `lHxvAvm_L`,
                                                    jn909WTNI: `Open to Work`,
                                                    layoutId: `lHxvAvm_L`,
                                                    tCgMNdSJ8: ``,
                                                    variant: `CyOidWSxa`,
                                                    width: `100%`,
                                                    zM2dkJ0Mt: e[0],
                                                  }),
                                                }),
                                              }),
                                            }),
                                          }),
                                      }),
                                  ],
                                }),
                                g(Hv, {
                                  animate: gy,
                                  className: `framer-tz8ksx`,
                                  "data-framer-appear-id": `tz8ksx`,
                                  "data-framer-name": `Buttons`,
                                  initial: ly,
                                  optimized: !0,
                                  children: [
                                    u(N, {
                                      height: 46,
                                      children: u(P, {
                                        className: `framer-c0ecf1-container`,
                                        nodeId: `WbOa4JlUw`,
                                        scopeId: `augiA20Il`,
                                        children: u(L, {
                                          breakpoint: b,
                                          overrides: {
                                            YDU0n2zno: {
                                              GT109pdEG: `https://drive.google.com/file/d/1KHwP0XSQUVmKylPK-4xFJQbwG74fCvjx/view?usp=sharing`,
                                            },
                                          },
                                          children: u(we, {
                                            AL_NU982V: !0,
                                            dlVBgpKLv: `Download Resume`,
                                            GT109pdEG: `https://drive.google.com/file/d/1wNW-86t7OfUGNyCZGHhlMTCO9PbhuFuI/view?usp=sharing`,
                                            height: `100%`,
                                            id: `WbOa4JlUw`,
                                            layoutId: `WbOa4JlUw`,
                                            SD1BGlGhK: !1,
                                            variant: `NLGbl8fkw`,
                                            width: `100%`,
                                          }),
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 46,
                                      children: u(P, {
                                        className: `framer-17gjjei-container`,
                                        nodeId: `hAd1mipMt`,
                                        scopeId: `augiA20Il`,
                                        children: u(we, {
                                          AL_NU982V: !0,
                                          dlVBgpKLv: `Get in touch `,
                                          GT109pdEG: `https://www.linkedin.com/in/prernakohli4/`,
                                          height: `100%`,
                                          id: `hAd1mipMt`,
                                          layoutId: `hAd1mipMt`,
                                          SD1BGlGhK: !1,
                                          variant: `u0eJOWaxZ`,
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  ],
                                }),
                              ],
                            }),
                            u(Hv, {
                              animate: _y,
                              className: `framer-lpn1zf`,
                              "data-framer-appear-id": `lpn1zf`,
                              "data-framer-name": `Bottom`,
                              initial: ly,
                              optimized: !0,
                              children: g(`div`, {
                                className: `framer-1l7zuay`,
                                children: [
                                  u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(`p`, {
                                        style: {
                                          "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                          "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                          "--framer-font-size": `24px`,
                                          "--framer-letter-spacing": `-0.2px`,
                                          "--framer-line-height": `26px`,
                                          "--framer-text-alignment": `center`,
                                          "--framer-text-color": `rgb(255, 255, 255)`,
                                        },
                                        children: `Skills `,
                                      }),
                                    }),
                                    className: `framer-pwjdnb`,
                                    "data-framer-name": `Text`,
                                    effect: vy,
                                    fonts: [`GF;Geist-regular`],
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          0 +
                                          0 +
                                          40 +
                                          81 +
                                          0 +
                                          492.5 +
                                          0 +
                                          0 +
                                          40 +
                                          154,
                                      },
                                      YDU0n2zno: {
                                        width: `min(min(${
                                          c?.width || `100vw`
                                        }, 1440px) - 64px, 440px)`,
                                        y: void 0,
                                      },
                                    },
                                    children: u(N, {
                                      height: 80,
                                      width: `440px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        24 +
                                        0 +
                                        40 +
                                        61 +
                                        0 +
                                        495 +
                                        0 +
                                        0 +
                                        40 +
                                        154,
                                      children: u(P, {
                                        className: `framer-1obgp8z-container`,
                                        isModuleExternal: !0,
                                        nodeId: `uWj7RUUrH`,
                                        scopeId: `augiA20Il`,
                                        children: u(Ig, {
                                          height: `100%`,
                                          id: `uWj7RUUrH`,
                                          layoutId: `uWj7RUUrH`,
                                          style: { width: `100%` },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                ],
                              }),
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                  u(N, {
                    children: u(P, {
                      className: `framer-13rc8ge-container`,
                      isAuthoredByUser: !0,
                      isModuleExternal: !0,
                      nodeId: `W2_ip755H`,
                      scopeId: `augiA20Il`,
                      children: u(Kg, {
                        color: `rgba(50, 117, 240, 0.08)`,
                        customPatternMode: `alpha`,
                        customPatternPosition: `center`,
                        customPatternSizing: `tile`,
                        dotSize: 4,
                        flip: !1,
                        height: `100%`,
                        hoverColor: `rgba(26, 81, 184, 0.91)`,
                        hoverShape: `glow`,
                        hoverSize: 327,
                        id: `W2_ip755H`,
                        layoutId: `W2_ip755H`,
                        lineWidth: 2,
                        patternPreset: `dots`,
                        radius: `0px`,
                        smoothing: 55,
                        style: { height: `100%`, width: `100%` },
                        tileSize: 13,
                        width: `100%`,
                      }),
                    }),
                  }),
                  g(`div`, {
                    className: `framer-1oiun7d`,
                    "data-framer-name": `Work`,
                    id: M,
                    ref: F,
                    children: [
                      g(`div`, {
                        className: `framer-1a0vd3e`,
                        children: [
                          u(`div`, {
                            className: `framer-6aofif`,
                            "data-framer-name": `Seperator`,
                          }),
                          u(L, {
                            breakpoint: b,
                            overrides: {
                              YDU0n2zno: {
                                children: u(y, {
                                  children: u(`p`, {
                                    style: {
                                      "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                      "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                      "--framer-font-size": `32px`,
                                      "--framer-letter-spacing": `-0.2px`,
                                      "--framer-line-height": `23px`,
                                      "--framer-text-alignment": `center`,
                                      "--framer-text-color": `rgb(255, 255, 255)`,
                                    },
                                    children: `Selected Projects`,
                                  }),
                                }),
                              },
                            },
                            children: u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                    "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                    "--framer-font-size": `32px`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-line-height": `26px`,
                                    "--framer-text-alignment": `center`,
                                    "--framer-text-color": `rgb(255, 255, 255)`,
                                  },
                                  children: `Selected Projects`,
                                }),
                              }),
                              className: `framer-w1lg9s`,
                              "data-framer-name": `Text`,
                              effect: vy,
                              fonts: [`GF;Geist-regular`],
                              verticalAlignment: `center`,
                              withExternalLayout: !0,
                            }),
                          }),
                        ],
                      }),
                      g(Jv, {
                        __framer__animate: { transition: by },
                        __framer__animateOnce: !1,
                        __framer__enter: yy,
                        __framer__exit: xy,
                        __framer__styleAppearEffectEnabled: !0,
                        __framer__threshold: 0,
                        __perspectiveFX: !1,
                        __targetOpacity: 1,
                        className: `framer-baa3y5`,
                        "data-framer-name": `Case Study`,
                        id: ne,
                        ref: ie,
                        style: { transformPerspective: 1200 },
                        children: [
                          u(L, {
                            breakpoint: b,
                            overrides: {
                              Oc18Q6NWV: {
                                width: `min(${
                                  c?.width || `100vw`
                                } - 64px, 1016px)`,
                                y: (c?.y || 0) + 0 + 810 + 32 + 131 + 0 + 0,
                              },
                              YDU0n2zno: {
                                height: 643,
                                width: `min(${
                                  c?.width || `100vw`
                                } - 48px, 1016px)`,
                                y: void 0,
                              },
                            },
                            children: u(N, {
                              height: 417,
                              width: `min(${
                                c?.width || `100vw`
                              } - 240px, 1016px)`,
                              y: (c?.y || 0) + 0 + 834 + 16 + 151 + 0 + 0,
                              children: u(L, {
                                breakpoint: b,
                                overrides: {
                                  YDU0n2zno: { "data-framer-cursor": void 0 },
                                },
                                children: u(qv, {
                                  __framer__spring: {
                                    bounce: 0.2,
                                    damping: 69,
                                    delay: 0,
                                    duration: 0.3,
                                    durationBasedSpring: !0,
                                    ease: [0.44, 0, 0.56, 1],
                                    mass: 2.3,
                                    stiffness: 422,
                                    type: `spring`,
                                  },
                                  __framer__styleTransformEffectEnabled: !0,
                                  __framer__transformTargets: [
                                    {
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 1,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: B,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.95,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: V,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.9,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: ae,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.85,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                  ],
                                  __framer__transformTrigger: `onScrollTarget`,
                                  __framer__transformViewportThreshold: 0.5,
                                  __perspectiveFX: !1,
                                  __targetOpacity: 1,
                                  className: `framer-1e3mst9-container`,
                                  "data-framer-cursor": `18qojda`,
                                  id: U,
                                  nodeId: `dCDC69rMu`,
                                  ref: W,
                                  rendersWithMotion: !0,
                                  scopeId: `augiA20Il`,
                                  style: { transformPerspective: 1200 },
                                  children: u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      YDU0n2zno: {
                                        style: {
                                          height: `100%`,
                                          maxWidth: `100%`,
                                          width: `100%`,
                                        },
                                        variant: `crJIB3Rvl`,
                                      },
                                    },
                                    children: u(wv, {
                                      height: `100%`,
                                      id: `dCDC69rMu`,
                                      layoutId: `dCDC69rMu`,
                                      style: {
                                        maxWidth: `100%`,
                                        width: `100%`,
                                      },
                                      variant: `hA2zrzixE`,
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                              }),
                            }),
                          }),
                          u(L, {
                            breakpoint: b,
                            overrides: {
                              Oc18Q6NWV: {
                                width: `min(${
                                  c?.width || `100vw`
                                } - 64px, 1016px)`,
                                y: (c?.y || 0) + 0 + 810 + 32 + 131 + 0 + 465,
                              },
                              YDU0n2zno: {
                                height: 643,
                                width: `min(${
                                  c?.width || `100vw`
                                } - 48px, 1016px)`,
                                y: void 0,
                              },
                            },
                            children: u(N, {
                              height: 417,
                              width: `min(${
                                c?.width || `100vw`
                              } - 240px, 1016px)`,
                              y: (c?.y || 0) + 0 + 834 + 16 + 151 + 0 + 465,
                              children: u(L, {
                                breakpoint: b,
                                overrides: {
                                  YDU0n2zno: { "data-framer-cursor": void 0 },
                                },
                                children: u(qv, {
                                  __framer__spring: {
                                    damping: 69,
                                    delay: 0,
                                    duration: 0.3,
                                    ease: [0.44, 0, 0.56, 1],
                                    mass: 2.3,
                                    stiffness: 422,
                                    type: `spring`,
                                  },
                                  __framer__styleTransformEffectEnabled: !0,
                                  __framer__transformTargets: [
                                    {
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 1,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: V,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.95,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: ae,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.9,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                  ],
                                  __framer__transformTrigger: `onScrollTarget`,
                                  __framer__transformViewportThreshold: 0.5,
                                  __perspectiveFX: !1,
                                  __targetOpacity: 1,
                                  className: `framer-s2u43q-container`,
                                  "data-framer-cursor": `18qojda`,
                                  id: oe,
                                  nodeId: `uqYhhRTT9`,
                                  ref: B,
                                  rendersWithMotion: !0,
                                  scopeId: `augiA20Il`,
                                  style: { transformPerspective: 1200 },
                                  children: u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      YDU0n2zno: {
                                        style: {
                                          height: `100%`,
                                          maxWidth: `100%`,
                                          width: `100%`,
                                        },
                                        variant: `udSq8lYgM`,
                                      },
                                    },
                                    children: u(wv, {
                                      height: `100%`,
                                      id: `uqYhhRTT9`,
                                      layoutId: `uqYhhRTT9`,
                                      style: {
                                        maxWidth: `100%`,
                                        width: `100%`,
                                      },
                                      variant: `JTc8OQMhD`,
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                              }),
                            }),
                          }),
                          u(L, {
                            breakpoint: b,
                            overrides: {
                              Oc18Q6NWV: {
                                width: `min(${
                                  c?.width || `100vw`
                                } - 64px, 1016px)`,
                                y: (c?.y || 0) + 0 + 810 + 32 + 131 + 0 + 930,
                              },
                              YDU0n2zno: {
                                height: 643,
                                width: `min(${
                                  c?.width || `100vw`
                                } - 48px, 1016px)`,
                                y: void 0,
                              },
                            },
                            children: u(N, {
                              height: 417,
                              width: `min(${
                                c?.width || `100vw`
                              } - 240px, 1016px)`,
                              y: (c?.y || 0) + 0 + 834 + 16 + 151 + 0 + 930,
                              children: u(L, {
                                breakpoint: b,
                                overrides: {
                                  YDU0n2zno: { "data-framer-cursor": void 0 },
                                },
                                children: u(qv, {
                                  __framer__spring: {
                                    damping: 69,
                                    delay: 0,
                                    duration: 0.3,
                                    ease: [0.44, 0, 0.56, 1],
                                    mass: 2.9,
                                    stiffness: 422,
                                    type: `spring`,
                                  },
                                  __framer__styleTransformEffectEnabled: !0,
                                  __framer__transformTargets: [
                                    {
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 1,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: ae,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.95,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                  ],
                                  __framer__transformTrigger: `onScrollTarget`,
                                  __framer__transformViewportThreshold: 0.5,
                                  __perspectiveFX: !1,
                                  __targetOpacity: 1,
                                  className: `framer-raaeud-container`,
                                  "data-framer-cursor": `18qojda`,
                                  id: se,
                                  nodeId: `FTMlkB5I5`,
                                  ref: V,
                                  rendersWithMotion: !0,
                                  scopeId: `augiA20Il`,
                                  style: { transformPerspective: 1200 },
                                  children: u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      YDU0n2zno: {
                                        style: {
                                          height: `100%`,
                                          maxWidth: `100%`,
                                          width: `100%`,
                                        },
                                        variant: `GTqO6MMCA`,
                                      },
                                    },
                                    children: u(wv, {
                                      height: `100%`,
                                      id: `FTMlkB5I5`,
                                      layoutId: `FTMlkB5I5`,
                                      style: {
                                        maxWidth: `100%`,
                                        width: `100%`,
                                      },
                                      variant: `XOvUeRO4b`,
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                              }),
                            }),
                          }),
                          u(L, {
                            breakpoint: b,
                            overrides: {
                              Oc18Q6NWV: {
                                width: `min(${
                                  c?.width || `100vw`
                                } - 64px, 1016px)`,
                                y: (c?.y || 0) + 0 + 810 + 32 + 131 + 0 + 1395,
                              },
                              YDU0n2zno: {
                                height: 643.5,
                                width: `min(${
                                  c?.width || `100vw`
                                } - 48px, 1016px)`,
                                y: void 0,
                              },
                            },
                            children: u(N, {
                              height: 417,
                              width: `min(${
                                c?.width || `100vw`
                              } - 240px, 1016px)`,
                              y: (c?.y || 0) + 0 + 834 + 16 + 151 + 0 + 1395,
                              children: u(L, {
                                breakpoint: b,
                                overrides: {
                                  YDU0n2zno: {
                                    __framer__styleTransformEffectEnabled:
                                      void 0,
                                    "data-framer-cursor": void 0,
                                    style: {},
                                  },
                                },
                                children: u(qv, {
                                  __framer__spring: {
                                    damping: 69,
                                    delay: 0,
                                    duration: 0.3,
                                    ease: [0.44, 0, 0.56, 1],
                                    mass: 2.9,
                                    stiffness: 422,
                                    type: `spring`,
                                  },
                                  __framer__styleTransformEffectEnabled: !0,
                                  __framer__transformTargets: [
                                    {
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 1,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                    {
                                      ref: ae,
                                      target: {
                                        opacity: 1,
                                        rotate: 0,
                                        rotateX: 0,
                                        rotateY: 0,
                                        scale: 0.95,
                                        skewX: 0,
                                        skewY: 0,
                                        x: 0,
                                        y: 0,
                                      },
                                    },
                                  ],
                                  __framer__transformTrigger: `onScrollTarget`,
                                  __framer__transformViewportThreshold: 0.5,
                                  __perspectiveFX: !1,
                                  __targetOpacity: 1,
                                  className: `framer-5bxk33-container`,
                                  "data-framer-cursor": `18qojda`,
                                  id: ce,
                                  nodeId: `MLufM5z_P`,
                                  ref: ae,
                                  rendersWithMotion: !0,
                                  scopeId: `augiA20Il`,
                                  style: { transformPerspective: 1200 },
                                  children: u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      YDU0n2zno: {
                                        style: {
                                          height: `100%`,
                                          maxWidth: `100%`,
                                          width: `100%`,
                                        },
                                        variant: `b_STnpYUl`,
                                      },
                                    },
                                    children: u(wv, {
                                      height: `100%`,
                                      id: `MLufM5z_P`,
                                      layoutId: `MLufM5z_P`,
                                      style: {
                                        maxWidth: `100%`,
                                        width: `100%`,
                                      },
                                      variant: `vEOwkGwpr`,
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                              }),
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  fe() &&
                    g(`div`, {
                      className: `framer-15m3g4w hidden-1pn6j55`,
                      "data-framer-name": `About Me`,
                      id: he,
                      ref: ve,
                      children: [
                        K() &&
                          g(`div`, {
                            className: `framer-6kw8yk hidden-1nc64nb`,
                            "data-border": !0,
                            "data-framer-name": `Case #1`,
                            children: [
                              u(`div`, { className: `framer-2ommc0` }),
                              u(`div`, {
                                className: `framer-1qosqal`,
                                children: u(te, {
                                  background: {
                                    alt: ``,
                                    fit: `fill`,
                                    intrinsicHeight: 381,
                                    intrinsicWidth: 360,
                                    loading: G(
                                      (c?.y || 0) +
                                        0 +
                                        2925 +
                                        0 +
                                        0 +
                                        20 +
                                        -56 +
                                        0 +
                                        159
                                    ),
                                    pixelHeight: 800,
                                    pixelWidth: 722,
                                    sizes: `177px`,
                                    src: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?scale-down-to=512&width=722&height=800`,
                                    srcSet: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?width=722&height=800 722w`,
                                  },
                                  className: `framer-1a1qdib`,
                                  "data-framer-name": `Screenshot 2025-06-30 at 11.15.57â¯PM-Photoroom`,
                                }),
                              }),
                              g(`div`, {
                                className: `framer-1jvo5ha`,
                                "data-framer-name": `Card Content`,
                                children: [
                                  g(`div`, {
                                    className: `framer-1gphbcs`,
                                    children: [
                                      u(N, {
                                        height: 40,
                                        children: u(P, {
                                          className: `framer-100qe0v-container`,
                                          nodeId: `OBlMYakp6`,
                                          scopeId: `augiA20Il`,
                                          children: u(K_, {
                                            aZ7GvMqIl: `FingerprintSimple`,
                                            height: `100%`,
                                            id: `OBlMYakp6`,
                                            KS7KLFqN8: `About Me`,
                                            layoutId: `OBlMYakp6`,
                                            rQKAY6456: `NEW`,
                                            variant: `YhpbrGmRY`,
                                            width: `100%`,
                                            xAPRy8bad: 0,
                                          }),
                                        }),
                                      }),
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: g(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `14px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `28px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: [
                                              `I’m a passionate`,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: ` Full Stack Developer`,
                                              }),
                                              ` with hands-on experience in`,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: ` Salesforce, MERN Stack, and Cloud Technologies`,
                                              }),
                                              `. My expertise spans `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `software strategy, development, and user centered design`,
                                              }),
                                              `—enabling me to craft solutions that are not only `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `visually engaging`,
                                              }),
                                              ` but also `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `efficient, scalable, and impactful`,
                                              }),
                                              `. `,
                                            ],
                                          }),
                                        }),
                                        className: `framer-de6uf`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [
                                          `GF;DM Sans-regular`,
                                          `GF;DM Sans-900`,
                                        ],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                    ],
                                  }),
                                  g(Hv, {
                                    animate: Cy,
                                    className: `framer-7bccsa`,
                                    "data-framer-appear-id": `7bccsa`,
                                    initial: ly,
                                    optimized: !0,
                                    children: [
                                      u(`div`, {
                                        className: `framer-wfaiao`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Salesforce`,
                                            }),
                                          }),
                                          className: `framer-ihvust`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-19x7ubt`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `ReactJS`,
                                            }),
                                          }),
                                          className: `framer-5p2bg8`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-ntpfr4`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `ReactNative`,
                                            }),
                                          }),
                                          className: `framer-ie9667`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-svm778`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Django`,
                                            }),
                                          }),
                                          className: `framer-3bcy2b`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-pv3e7d`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `MongoDB`,
                                            }),
                                          }),
                                          className: `framer-1b20c4o`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-19ywnvg`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `MySQL`,
                                            }),
                                          }),
                                          className: `framer-1es5d79`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-bhiht8`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Oracle 23ai`,
                                            }),
                                          }),
                                          className: `framer-1hwspbr`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-d3fgb7`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `FireBase`,
                                            }),
                                          }),
                                          className: `framer-gxcewr`,
                                          fonts: [`GF;Geist-500`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                    ],
                                  }),
                                  g(`div`, {
                                    className: `framer-1p8zp0c`,
                                    children: [
                                      g(Hv, {
                                        animate: wy,
                                        className: `framer-1hr09ao`,
                                        "data-framer-appear-id": `1hr09ao`,
                                        initial: ly,
                                        optimized: !0,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Kongu Engineering College`,
                                              }),
                                            }),
                                            className: `framer-1fn5ksr`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;Geist-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `May 2026 - Present`,
                                              }),
                                            }),
                                            className: `framer-a4e6n0`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                      u(Hv, {
                                        animate: wy,
                                        className: `framer-1uk1trb`,
                                        "data-framer-appear-id": `1uk1trb`,
                                        "data-framer-name": `Seperator`,
                                        initial: ly,
                                        optimized: !0,
                                      }),
                                      g(Hv, {
                                        animate: wy,
                                        className: `framer-1ifffu9`,
                                        "data-framer-appear-id": `1ifffu9`,
                                        initial: ly,
                                        optimized: !0,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Shree Ganga Higher Secondary School `,
                                              }),
                                            }),
                                            className: `framer-1splrb3`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;Geist-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `July 2020 - May 2022`,
                                              }),
                                            }),
                                            className: `framer-1ft90qb`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                      u(Hv, {
                                        animate: wy,
                                        className: `framer-7drjao`,
                                        "data-framer-appear-id": `7drjao`,
                                        "data-framer-name": `Seperator`,
                                        initial: ly,
                                        optimized: !0,
                                      }),
                                      g(Hv, {
                                        animate: wy,
                                        className: `framer-pyg707`,
                                        "data-framer-appear-id": `pyg707`,
                                        initial: ly,
                                        optimized: !0,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7R2Vpc3QtcmVndWxhcg==`,
                                                  "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Literacy Mission Matric Higher Secondary School`,
                                              }),
                                            }),
                                            className: `framer-1hxpol3`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;Geist-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `28px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Upto May 2020`,
                                              }),
                                            }),
                                            className: `framer-pw7y9j`,
                                            "data-framer-name": `Text 1`,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        A() &&
                          g(`div`, {
                            className: `framer-1tli07g hidden-72rtr7`,
                            "data-border": !0,
                            "data-framer-name": `Case #1`,
                            children: [
                              u(`div`, { className: `framer-j5nqza` }),
                              g(`div`, {
                                className: `framer-1j4ze6l`,
                                "data-framer-name": `Card Content`,
                                children: [
                                  g(`div`, {
                                    className: `framer-1p2y6b5`,
                                    children: [
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: g(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `14px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `28px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: [
                                              `I’m a passionate Product Designer with over `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `6 years`,
                                              }),
                                              ` of industry experience, specializing in `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `UX/UI Design and Design Thinking`,
                                              }),
                                              `. My expertise spans `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `strategy, business, and user-centered design`,
                                              }),
                                              `—enabling me to craft solutions that are not only `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `visually appealing`,
                                              }),
                                              ` but also `,
                                              u(`span`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                                  "--framer-font-family": `"DM Sans", sans-serif`,
                                                  "--framer-font-weight": `900`,
                                                  "--framer-text-color": `rgb(255, 255, 255)`,
                                                },
                                                children: `practical and scalable`,
                                              }),
                                              `. `,
                                            ],
                                          }),
                                        }),
                                        className: `framer-l1bvd3`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [
                                          `GF;DM Sans-regular`,
                                          `GF;DM Sans-900`,
                                        ],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                      u(N, {
                                        height: 40,
                                        children: u(P, {
                                          className: `framer-10uyuws-container`,
                                          nodeId: `bIf58Puv4`,
                                          scopeId: `augiA20Il`,
                                          children: u(K_, {
                                            aZ7GvMqIl: `FingerprintSimple`,
                                            height: `100%`,
                                            id: `bIf58Puv4`,
                                            KS7KLFqN8: `About Me`,
                                            layoutId: `bIf58Puv4`,
                                            rQKAY6456: `NEW`,
                                            variant: `YhpbrGmRY`,
                                            width: `100%`,
                                            xAPRy8bad: 0,
                                          }),
                                        }),
                                      }),
                                    ],
                                  }),
                                  g(`div`, {
                                    className: `framer-cjqo7w`,
                                    children: [
                                      u(`div`, {
                                        className: `framer-29wsa5`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Salesforce`,
                                            }),
                                          }),
                                          className: `framer-uowyc0`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-11kice4`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `ReactJS`,
                                            }),
                                          }),
                                          className: `framer-1g2p6fm`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-z5ode1`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `ReactNative`,
                                            }),
                                          }),
                                          className: `framer-1r8u7px`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-1vt85xo`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Django`,
                                            }),
                                          }),
                                          className: `framer-brtkrg`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-fxtxur`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `NodeJS`,
                                            }),
                                          }),
                                          className: `framer-rm5d2x`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-1mrrhl2`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `MongoDB`,
                                            }),
                                          }),
                                          className: `framer-c118jl`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-fxfb4o`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `MySQL`,
                                            }),
                                          }),
                                          className: `framer-1i6ogls`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                      u(`div`, {
                                        className: `framer-1famjec`,
                                        "data-border": !0,
                                        children: u(R, {
                                          __fromCanvasComponent: !0,
                                          children: u(y, {
                                            children: u(`p`, {
                                              style: {
                                                "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                                "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                                "--framer-font-size": `12px`,
                                                "--framer-font-weight": `500`,
                                                "--framer-letter-spacing": `-0.3px`,
                                                "--framer-line-height": `1.4em`,
                                                "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                              },
                                              children: `Oracle 23ai`,
                                            }),
                                          }),
                                          className: `framer-14gyu2y`,
                                          fonts: [`FS;Satoshi-medium`],
                                          verticalAlignment: `top`,
                                          withExternalLayout: !0,
                                        }),
                                      }),
                                    ],
                                  }),
                                  g(`div`, {
                                    className: `framer-1hfvgyb`,
                                    children: [
                                      g(`div`, {
                                        className: `framer-15brax8`,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Kongu Engineering College`,
                                              }),
                                            }),
                                            className: `framer-16nb5my`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `October 2025 - Present`,
                                              }),
                                            }),
                                            className: `framer-1tgy434`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                      u(`div`, {
                                        className: `framer-18000xb`,
                                        "data-framer-name": `Seperator`,
                                      }),
                                      g(`div`, {
                                        className: `framer-ysi25q`,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Shree Ganga Higher Secondary School `,
                                              }),
                                            }),
                                            className: `framer-je9vi6`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `July 2021 - May 2023`,
                                              }),
                                            }),
                                            className: `framer-1ydxxsi`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                      u(`div`, {
                                        className: `framer-1svc1m7`,
                                        "data-framer-name": `Seperator`,
                                      }),
                                      g(`div`, {
                                        className: `framer-e9qko`,
                                        children: [
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Literacy Mission Matric Higher Secondary School`,
                                              }),
                                            }),
                                            className: `framer-pjk76u`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                          u(R, {
                                            __fromCanvasComponent: !0,
                                            children: u(y, {
                                              children: u(`h2`, {
                                                style: {
                                                  "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                                  "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                                  "--framer-font-size": `12px`,
                                                  "--framer-letter-spacing": `0.1px`,
                                                  "--framer-line-height": `18px`,
                                                  "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                                },
                                                children: `Upto May 2020`,
                                              }),
                                            }),
                                            className: `framer-awi7xc`,
                                            "data-framer-name": `Text 1`,
                                            effect: Sy,
                                            fonts: [`GF;DM Sans-regular`],
                                            verticalAlignment: `top`,
                                            withExternalLayout: !0,
                                          }),
                                        ],
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                              u(`div`, {
                                className: `framer-308xc4`,
                                children: u(L, {
                                  breakpoint: b,
                                  overrides: {
                                    Oc18Q6NWV: {
                                      background: {
                                        alt: ``,
                                        fit: `fill`,
                                        intrinsicHeight: 381,
                                        intrinsicWidth: 360,
                                        loading: G(
                                          (c?.y || 0) +
                                            0 +
                                            2849 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            237.771
                                        ),
                                        pixelHeight: 800,
                                        pixelWidth: 722,
                                        sizes: `calc((min(${
                                          c?.width || `100vw`
                                        } - 64px, 1100px) - 80px) * 0.2038)`,
                                        src: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?scale-down-to=512&width=722&height=800`,
                                        srcSet: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?width=722&height=800 722w`,
                                      },
                                    },
                                  },
                                  children: u(te, {
                                    background: {
                                      alt: ``,
                                      fit: `fill`,
                                      intrinsicHeight: 381,
                                      intrinsicWidth: 360,
                                      pixelHeight: 800,
                                      pixelWidth: 722,
                                      src: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?scale-down-to=512&width=722&height=800`,
                                      srcSet: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?width=722&height=800 722w`,
                                    },
                                    className: `framer-13fmz0s`,
                                    "data-framer-name": `Screenshot 2025-06-30 at 11.15.57â¯PM-Photoroom`,
                                  }),
                                }),
                              }),
                            ],
                          }),
                      ],
                    }),
                  u(`div`, {
                    className: `framer-1uompjg`,
                    id: ye,
                    ref: be,
                    children: g(`div`, {
                      className: `framer-v4gaf3`,
                      "data-border": !0,
                      "data-framer-name": `Container`,
                      children: [
                        u(N, {
                          children: u(P, {
                            className: `framer-hagj8c-container`,
                            isAuthoredByUser: !0,
                            isModuleExternal: !0,
                            nodeId: `p0f4KLyaT`,
                            scopeId: `augiA20Il`,
                            children: u(Gh, {
                              animation: { animate: !0, speed: 12 },
                              height: `100%`,
                              id: `p0f4KLyaT`,
                              intensity: 8,
                              layoutId: `p0f4KLyaT`,
                              position: 50,
                              radius: `0px 0px 0px 0px`,
                              rays: 25,
                              raysColor: {
                                color: `var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214))`,
                                color1: `rgb(0, 20, 150)`,
                                color2: `rgb(115, 133, 255)`,
                                mode: `multi`,
                              },
                              reach: 15,
                              style: { height: `100%`, width: `100%` },
                              width: `100%`,
                            }),
                          }),
                        }),
                        g(`div`, {
                          className: `framer-1ep1im7`,
                          "data-framer-name": `Container`,
                          children: [
                            fe() &&
                              u(`div`, {
                                className: `framer-t3gxy1 hidden-1pn6j55`,
                                "data-framer-name": `Top`,
                                children: u(`div`, {
                                  className: `framer-rf1af9`,
                                  "data-framer-name": `Content`,
                                  children: u(`div`, {
                                    className: `framer-153zs8o`,
                                    "data-framer-name": `Tag/Title`,
                                    children: u(L, {
                                      breakpoint: b,
                                      overrides: {
                                        Oc18Q6NWV: {
                                          y:
                                            (c?.y || 0) +
                                            0 +
                                            3381 +
                                            70 +
                                            56 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            0 +
                                            0,
                                        },
                                      },
                                      children: u(N, {
                                        height: 40,
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          3446 +
                                          70 +
                                          56 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          0,
                                        children: u(P, {
                                          className: `framer-1k10fbh-container`,
                                          nodeId: `cFqPKfgtO`,
                                          scopeId: `augiA20Il`,
                                          children: u(K_, {
                                            aZ7GvMqIl: `UserCircleCheck`,
                                            height: `100%`,
                                            id: `cFqPKfgtO`,
                                            KS7KLFqN8: `Achivements`,
                                            layoutId: `cFqPKfgtO`,
                                            rQKAY6456: `NEW`,
                                            variant: `YhpbrGmRY`,
                                            width: `100%`,
                                            xAPRy8bad: 0,
                                          }),
                                        }),
                                      }),
                                    }),
                                  }),
                                }),
                              }),
                            u(N, {
                              children: u(P, {
                                className: `framer-4xb2f4-container`,
                                isAuthoredByUser: !0,
                                isModuleExternal: !0,
                                nodeId: `TUNW26iJW`,
                                scopeId: `augiA20Il`,
                                children: u(It, {
                                  alignment: `center`,
                                  direction: `left`,
                                  fadeOptions: {
                                    fadeAlpha: 0,
                                    fadeContent: !0,
                                    fadeInset: 0,
                                    fadeWidth: 25,
                                    overflow: !1,
                                  },
                                  gap: 30,
                                  height: `100%`,
                                  hoverFactor: 1,
                                  id: `TUNW26iJW`,
                                  layoutId: `TUNW26iJW`,
                                  padding: 0,
                                  paddingBottom: 0,
                                  paddingLeft: 0,
                                  paddingPerSide: !1,
                                  paddingRight: 0,
                                  paddingTop: 0,
                                  sizingOptions: {
                                    heightType: !0,
                                    widthType: !0,
                                  },
                                  slots: [
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1kekwq1-container`,
                                        "data-framer-name": `Card/ Testimonial Card 1 `,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 1 `,
                                        nodeId: `BsT87GMS4`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: `Senior Designer Manager`,
                                          height: `100%`,
                                          id: `BsT87GMS4`,
                                          layoutId: `BsT87GMS4`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/eC3oUJmUzDqWFwzefUEymtG7Y.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 1 `,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: `Tamara Fedde`,
                                          width: `100%`,
                                          zJ7dVXMEI: `Prerna brings thoughtfulness, clear communication, and strong collaboration to every project — a reliable designer who consistently elevates both the work and those around her.`,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1sgi3pv-container`,
                                        "data-framer-name": `Card/ Testimonial Card 2`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 2`,
                                        nodeId: `OcZ51dWix`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: `Product design senior specialist `,
                                          height: `100%`,
                                          id: `OcZ51dWix`,
                                          layoutId: `OcZ51dWix`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/8TYXVFmpacBaUrrpL2yPwmW4eGs.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 2`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: `Lexy Noh`,
                                          width: `100%`,
                                          zJ7dVXMEI: `Working with Prerna has been a pleasure—her professionalism, warmth, and thoughtful approach stand out. She’s a skilled, caring teammate who adds immense value to every project.`,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1wgahnv-container`,
                                        "data-framer-name": `Card/ Testimonial Card 3`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 3`,
                                        nodeId: `S6XuAAEgL`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: ``,
                                          height: `100%`,
                                          id: `S6XuAAEgL`,
                                          layoutId: `S6XuAAEgL`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/dipq3fsk7eoCSO3MokEaVX0AAlw.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 3`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: `MongoDB Associate Developer`,
                                          width: `100%`,
                                          zJ7dVXMEI: `Working with Prerna at BYJU's was a delight—she consistently delivered quality work on time. Her sharp questioning and clear, thoughtful communication made her a true asset to the team.`,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1j17oj-container`,
                                        "data-framer-name": `Card/ Testimonial Card 4`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 4`,
                                        nodeId: `Rip8RA8yU`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: `User Experience Designer`,
                                          height: `100%`,
                                          id: `Rip8RA8yU`,
                                          layoutId: `Rip8RA8yU`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/Wl0UfXN4bXa2LKh4irV9T4umbW4.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 4`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: ` Iswarya `,
                                          width: `100%`,
                                          zJ7dVXMEI: `Prerna is a highly skilled UX designer who blends creativity with functionality to craft impactful solutions. Her collaborative, proactive approach makes her a valuable asset to any team.`,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-j520vc-container`,
                                        "data-framer-name": `Card/ Testimonial Card 5`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 5`,
                                        nodeId: `l_y9XBKUV`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: `https://www.mongodb.com/students`,
                                          height: `100%`,
                                          id: `l_y9XBKUV`,
                                          layoutId: `l_y9XBKUV`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/LCb4YpgMLjf6bBXlozUaRkwT6jQ.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 5`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: `Alli Clark`,
                                          width: `100%`,
                                          zJ7dVXMEI: `Prerna is a thoughtful, user-focused UX designer who excels at collaboration, clear communication, and translating insights into intuitive, impactful design make her an invaluable asset to any team.`,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1d1ep79-container`,
                                        "data-framer-name": `Card/ Testimonial Card 6`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 6`,
                                        nodeId: `SIrbolZF8`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: `Product design senior specialist `,
                                          height: `100%`,
                                          id: `SIrbolZF8`,
                                          layoutId: `SIrbolZF8`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/CSAFEexZw8Kh4UuVNQ6o9IevaNs.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 6`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: ` Krishna Kanth`,
                                          width: `100%`,
                                          zJ7dVXMEI: `Prerna stood out among 50+ intern profiles with her creativity, innovation, and impact—quickly earning a full-time role. She streamlined design processes and proved herself invaluable member. `,
                                        }),
                                      }),
                                    }),
                                    u(N, {
                                      height: 333,
                                      children: u(P, {
                                        className: `framer-1fjdm2c-container`,
                                        "data-framer-name": `Card/ Testimonial Card 2`,
                                        inComponentSlot: !0,
                                        name: `Card/ Testimonial Card 2`,
                                        nodeId: `lmkcwLTW6`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        children: u(Rv, {
                                          dCx0Bolw9: ` Head of Product Design`,
                                          height: `100%`,
                                          id: `lmkcwLTW6`,
                                          layoutId: `lmkcwLTW6`,
                                          MRnowVoHC: Ty(
                                            {
                                              pixelHeight: 100,
                                              pixelWidth: 100,
                                              src: `https://framerusercontent.com/images/OhKnmxi82ZEbIYPHku1BUlrhTL4.jpeg?width=100&height=100`,
                                            },
                                            ``
                                          ),
                                          name: `Card/ Testimonial Card 2`,
                                          oHlymWWA0: `https://x.com/MandroDesign`,
                                          rsuSWE2Wj: ` Arun Kumar`,
                                          width: `100%`,
                                          zJ7dVXMEI: `During Prerna's stint with Byjus. we got to work on some innovative solutions together. and she excelled on her role showcasing good commitment and dedication on projects.`,
                                        }),
                                      }),
                                    }),
                                  ],
                                  speed: 60,
                                  style: { height: `100%`, width: `100%` },
                                  width: `100%`,
                                }),
                              }),
                            }),
                          ],
                        }),
                        j() &&
                          g(`div`, {
                            className: `framer-19l5wnw hidden-72rtr7 hidden-1nc64nb`,
                            "data-framer-name": `Content`,
                            children: [
                              u(`div`, {
                                className: `framer-1gjwy52`,
                                "data-framer-name": `Tag/Title`,
                                children: u(`div`, {
                                  className: `framer-iqojwl`,
                                  "data-framer-name": `Tag/Title`,
                                  children: u(N, {
                                    height: 40,
                                    children: u(P, {
                                      className: `framer-st6c75-container`,
                                      nodeId: `R3DQRQMDm`,
                                      scopeId: `augiA20Il`,
                                      children: u(K_, {
                                        aZ7GvMqIl: `UserCircleCheck`,
                                        height: `100%`,
                                        id: `R3DQRQMDm`,
                                        KS7KLFqN8: `Achivements`,
                                        layoutId: `R3DQRQMDm`,
                                        rQKAY6456: `NEW`,
                                        variant: `YhpbrGmRY`,
                                        width: `100%`,
                                        xAPRy8bad: 0,
                                      }),
                                    }),
                                  }),
                                }),
                              }),
                              u(`div`, {
                                className: `framer-b63goh`,
                                "data-framer-name": `Body Text`,
                                children: u(R, {
                                  __fromCanvasComponent: !0,
                                  children: u(y, {
                                    children: u(`p`, {
                                      style: {
                                        "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                        "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                        "--framer-font-size": `12px`,
                                        "--framer-letter-spacing": `-0.2px`,
                                        "--framer-line-height": `26px`,
                                        "--framer-text-alignment": `center`,
                                        "--framer-text-color": `rgba(255, 255, 255, 0.6)`,
                                      },
                                      children: `What my collegues have to say about me.`,
                                    }),
                                  }),
                                  className: `framer-16u2py6`,
                                  "data-framer-name": `Text`,
                                  fonts: [`GF;DM Sans-regular`],
                                  verticalAlignment: `top`,
                                  withExternalLayout: !0,
                                }),
                              }),
                              g(Hv, {
                                animate: gy,
                                className: `framer-v4ftl6`,
                                "data-framer-appear-id": `v4ftl6`,
                                "data-framer-name": `Buttons`,
                                initial: ly,
                                optimized: !0,
                                children: [
                                  u(N, {
                                    height: 46,
                                    children: u(P, {
                                      className: `framer-d4gk3j-container`,
                                      nodeId: `frjwnpgTC`,
                                      scopeId: `augiA20Il`,
                                      children: u(we, {
                                        AL_NU982V: !1,
                                        dlVBgpKLv: `Download Resume`,
                                        GT109pdEG: `https://drive.google.com/file/d/1KHwP0XSQUVmKylPK-4xFJQbwG74fCvjx/view?usp=sharing`,
                                        height: `100%`,
                                        id: `frjwnpgTC`,
                                        layoutId: `frjwnpgTC`,
                                        SD1BGlGhK: !1,
                                        variant: `NLGbl8fkw`,
                                        width: `100%`,
                                      }),
                                    }),
                                  }),
                                  u(N, {
                                    height: 46,
                                    children: u(P, {
                                      className: `framer-1xxfnum-container`,
                                      nodeId: `sLe3an8Xb`,
                                      scopeId: `augiA20Il`,
                                      children: u(we, {
                                        AL_NU982V: !1,
                                        dlVBgpKLv: `Get in touch `,
                                        GT109pdEG: `https://www.linkedin.com/in/prernakohli4/`,
                                        height: `100%`,
                                        id: `sLe3an8Xb`,
                                        layoutId: `sLe3an8Xb`,
                                        SD1BGlGhK: !1,
                                        variant: `u0eJOWaxZ`,
                                        width: `100%`,
                                      }),
                                    }),
                                  }),
                                ],
                              }),
                            ],
                          }),
                      ],
                    }),
                  }),
                  g(`div`, {
                    className: `framer-798q8m`,
                    "data-framer-name": `Contact Me`,
                    id: xe,
                    ref: Ce,
                    children: [
                      u(`div`, {
                        className: `framer-54d0ph`,
                        "data-framer-name": `Top`,
                        children: g(`div`, {
                          className: `framer-1jsxo78`,
                          "data-framer-name": `Tag/Title`,
                          children: [
                            g(`div`, {
                              className: `framer-1tmk44j`,
                              "data-framer-name": `Title`,
                              children: [
                                u(L, {
                                  breakpoint: b,
                                  overrides: {
                                    YDU0n2zno: {
                                      children: u(y, {
                                        children: u(`h2`, {
                                          style: {
                                            "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                            "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                            "--framer-font-size": `32px`,
                                            "--framer-letter-spacing": `-1.9px`,
                                            "--framer-line-height": `50px`,
                                            "--framer-text-alignment": `center`,
                                            "--framer-text-color": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                                          },
                                          children: `Here what you`,
                                        }),
                                      }),
                                    },
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(`h2`, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-font-size": `54px`,
                                          "--framer-letter-spacing": `-1.9px`,
                                          "--framer-line-height": `50px`,
                                          "--framer-text-alignment": `center`,
                                          "--framer-text-color": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                                        },
                                        children: `Here what you`,
                                      }),
                                    }),
                                    className: `framer-16ngrb6`,
                                    "data-framer-name": `Text 1`,
                                    effect: Ey,
                                    fonts: [`GF;DM Sans-regular`],
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                                u(L, {
                                  breakpoint: b,
                                  overrides: {
                                    YDU0n2zno: {
                                      children: u(y, {
                                        children: u(`h2`, {
                                          style: {
                                            "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                            "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                            "--framer-font-size": `32px`,
                                            "--framer-letter-spacing": `-1.9px`,
                                            "--framer-line-height": `50px`,
                                            "--framer-text-alignment": `center`,
                                            "--framer-text-color": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                          },
                                          children: `should know about me`,
                                        }),
                                      }),
                                    },
                                  },
                                  children: u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: u(`h2`, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-font-size": `54px`,
                                          "--framer-letter-spacing": `-1.9px`,
                                          "--framer-line-height": `50px`,
                                          "--framer-text-alignment": `center`,
                                          "--framer-text-color": `var(--token-8f8054d9-8a09-4e7e-b957-8a76557c5e75, rgba(255, 255, 255, 0.6))`,
                                        },
                                        children: `should know about me`,
                                      }),
                                    }),
                                    className: `framer-t3ckbj`,
                                    "data-framer-name": `Text 2`,
                                    effect: Dy,
                                    fonts: [`GF;DM Sans-regular`],
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                }),
                              ],
                            }),
                            u(L, {
                              breakpoint: b,
                              overrides: {
                                Oc18Q6NWV: {
                                  y:
                                    (c?.y || 0) +
                                    0 +
                                    4053 +
                                    100 +
                                    0 +
                                    0 +
                                    0 +
                                    0 +
                                    134,
                                },
                                YDU0n2zno: { y: void 0 },
                              },
                              children: u(N, {
                                height: 40,
                                y:
                                  (c?.y || 0) +
                                  0 +
                                  4118 +
                                  100 +
                                  0 +
                                  0 +
                                  0 +
                                  0 +
                                  134,
                                children: u(P, {
                                  className: `framer-tgu6r-container`,
                                  nodeId: `r_A3ZHM4s`,
                                  scopeId: `augiA20Il`,
                                  children: u(K_, {
                                    aZ7GvMqIl: `Atom`,
                                    height: `100%`,
                                    id: `r_A3ZHM4s`,
                                    KS7KLFqN8: `I'm not just Designer `,
                                    layoutId: `r_A3ZHM4s`,
                                    rQKAY6456: `NEW`,
                                    variant: `YhpbrGmRY`,
                                    width: `100%`,
                                    xAPRy8bad: 0,
                                  }),
                                }),
                              }),
                            }),
                          ],
                        }),
                      }),
                      j() &&
                        u(N, {
                          children: u(P, {
                            className: `framer-vmim1i-container hidden-72rtr7 hidden-1nc64nb`,
                            isAuthoredByUser: !0,
                            isModuleExternal: !0,
                            nodeId: `lh4lelHHM`,
                            scopeId: `augiA20Il`,
                            children: u(It, {
                              alignment: `center`,
                              direction: `left`,
                              fadeOptions: {
                                fadeAlpha: 0,
                                fadeContent: !0,
                                fadeInset: 0,
                                fadeWidth: 25,
                                overflow: !1,
                              },
                              gap: 10,
                              height: `100%`,
                              hoverFactor: 1,
                              id: `lh4lelHHM`,
                              layoutId: `lh4lelHHM`,
                              padding: 10,
                              paddingBottom: 10,
                              paddingLeft: 10,
                              paddingPerSide: !1,
                              paddingRight: 10,
                              paddingTop: 10,
                              sizingOptions: { heightType: !0, widthType: !0 },
                              slots: [
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-r7f9wx-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `nCSELC9g8`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `nCSELC9g8`,
                                      layoutId: `nCSELC9g8`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 1099,
                                          pixelWidth: 1024,
                                          src: `https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?width=1024&height=1099`,
                                          srcSet: `https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?scale-down-to=1024&width=1024&height=1099 954w,https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?width=1024&height=1099 1024w`,
                                        },
                                        `Bag`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-lji8ao-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `o8S_XpshZ`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `o8S_XpshZ`,
                                      layoutId: `o8S_XpshZ`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 945,
                                          pixelWidth: 947,
                                          src: `https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?width=947&height=945`,
                                          srcSet: `https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?scale-down-to=512&width=947&height=945 512w,https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?width=947&height=945 947w`,
                                        },
                                        `Car`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-15dqsjb-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `QwMO4hhkJ`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `QwMO4hhkJ`,
                                      layoutId: `QwMO4hhkJ`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 2297,
                                          pixelWidth: 1973,
                                          src: `https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?width=1973&height=2297`,
                                          srcSet: `https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?scale-down-to=1024&width=1973&height=2297 879w,https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?scale-down-to=2048&width=1973&height=2297 1759w,https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?width=1973&height=2297 1973w`,
                                        },
                                        `Bottle`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-1kwm8ln-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `SB2lG2es8`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `SB2lG2es8`,
                                      layoutId: `SB2lG2es8`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 1241,
                                          pixelWidth: 1050,
                                          src: `https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?width=1050&height=1241`,
                                          srcSet: `https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?scale-down-to=1024&width=1050&height=1241 866w,https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?width=1050&height=1241 1050w`,
                                        },
                                        `Ball`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-128re8f-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `VWFFgeCAR`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `VWFFgeCAR`,
                                      layoutId: `VWFFgeCAR`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 1086,
                                          pixelWidth: 1086,
                                          src: `https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?width=1086&height=1086`,
                                          srcSet: `https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?scale-down-to=512&width=1086&height=1086 512w,https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?scale-down-to=1024&width=1086&height=1086 1024w,https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?width=1086&height=1086 1086w`,
                                        },
                                        `Man`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-t07jbq-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `L8T8CdEvI`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `L8T8CdEvI`,
                                      layoutId: `L8T8CdEvI`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 2556,
                                          pixelWidth: 1179,
                                          src: `https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?width=1179&height=2556`,
                                          srcSet: `https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?scale-down-to=2048&width=1179&height=2556 944w,https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?width=1179&height=2556 1179w`,
                                        },
                                        `Woman`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                                u(N, {
                                  height: 184,
                                  width: `184px`,
                                  children: u(P, {
                                    className: `framer-1giz7ki-container`,
                                    inComponentSlot: !0,
                                    isModuleExternal: !0,
                                    nodeId: `zMefFivHz`,
                                    rendersWithMotion: !0,
                                    scopeId: `augiA20Il`,
                                    children: u(nn, {
                                      height: `100%`,
                                      id: `zMefFivHz`,
                                      layoutId: `zMefFivHz`,
                                      Or6fUaHBj: Ty(
                                        {
                                          pixelHeight: 1536,
                                          pixelWidth: 1024,
                                          src: `https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?width=1024&height=1536`,
                                          srcSet: `https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?scale-down-to=1024&width=1024&height=1536 682w,https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?width=1024&height=1536 1024w`,
                                        },
                                        `Bottles`
                                      ),
                                      style: { height: `100%`, width: `100%` },
                                      width: `100%`,
                                    }),
                                  }),
                                }),
                              ],
                              speed: 100,
                              style: { height: `100%`, width: `100%` },
                              width: `100%`,
                            }),
                          }),
                        }),
                      g(`div`, {
                        className: `framer-11mlbnu`,
                        "data-framer-name": `Bottom`,
                        children: [
                          fe() &&
                            u(`div`, {
                              className: `framer-1jpxe6c hidden-1pn6j55`,
                              "data-framer-name": `Top`,
                              children: g(`div`, {
                                className: `framer-tlfts5`,
                                "data-framer-name": `Image Container`,
                                children: [
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          184 -
                                          152,
                                      },
                                    },
                                    children: u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        184 -
                                        168,
                                      children: u(P, {
                                        className: `framer-2gonrp-container`,
                                        isModuleExternal: !0,
                                        nodeId: `xvqZ1tyQe`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: -7 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `xvqZ1tyQe`,
                                          layoutId: `xvqZ1tyQe`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 1099,
                                              pixelWidth: 1024,
                                              src: `https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?width=1024&height=1099`,
                                              srcSet: `https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?scale-down-to=1024&width=1024&height=1099 954w,https://framerusercontent.com/images/w2Yr62xvWoF2s2VKwKLqFVddbPg.jpg?width=1024&height=1099 1024w`,
                                            },
                                            `Bag`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          -1,
                                      },
                                    },
                                    children: u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        -13,
                                      children: u(P, {
                                        className: `framer-1qo2eb7-container`,
                                        isModuleExternal: !0,
                                        nodeId: `Rme4yGBF1`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: -8 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `Rme4yGBF1`,
                                          layoutId: `Rme4yGBF1`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 945,
                                              pixelWidth: 947,
                                              src: `https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?width=947&height=945`,
                                              srcSet: `https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?scale-down-to=512&width=947&height=945 512w,https://framerusercontent.com/images/0Rpv1S1JREjr70yBaUsECTFAwtI.jpg?width=947&height=945 947w`,
                                            },
                                            `Car`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                  K() &&
                                    u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0,
                                      children: u(P, {
                                        className: `framer-yc2dea-container hidden-1nc64nb`,
                                        isModuleExternal: !0,
                                        nodeId: `af9pkt0mn`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: -5 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `af9pkt0mn`,
                                          layoutId: `af9pkt0mn`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 2297,
                                              pixelWidth: 1973,
                                              src: `https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?width=1973&height=2297`,
                                              srcSet: `https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?scale-down-to=1024&width=1973&height=2297 879w,https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?scale-down-to=2048&width=1973&height=2297 1759w,https://framerusercontent.com/images/ondTyGYapW6njkUtAjXkfITXkk.jpg?width=1973&height=2297 1973w`,
                                            },
                                            `Bottle`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          0,
                                      },
                                    },
                                    children: u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0,
                                      children: u(P, {
                                        className: `framer-h9v04p-container`,
                                        isModuleExternal: !0,
                                        nodeId: `Au_d9mh70`,
                                        scopeId: `augiA20Il`,
                                        children: u(L, {
                                          breakpoint: b,
                                          overrides: {
                                            Oc18Q6NWV: {
                                              Or6fUaHBj: Ty(
                                                {
                                                  pixelHeight: 1082,
                                                  pixelWidth: 1080,
                                                  src: `https://framerusercontent.com/images/OhsJ4ezenUW4ER6mYmLaThpA.jpg?width=1080&height=1082`,
                                                  srcSet: `https://framerusercontent.com/images/OhsJ4ezenUW4ER6mYmLaThpA.jpg?scale-down-to=1024&width=1080&height=1082 1022w,https://framerusercontent.com/images/OhsJ4ezenUW4ER6mYmLaThpA.jpg?width=1080&height=1082 1080w`,
                                                },
                                                `Ball`
                                              ),
                                            },
                                          },
                                          children: u(nn, {
                                            height: `100%`,
                                            id: `Au_d9mh70`,
                                            layoutId: `Au_d9mh70`,
                                            Or6fUaHBj: Ty(
                                              {
                                                pixelHeight: 1241,
                                                pixelWidth: 1050,
                                                src: `https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?width=1050&height=1241`,
                                                srcSet: `https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?scale-down-to=1024&width=1050&height=1241 866w,https://framerusercontent.com/images/kTlutHAdKXZ6JISQQRHH3ab9t5M.jpg?width=1050&height=1241 1050w`,
                                              },
                                              `Ball`
                                            ),
                                            style: {
                                              height: `100%`,
                                              width: `100%`,
                                            },
                                            width: `100%`,
                                          }),
                                        }),
                                      }),
                                    }),
                                  }),
                                  K() &&
                                    u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        0,
                                      children: u(P, {
                                        className: `framer-3i4j5r-container hidden-1nc64nb`,
                                        isModuleExternal: !0,
                                        nodeId: `lCx82vTCu`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: 6 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `lCx82vTCu`,
                                          layoutId: `lCx82vTCu`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 1086,
                                              pixelWidth: 1086,
                                              src: `https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?width=1086&height=1086`,
                                              srcSet: `https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?scale-down-to=512&width=1086&height=1086 512w,https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?scale-down-to=1024&width=1086&height=1086 1024w,https://framerusercontent.com/images/1I4xLRYc7MgLb258LLw7xFcM8pM.jpg?width=1086&height=1086 1086w`,
                                            },
                                            `Man`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          184 -
                                          185,
                                      },
                                    },
                                    children: u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        184 -
                                        177,
                                      children: u(P, {
                                        className: `framer-4w8038-container`,
                                        isModuleExternal: !0,
                                        nodeId: `KGI9oP82k`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: 7 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `KGI9oP82k`,
                                          layoutId: `KGI9oP82k`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 2556,
                                              pixelWidth: 1179,
                                              src: `https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?width=1179&height=2556`,
                                              srcSet: `https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?scale-down-to=2048&width=1179&height=2556 944w,https://framerusercontent.com/images/5zigXIxzBhdez9Imck1u9Cka9us.png?width=1179&height=2556 1179w`,
                                            },
                                            `Woman`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          32,
                                      },
                                    },
                                    children: u(N, {
                                      height: 184,
                                      width: `184px`,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        8,
                                      children: u(P, {
                                        className: `framer-1pz3f5c-container`,
                                        isModuleExternal: !0,
                                        nodeId: `AQcFJ1nwE`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: 14 },
                                        children: u(nn, {
                                          height: `100%`,
                                          id: `AQcFJ1nwE`,
                                          layoutId: `AQcFJ1nwE`,
                                          Or6fUaHBj: Ty(
                                            {
                                              pixelHeight: 1536,
                                              pixelWidth: 1024,
                                              src: `https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?width=1024&height=1536`,
                                              srcSet: `https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?scale-down-to=1024&width=1024&height=1536 682w,https://framerusercontent.com/images/nQwxlqARqr1zL0Er8WgBpWpMAU.png?width=1024&height=1536 1024w`,
                                            },
                                            `Bottles`
                                          ),
                                          style: {
                                            height: `100%`,
                                            width: `100%`,
                                          },
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          -61.5454,
                                      },
                                    },
                                    children: u(N, {
                                      height: 38,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        -61.5454,
                                      children: u(P, {
                                        className: `framer-1t2dwyv-container`,
                                        isModuleExternal: !0,
                                        nodeId: `dqpdO2rrn`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: 14 },
                                        children: u(Ke, {
                                          eLJBf2lXN: `Things I love`,
                                          height: `100%`,
                                          id: `dqpdO2rrn`,
                                          layoutId: `dqpdO2rrn`,
                                          ttssQUkSZ: `var(--token-f951c3a8-aa43-4825-aa75-915aa92c20d1, rgb(79, 26, 214))`,
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                  u(L, {
                                    breakpoint: b,
                                    overrides: {
                                      Oc18Q6NWV: {
                                        y:
                                          (c?.y || 0) +
                                          0 +
                                          4053 +
                                          100 +
                                          288 +
                                          0 +
                                          0 +
                                          0 +
                                          0 +
                                          -68.9701,
                                      },
                                    },
                                    children: u(N, {
                                      height: 38,
                                      y:
                                        (c?.y || 0) +
                                        0 +
                                        4118 +
                                        100 +
                                        288 +
                                        0 +
                                        0 +
                                        0 +
                                        0 +
                                        -68.9701,
                                      children: u(P, {
                                        className: `framer-1swky20-container`,
                                        isModuleExternal: !0,
                                        nodeId: `tBRsgfkP6`,
                                        rendersWithMotion: !0,
                                        scopeId: `augiA20Il`,
                                        style: { rotate: -8 },
                                        children: u(Ke, {
                                          eLJBf2lXN: `Hey, It's me!`,
                                          height: `100%`,
                                          id: `tBRsgfkP6`,
                                          layoutId: `tBRsgfkP6`,
                                          ttssQUkSZ: `var(--token-d58f3fbe-fbb7-46f2-92ee-151c3ea2be36, rgb(0, 128, 255))`,
                                          width: `100%`,
                                        }),
                                      }),
                                    }),
                                  }),
                                ],
                              }),
                            }),
                          u(`div`, {
                            className: `framer-53i6k0`,
                            "data-framer-name": `Bottom`,
                            children: u(`div`, {
                              className: `framer-f5a4yz`,
                              "data-framer-name": `Line`,
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  u(`footer`, {
                    className: `framer-1uq1w8j`,
                    "data-framer-name": `Footer`,
                    children: g(`div`, {
                      className: `framer-10ayzux`,
                      children: [
                        u(R, {
                          __fromCanvasComponent: !0,
                          children: u(y, {
                            children: u(`p`, {
                              className: `framer-styles-preset-uq0oqh`,
                              "data-styles-preset": `QCtzoRG1E`,
                              style: {
                                "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                              },
                              children: `MV`,
                            }),
                          }),
                          className: `framer-1f0lz3i`,
                          fonts: [`Inter`],
                          verticalAlignment: `top`,
                          withExternalLayout: !0,
                        }),
                        g(`div`, {
                          className: `framer-1u2prvw`,
                          children: [
                            u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                    "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                    "--framer-font-size": `14px`,
                                    "--framer-font-weight": `500`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                                  },
                                  children: u(I, {
                                    href: `https://www.linkedin.com/in/prernakohli4/`,
                                    motionChild: !0,
                                    nodeId: `po7m6E2QM`,
                                    openInNewTab: !0,
                                    relValues: [],
                                    scopeId: `augiA20Il`,
                                    smoothScroll: !1,
                                    children: u(D.a, {
                                      className: `framer-styles-preset-68ruwb`,
                                      "data-styles-preset": `DOWnf2wWb`,
                                      children: `LinkedIN`,
                                    }),
                                  }),
                                }),
                              }),
                              className: `framer-sr11ea`,
                              fonts: [`FS;Satoshi-medium`],
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                            }),
                            u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                    "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                    "--framer-font-size": `14px`,
                                    "--framer-font-weight": `500`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                                  },
                                  children: u(I, {
                                    href: `https://www.instagram.com/the_designage?igsh=MTFpeTZlenI2b3Z2cg%3D%3D&utm_source=qr`,
                                    motionChild: !0,
                                    nodeId: `UxxhGcgdE`,
                                    openInNewTab: !0,
                                    relValues: [],
                                    scopeId: `augiA20Il`,
                                    smoothScroll: !1,
                                    children: u(D.a, {
                                      className: `framer-styles-preset-68ruwb`,
                                      "data-styles-preset": `DOWnf2wWb`,
                                      children: `Instagram`,
                                    }),
                                  }),
                                }),
                              }),
                              className: `framer-1is15v9`,
                              fonts: [`FS;Satoshi-medium`],
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                            }),
                            u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                    "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                    "--framer-font-size": `14px`,
                                    "--framer-font-weight": `500`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                                  },
                                  children: u(I, {
                                    href: `https://www.behance.net/prernakohli`,
                                    motionChild: !0,
                                    nodeId: `jXbJqCftA`,
                                    openInNewTab: !0,
                                    relValues: [],
                                    scopeId: `augiA20Il`,
                                    smoothScroll: !1,
                                    children: u(D.a, {
                                      className: `framer-styles-preset-68ruwb`,
                                      "data-styles-preset": `DOWnf2wWb`,
                                      children: `Bēhance`,
                                    }),
                                  }),
                                }),
                              }),
                              className: `framer-1i1w11r`,
                              fonts: [`FS;Satoshi-medium`],
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                            }),
                            u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                    "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                    "--framer-font-size": `14px`,
                                    "--framer-font-weight": `500`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                                  },
                                  children: u(I, {
                                    href: `https://medium.com/@prernkohli`,
                                    motionChild: !0,
                                    nodeId: `jPEvtGOdQ`,
                                    openInNewTab: !0,
                                    relValues: [],
                                    scopeId: `augiA20Il`,
                                    smoothScroll: !1,
                                    children: u(D.a, {
                                      className: `framer-styles-preset-68ruwb`,
                                      "data-styles-preset": `DOWnf2wWb`,
                                      children: `Medium`,
                                    }),
                                  }),
                                }),
                              }),
                              className: `framer-msyeuy`,
                              fonts: [`FS;Satoshi-medium`],
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                            }),
                            u(R, {
                              __fromCanvasComponent: !0,
                              children: u(y, {
                                children: u(`p`, {
                                  style: {
                                    "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                    "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                    "--framer-font-size": `14px`,
                                    "--framer-font-weight": `500`,
                                    "--framer-letter-spacing": `-0.2px`,
                                    "--framer-text-color": `var(--token-4ca7d748-6404-4dbd-82d7-1148c1e14e26, rgb(191, 191, 191))`,
                                  },
                                  children: u(I, {
                                    href: `https://drive.google.com/file/d/1wNW-86t7OfUGNyCZGHhlMTCO9PbhuFuI/view?usp=sharing`,
                                    motionChild: !0,
                                    nodeId: `OTjKkqkhM`,
                                    openInNewTab: !0,
                                    relValues: [],
                                    scopeId: `augiA20Il`,
                                    smoothScroll: !1,
                                    children: u(D.a, {
                                      className: `framer-styles-preset-68ruwb`,
                                      "data-styles-preset": `DOWnf2wWb`,
                                      children: `Resume`,
                                    }),
                                  }),
                                }),
                              }),
                              className: `framer-80rvna`,
                              fonts: [`FS;Satoshi-medium`],
                              verticalAlignment: `top`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                  fe() &&
                    u(`nav`, {
                      className: `framer-1a039k8 hidden-1pn6j55`,
                      "data-framer-name": `Nav`,
                      children: u(L, {
                        breakpoint: b,
                        overrides: { Oc18Q6NWV: { y: 888 } },
                        children: u(N, {
                          height: 56,
                          y: 920,
                          children: u(P, {
                            className: `framer-10o9wam-container`,
                            "data-framer-name": `Menu`,
                            name: `Menu`,
                            nodeId: `fNWtGJvhgaWpX7oBBh`,
                            rendersWithMotion: !0,
                            scopeId: `augiA20Il`,
                            children: u(L, {
                              breakpoint: b,
                              overrides: {
                                Oc18Q6NWV: { __framer__threshold: 0 },
                              },
                              children: u(ny, {
                                __framer__animateOnce: !1,
                                __framer__targets: [
                                  { ref: T, target: `w7_KsIE4l` },
                                  { offset: 20, ref: F, target: `vzbITQZDo` },
                                  { offset: 100, ref: ve, target: `SNOcQ2Br0` },
                                  { ref: be, target: `WhVkMPwK_` },
                                  { ref: Ce, target: `t1M1K4a3d` },
                                ],
                                __framer__threshold: 0.5,
                                __framer__variantAppearEffectEnabled: !0,
                                height: `100%`,
                                id: `fNWtGJvhgaWpX7oBBh`,
                                layoutId: `fNWtGJvhgaWpX7oBBh`,
                                name: `Menu`,
                                QWGJiDAUZ: `inset 0px 0.75px 1px 0px rgba(255, 255, 255, 0.24), inset 0px -2px 8px 0px rgba(0, 0, 0, 0.6), 0px 4px 12px 0px rgb(0, 0, 0)`,
                                te85aoxcB: 8,
                                variant: `w7_KsIE4l`,
                                width: `100%`,
                              }),
                            }),
                          }),
                        }),
                      }),
                    }),
                  j() &&
                    u(`nav`, {
                      className: `framer-1b0lgr5 hidden-72rtr7 hidden-1nc64nb`,
                      "data-framer-name": `Nav`,
                      children: u(L, {
                        breakpoint: b,
                        overrides: { YDU0n2zno: { y: 888 } },
                        children: u(N, {
                          height: 56,
                          children: u(P, {
                            className: `framer-1qm9zc8-container`,
                            "data-framer-name": `Menu`,
                            name: `Menu`,
                            nodeId: `bHCjLaZBX`,
                            rendersWithMotion: !0,
                            scopeId: `augiA20Il`,
                            children: u(ny, {
                              __framer__animateOnce: !1,
                              __framer__targets: [
                                { ref: T, target: `XAmoYLJ8t` },
                                { offset: 20, ref: F, target: `fwNbOrS2N` },
                                { offset: 100, ref: ve, target: `QU6brcsLn` },
                                { ref: be, target: `rCL9u7Zxj` },
                                { ref: Ce, target: `CZPwlZ5d0` },
                              ],
                              __framer__threshold: 0.5,
                              __framer__variantAppearEffectEnabled: !0,
                              height: `100%`,
                              id: `bHCjLaZBX`,
                              layoutId: `bHCjLaZBX`,
                              name: `Menu`,
                              QWGJiDAUZ: `inset 0px 0.75px 1px 0px rgba(255, 255, 255, 0.24), inset 0px -2px 8px 0px rgba(0, 0, 0, 0.6), 0px 4px 12px 0px rgb(0, 0, 0)`,
                              te85aoxcB: 8,
                              variant: `XAmoYLJ8t`,
                              width: `100%`,
                            }),
                          }),
                        }),
                      }),
                    }),
                  j() &&
                    u(Jv, {
                      __framer__animate: { transition: ky },
                      __framer__animateOnce: !1,
                      __framer__enter: Oy,
                      __framer__styleAppearEffectEnabled: !0,
                      __framer__threshold: 0.5,
                      __perspectiveFX: !1,
                      __targetOpacity: 1,
                      className: `framer-v8wvxm hidden-72rtr7 hidden-1nc64nb`,
                      "data-framer-name": `About Me`,
                      id: Te,
                      ref: Ee,
                      children: g(`div`, {
                        className: `framer-w2hvj6`,
                        "data-border": !0,
                        "data-framer-name": `Case #1`,
                        children: [
                          u(`div`, { className: `framer-h5h35y` }),
                          g(`div`, {
                            className: `framer-8oghqd`,
                            "data-framer-name": `Card Content`,
                            children: [
                              g(`div`, {
                                className: `framer-185xfu4`,
                                children: [
                                  g(`div`, {
                                    className: `framer-1ywbped`,
                                    children: [
                                      u(N, {
                                        height: 40,
                                        children: u(P, {
                                          className: `framer-1gyuk5z-container`,
                                          nodeId: `WhxMATRdr`,
                                          scopeId: `augiA20Il`,
                                          children: u(K_, {
                                            aZ7GvMqIl: `FingerprintSimple`,
                                            height: `100%`,
                                            id: `WhxMATRdr`,
                                            KS7KLFqN8: `About Me`,
                                            layoutId: `WhxMATRdr`,
                                            rQKAY6456: `NEW`,
                                            variant: `YhpbrGmRY`,
                                            width: `100%`,
                                            xAPRy8bad: 0,
                                          }),
                                        }),
                                      }),
                                      u(te, {
                                        background: {
                                          alt: ``,
                                          fit: `fill`,
                                          intrinsicHeight: 381,
                                          intrinsicWidth: 360,
                                          pixelHeight: 800,
                                          pixelWidth: 722,
                                          sizes: `86px`,
                                          src: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?scale-down-to=512&width=722&height=800`,
                                          srcSet: `https://framerusercontent.com/images/Je3Qwha46YzeuwMYoEIg6ttad0.png?width=722&height=800 722w`,
                                        },
                                        className: `framer-13as3wm`,
                                        "data-framer-name": `Screenshot 2025-06-30 at 11.15.57â¯PM-Photoroom`,
                                      }),
                                    ],
                                  }),
                                  u(R, {
                                    __fromCanvasComponent: !0,
                                    children: u(y, {
                                      children: g(`h2`, {
                                        style: {
                                          "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                          "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                          "--framer-font-size": `12px`,
                                          "--framer-letter-spacing": `0.1px`,
                                          "--framer-line-height": `28px`,
                                          "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                        },
                                        children: [
                                          `I’m a passionate Product Designer with over `,
                                          u(`span`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                              "--framer-font-family": `"DM Sans", sans-serif`,
                                              "--framer-font-weight": `900`,
                                              "--framer-text-color": `rgb(255, 255, 255)`,
                                            },
                                            children: `6 years`,
                                          }),
                                          ` of industry experience, specializing in `,
                                          u(`span`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                              "--framer-font-family": `"DM Sans", sans-serif`,
                                              "--framer-font-weight": `900`,
                                              "--framer-text-color": `rgb(255, 255, 255)`,
                                            },
                                            children: `UX/UI Design and Design Thinking`,
                                          }),
                                          `. My expertise spans `,
                                          u(`span`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                              "--framer-font-family": `"DM Sans", sans-serif`,
                                              "--framer-font-weight": `900`,
                                              "--framer-text-color": `rgb(255, 255, 255)`,
                                            },
                                            children: `strategy, business, and user-centered design`,
                                          }),
                                          `—enabling me to craft solutions that are not only `,
                                          u(`span`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                              "--framer-font-family": `"DM Sans", sans-serif`,
                                              "--framer-font-weight": `900`,
                                              "--framer-text-color": `rgb(255, 255, 255)`,
                                            },
                                            children: `visually appealing`,
                                          }),
                                          ` but also `,
                                          u(`span`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy05MDA=`,
                                              "--framer-font-family": `"DM Sans", sans-serif`,
                                              "--framer-font-weight": `900`,
                                              "--framer-text-color": `rgb(255, 255, 255)`,
                                            },
                                            children: `practical and scalable`,
                                          }),
                                          `. `,
                                        ],
                                      }),
                                    }),
                                    className: `framer-ix7vm0`,
                                    "data-framer-name": `Text 1`,
                                    effect: Sy,
                                    fonts: [
                                      `GF;DM Sans-regular`,
                                      `GF;DM Sans-900`,
                                    ],
                                    verticalAlignment: `top`,
                                    withExternalLayout: !0,
                                  }),
                                ],
                              }),
                              g(`div`, {
                                className: `framer-2eod1f`,
                                children: [
                                  u(`div`, {
                                    className: `framer-1ld3hyh`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `Salesforce`,
                                        }),
                                      }),
                                      className: `framer-vzy08p`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-1901631`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `ReactJS`,
                                        }),
                                      }),
                                      className: `framer-1o8i9x`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-11dbc0o`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `ReactNative`,
                                        }),
                                      }),
                                      className: `framer-1wt0cgf`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-wqojqs`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `Django`,
                                        }),
                                      }),
                                      className: `framer-1o3nlvw`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-ngjgfq`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `MongoDB`,
                                        }),
                                      }),
                                      className: `framer-1r7vipd`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-10hmn1s`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `MySQL`,
                                        }),
                                      }),
                                      className: `framer-j1qlf7`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-yh3vnt`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `Oracle 23ai`,
                                        }),
                                      }),
                                      className: `framer-x70i7f`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                  u(`div`, {
                                    className: `framer-1junq5a`,
                                    "data-border": !0,
                                    children: u(R, {
                                      __fromCanvasComponent: !0,
                                      children: u(y, {
                                        children: u(`p`, {
                                          style: {
                                            "--font-selector": `RlM7U2F0b3NoaS1tZWRpdW0=`,
                                            "--framer-font-family": `"Satoshi", "Satoshi Placeholder", sans-serif`,
                                            "--framer-font-size": `12px`,
                                            "--framer-font-weight": `500`,
                                            "--framer-letter-spacing": `-0.3px`,
                                            "--framer-line-height": `1.4em`,
                                            "--framer-text-color": `rgba(255, 255, 255, 0.66)`,
                                          },
                                          children: `FireBase`,
                                        }),
                                      }),
                                      className: `framer-8v0jo5`,
                                      fonts: [`FS;Satoshi-medium`],
                                      verticalAlignment: `top`,
                                      withExternalLayout: !0,
                                    }),
                                  }),
                                ],
                              }),
                              g(`div`, {
                                className: `framer-16cebss`,
                                children: [
                                  g(`div`, {
                                    className: `framer-1mc79iq`,
                                    children: [
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `Kongu Engineering College`,
                                          }),
                                        }),
                                        className: `framer-1kkkk7v`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `May 2023 - Present`,
                                          }),
                                        }),
                                        className: `framer-q106rq`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                    ],
                                  }),
                                  u(`div`, {
                                    className: `framer-jv8058`,
                                    "data-framer-name": `Seperator`,
                                  }),
                                  g(`div`, {
                                    className: `framer-1m7al0l`,
                                    children: [
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `Shree Ganga Higher Secondary School`,
                                          }),
                                        }),
                                        className: `framer-15cuzn6`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `July 2020 - May 2022`,
                                          }),
                                        }),
                                        className: `framer-n5glwn`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                    ],
                                  }),
                                  u(`div`, {
                                    className: `framer-w2ijbu`,
                                    "data-framer-name": `Seperator`,
                                  }),
                                  g(`div`, {
                                    className: `framer-10j2496`,
                                    children: [
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `Literacy Mission Matric Higher Secondary School`,
                                          }),
                                        }),
                                        className: `framer-filapd`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                      u(R, {
                                        __fromCanvasComponent: !0,
                                        children: u(y, {
                                          children: u(`h2`, {
                                            style: {
                                              "--font-selector": `R0Y7RE0gU2Fucy1yZWd1bGFy`,
                                              "--framer-font-family": `"DM Sans", "DM Sans Placeholder", sans-serif`,
                                              "--framer-font-size": `12px`,
                                              "--framer-letter-spacing": `0.1px`,
                                              "--framer-line-height": `18px`,
                                              "--framer-text-color": `rgba(255, 255, 255, 0.7)`,
                                            },
                                            children: `Upto May 2020`,
                                          }),
                                        }),
                                        className: `framer-1e8v43r`,
                                        "data-framer-name": `Text 1`,
                                        effect: Sy,
                                        fonts: [`GF;DM Sans-regular`],
                                        verticalAlignment: `top`,
                                        withExternalLayout: !0,
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    }),
                  j() &&
                    g(`button`, {
                      className: `framer-d30dk6 hidden-72rtr7 hidden-1nc64nb`,
                      "data-border": !0,
                      "data-framer-name": `Button/Primary Button`,
                      "data-reset": `button`,
                      children: [
                        u(R, {
                          __fromCanvasComponent: !0,
                          children: u(y, {
                            children: u(`p`, {
                              style: {
                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                "--framer-font-size": `12px`,
                                "--framer-font-weight": `500`,
                                "--framer-letter-spacing": `-0.5px`,
                                "--framer-line-height": `26px`,
                                "--framer-text-color": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                              },
                              children: `This is  mobile preview,  switch to desktop for best experience `,
                            }),
                          }),
                          className: `framer-8gcqit`,
                          "data-framer-name": `Text`,
                          fonts: [`GF;Geist-500`],
                          verticalAlignment: `top`,
                          withExternalLayout: !0,
                        }),
                        g(z, {
                          className: `framer-ewfxou`,
                          opacity: 1,
                          requiresOverflowVisible: !0,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 11.2 16" overflow="visible"><path d="M 4.484 5.622 L 0.962 2.093 C 0.488 1.612 0.492 0.838 0.972 0.363 C 1.199 0.132 1.509 0.002 1.833 0 C 2.156 -0.002 2.467 0.125 2.697 0.353 L 8.926 6.533 C 11.052 8.665 12.278 11.458 9.904 14.345 L 9.652 14.598 C 8.757 15.495 7.543 16 6.276 16 C 5.009 16 3.794 15.495 2.9 14.598 L 0.349 12.078 C -0.125 11.604 -0.115 10.824 0.371 10.337 C 0.831 9.875 1.555 9.842 2.032 10.245 M 4.484 5.622 L 6.492 7.633 M 4.484 5.622 C 4.009 5.147 3.212 5.158 2.724 5.647 C 2.235 6.137 2.224 6.918 2.697 7.393 L 3.28 7.977 M 3.28 7.977 L 4.707 9.406 M 3.28 7.977 C 2.806 7.501 2.046 7.524 1.558 8.013 C 1.07 8.501 1.058 9.283 1.532 9.758 L 2.032 10.245 M 2.032 10.245 L 2.936 11.125 M 2.032 10.245 C 2.059 10.267 2.084 10.29 2.108 10.315 M 5.708 3.341 C 5.843 2.112 7.299 0.837 9.116 1.71 C 9.289 1.793 9.426 1.95 9.428 2.142 C 9.43 2.451 9.295 2.833 8.86 3.086 C 8.237 3.448 7.219 4.83 8.579 6.194" fill="transparent" stroke="rgb(255, 255, 255)" stroke-linecap="round" stroke-linejoin="round" stroke-dasharray=""></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-slvk87`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 11.2 16" overflow="visible"><path d="M 4.484 5.622 L 0.962 2.093 C 0.488 1.612 0.492 0.838 0.972 0.363 C 1.199 0.132 1.509 0.002 1.833 0 C 2.156 -0.002 2.467 0.125 2.697 0.353 L 8.926 6.533 C 11.052 8.665 12.278 11.458 9.904 14.345 L 9.652 14.598 C 8.757 15.495 7.543 16 6.276 16 C 5.009 16 3.794 15.495 2.9 14.598 L 0.349 12.078 C -0.125 11.604 -0.115 10.824 0.371 10.337 C 0.831 9.875 1.555 9.842 2.032 10.245" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-10jb0zj`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.008 2.011" overflow="visible"><path d="M 0 0 L 2.008 2.011" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-x56trj`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.134 2.704" overflow="visible"><path d="M 2.134 0.349 C 1.66 -0.126 0.862 -0.115 0.374 0.374 C -0.115 0.864 -0.126 1.645 0.348 2.12 L 0.93 2.704" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-p0ynwy`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.427 1.43" overflow="visible"><path d="M 0 0 L 1.427 1.43" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-or0gqu`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.095 2.612" overflow="visible"><path d="M 2.095 0.344 C 1.622 -0.131 0.862 -0.109 0.374 0.38 C -0.114 0.869 -0.126 1.65 0.348 2.125 L 0.848 2.612" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-l6acut`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1 1" overflow="visible"><path d="M 0 0 L 0.904 0.88" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-hyplre`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1 1" overflow="visible"><path d="M 0 0 C 0.026 0.022 0.052 0.046 0.076 0.07" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-zdn5yu`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.72 4.772" overflow="visible"><path d="M 0 1.919 C 0.134 0.69 1.59 -0.585 3.408 0.288 C 3.581 0.371 3.718 0.528 3.72 0.72 C 3.722 1.029 3.586 1.411 3.151 1.664 C 2.529 2.026 1.51 3.408 2.87 4.772" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                      ],
                    }),
                  A() &&
                    g(`button`, {
                      className: `framer-wqwgem hidden-72rtr7 hidden-1pn6j55`,
                      "data-border": !0,
                      "data-framer-name": `Button/Primary Button`,
                      "data-reset": `button`,
                      children: [
                        u(R, {
                          __fromCanvasComponent: !0,
                          children: u(y, {
                            children: u(`p`, {
                              style: {
                                "--font-selector": `R0Y7R2Vpc3QtNTAw`,
                                "--framer-font-family": `"Geist", "Geist Placeholder", sans-serif`,
                                "--framer-font-size": `12px`,
                                "--framer-font-weight": `500`,
                                "--framer-letter-spacing": `-0.5px`,
                                "--framer-line-height": `26px`,
                                "--framer-text-color": `var(--token-59e77027-930e-45f7-94aa-a8ffadf9e382, rgb(255, 255, 255))`,
                              },
                              children: `This is tablet preview,  switch to desktop for best experience `,
                            }),
                          }),
                          className: `framer-q8ttth`,
                          "data-framer-name": `Text`,
                          fonts: [`GF;Geist-500`],
                          verticalAlignment: `top`,
                          withExternalLayout: !0,
                        }),
                        g(z, {
                          className: `framer-78u7l9`,
                          opacity: 1,
                          requiresOverflowVisible: !0,
                          svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 11.2 16" overflow="visible"><path d="M 4.484 5.622 L 0.962 2.093 C 0.488 1.612 0.492 0.838 0.972 0.363 C 1.199 0.132 1.509 0.002 1.833 0 C 2.156 -0.002 2.467 0.125 2.697 0.353 L 8.926 6.533 C 11.052 8.665 12.278 11.458 9.904 14.345 L 9.652 14.598 C 8.757 15.495 7.543 16 6.276 16 C 5.009 16 3.794 15.495 2.9 14.598 L 0.349 12.078 C -0.125 11.604 -0.115 10.824 0.371 10.337 C 0.831 9.875 1.555 9.842 2.032 10.245 M 4.484 5.622 L 6.492 7.633 M 4.484 5.622 C 4.009 5.147 3.212 5.158 2.724 5.647 C 2.235 6.137 2.224 6.918 2.697 7.393 L 3.28 7.977 M 3.28 7.977 L 4.707 9.406 M 3.28 7.977 C 2.806 7.501 2.046 7.524 1.558 8.013 C 1.07 8.501 1.058 9.283 1.532 9.758 L 2.032 10.245 M 2.032 10.245 L 2.936 11.125 M 2.032 10.245 C 2.059 10.267 2.084 10.29 2.108 10.315 M 5.708 3.341 C 5.843 2.112 7.299 0.837 9.116 1.71 C 9.289 1.793 9.426 1.95 9.428 2.142 C 9.43 2.451 9.295 2.833 8.86 3.086 C 8.237 3.448 7.219 4.83 8.579 6.194" fill="transparent" stroke="rgb(255, 255, 255)" stroke-linecap="round" stroke-linejoin="round" stroke-dasharray=""></path></svg>`,
                          withExternalLayout: !0,
                          children: [
                            u(z, {
                              className: `framer-xgfepv`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 11.2 16" overflow="visible"><path d="M 4.484 5.622 L 0.962 2.093 C 0.488 1.612 0.492 0.838 0.972 0.363 C 1.199 0.132 1.509 0.002 1.833 0 C 2.156 -0.002 2.467 0.125 2.697 0.353 L 8.926 6.533 C 11.052 8.665 12.278 11.458 9.904 14.345 L 9.652 14.598 C 8.757 15.495 7.543 16 6.276 16 C 5.009 16 3.794 15.495 2.9 14.598 L 0.349 12.078 C -0.125 11.604 -0.115 10.824 0.371 10.337 C 0.831 9.875 1.555 9.842 2.032 10.245" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-epdygg`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.008 2.011" overflow="visible"><path d="M 0 0 L 2.008 2.011" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-t90yed`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.134 2.704" overflow="visible"><path d="M 2.134 0.349 C 1.66 -0.126 0.862 -0.115 0.374 0.374 C -0.115 0.864 -0.126 1.645 0.348 2.12 L 0.93 2.704" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1jaw5la`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1.427 1.43" overflow="visible"><path d="M 0 0 L 1.427 1.43" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-8hnl9`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.095 2.612" overflow="visible"><path d="M 2.095 0.344 C 1.622 -0.131 0.862 -0.109 0.374 0.38 C -0.114 0.869 -0.126 1.65 0.348 2.125 L 0.848 2.612" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-oamzk7`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1 1" overflow="visible"><path d="M 0 0 L 0.904 0.88" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-1orhng2`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1 1" overflow="visible"><path d="M 0 0 C 0.026 0.022 0.052 0.046 0.076 0.07" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                            u(z, {
                              className: `framer-l45c1f`,
                              opacity: 1,
                              requiresOverflowVisible: !1,
                              svg: `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 3.72 4.772" overflow="visible"><path d="M 0 1.919 C 0.134 0.69 1.59 -0.585 3.408 0.288 C 3.581 0.371 3.718 0.528 3.72 0.72 C 3.722 1.029 3.586 1.411 3.151 1.664 C 2.529 2.026 1.51 3.408 2.87 4.772" fill="transparent"></path></svg>`,
                              withExternalLayout: !0,
                            }),
                          ],
                        }),
                      ],
                    }),
                ],
              }),
              u(`div`, { id: `overlay` }),
            ],
          }),
        })
      );
    })),
    (Fy = [
      `@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }`,
      `.framer-pOlB9.framer-lux5qc, .framer-pOlB9 .framer-lux5qc { display: block; }`,
      `.framer-pOlB9.framer-72rtr7 { align-content: center; align-items: center; background-color: #000000; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 0px 0px 40px 0px; position: relative; width: 1200px; }`,
      `.framer-pOlB9 .framer-1tq1nri { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-end; max-width: 116%; overflow: var(--overflow-clip-fallback, clip); padding: 24px 24px 0px 0px; position: relative; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-1szpd2c { height: 46px; position: relative; width: 98px; }`,
      `.framer-pOlB9 .framer-13uz815, .framer-pOlB9 .framer-1fjon6k, .framer-pOlB9 .framer-8wz2zk, .framer-pOlB9 .framer-175k5jf { height: 46px; left: 0px; position: absolute; top: 0px; width: 98px; }`,
      `.framer-pOlB9 .framer-1757az2 { height: 28px; left: 1px; position: absolute; top: 18px; width: 97px; }`,
      `.framer-pOlB9 .framer-1xm20x9 { height: 17px; left: 1px; position: absolute; top: 1px; width: 97px; }`,
      `.framer-pOlB9 .framer-1qhljh5 { height: 1px; left: 32px; position: absolute; top: 32px; width: 1px; }`,
      `.framer-pOlB9 .framer-xpfl6q { height: 7px; left: 7px; position: absolute; top: 29px; width: 9px; }`,
      `.framer-pOlB9 .framer-1h3o72g { height: 6px; left: 0px; position: absolute; top: 0px; width: 9px; }`,
      `.framer-pOlB9 .framer-1u9xh7p { height: 4px; left: 5px; position: absolute; top: 4px; width: 4px; }`,
      `.framer-pOlB9 .framer-q4jt8z { height: 10px; left: 16px; position: absolute; top: 24px; width: 24px; }`,
      `.framer-pOlB9 .framer-366mke { height: 10px; left: 0px; position: absolute; top: 0px; width: 24px; }`,
      `.framer-pOlB9 .framer-49hh7k { height: 2px; left: 19px; position: absolute; top: 1px; width: 1px; }`,
      `.framer-pOlB9 .framer-fvyq0c { height: 34px; left: 9px; position: absolute; top: 6px; width: 83px; }`,
      `.framer-pOlB9 .framer-1vzn31j { height: 5px; left: 9px; position: absolute; top: 29px; width: 5px; }`,
      `.framer-pOlB9 .framer-1eg6ovr { height: 9px; left: 17px; position: absolute; top: 25px; width: 10px; }`,
      `.framer-pOlB9 .framer-1x95i8u { height: 6px; left: 34px; position: absolute; top: 19px; width: 8px; }`,
      `.framer-pOlB9 .framer-18uqasx { height: 6px; left: 42px; position: absolute; top: 19px; width: 6px; }`,
      `.framer-pOlB9 .framer-86hfie { height: 2px; left: 44px; position: absolute; top: 20px; width: 2px; }`,
      `.framer-pOlB9 .framer-14bpjcl { height: 6px; left: 48px; position: absolute; top: 19px; width: 5px; }`,
      `.framer-pOlB9 .framer-11neasa { height: 6px; left: 53px; position: absolute; top: 19px; width: 5px; }`,
      `.framer-pOlB9 .framer-6m60j6 { height: 7px; left: 59px; position: absolute; top: 19px; width: 6px; }`,
      `.framer-pOlB9 .framer-1myletb { height: 4px; left: 61px; position: absolute; top: 20px; width: 3px; }`,
      `.framer-pOlB9 .framer-7lxjsu { height: 6px; left: 66px; position: absolute; top: 19px; width: 5px; }`,
      `.framer-pOlB9 .framer-69i36u { height: 6px; left: 29px; position: absolute; top: 28px; width: 5px; }`,
      `.framer-pOlB9 .framer-sapovd { height: 2px; left: 30px; position: absolute; top: 29px; width: 2px; }`,
      `.framer-pOlB9 .framer-1ygrbhu { height: 7px; left: 34px; position: absolute; top: 28px; width: 6px; }`,
      `.framer-pOlB9 .framer-ur4bxx { height: 4px; left: 36px; position: absolute; top: 29px; width: 3px; }`,
      `.framer-pOlB9 .framer-63tmxj { height: 6px; left: 41px; position: absolute; top: 28px; width: 6px; }`,
      `.framer-pOlB9 .framer-wnsecz { height: 2px; left: 42px; position: absolute; top: 29px; width: 2px; }`,
      `.framer-pOlB9 .framer-1kxha38 { height: 6px; left: 47px; position: absolute; top: 28px; width: 5px; }`,
      `.framer-pOlB9 .framer-119eivn { height: 6px; left: 52px; position: absolute; top: 28px; width: 5px; }`,
      `.framer-pOlB9 .framer-1f5lj0k { height: 7px; left: 57px; position: absolute; top: 28px; width: 6px; }`,
      `.framer-pOlB9 .framer-voohij { height: 4px; left: 59px; position: absolute; top: 29px; width: 3px; }`,
      `.framer-pOlB9 .framer-k6lbia { height: 6px; left: 64px; position: absolute; top: 28px; width: 5px; }`,
      `.framer-pOlB9 .framer-rurcie { height: 6px; left: 69px; position: absolute; top: 28px; width: 2px; }`,
      `.framer-pOlB9 .framer-fzppfh { height: 7px; left: 71px; position: absolute; top: 28px; width: 6px; }`,
      `.framer-pOlB9 .framer-1szx9ts { height: 4px; left: 73px; position: absolute; top: 29px; width: 3px; }`,
      `.framer-pOlB9 .framer-id80is { height: 7px; left: 77px; position: absolute; top: 28px; width: 6px; }`,
      `.framer-pOlB9 .framer-17x298s { height: 6px; left: 0px; position: absolute; top: 0px; width: 4px; }`,
      `.framer-pOlB9 .framer-ob0hod { height: 6px; left: 8px; position: absolute; top: 0px; width: 4px; }`,
      `.framer-pOlB9 .framer-u513gw { height: 6px; left: 15px; position: absolute; top: 0px; width: 6px; }`,
      `.framer-pOlB9 .framer-1ne4iim { height: 1px; left: 16px; position: absolute; top: 4px; width: 3px; }`,
      `.framer-pOlB9 .framer-t0pi19 { height: 6px; left: 22px; position: absolute; top: 0px; width: 5px; }`,
      `.framer-pOlB9 .framer-33nx9g { height: 7px; left: 31px; position: absolute; top: 0px; width: 5px; }`,
      `.framer-pOlB9 .framer-o2flsv { height: 6px; left: 39px; position: absolute; top: 0px; width: 5px; }`,
      `.framer-pOlB9 .framer-yhfgpw { height: 3px; left: 41px; position: absolute; top: 4px; width: 3px; }`,
      `.framer-pOlB9 .framer-1pvg2t3 { height: 6px; left: 47px; position: absolute; top: 0px; width: 4px; }`,
      `.framer-pOlB9 .framer-1tnqmeu { height: 6px; left: 55px; position: absolute; top: 0px; width: 5px; }`,
      `.framer-pOlB9 .framer-1fuokfb { height: 5px; left: 56px; position: absolute; top: 1px; width: 3px; }`,
      `.framer-pOlB9 .framer-enjlui { height: 7px; left: 68px; position: absolute; top: 0px; width: 6px; }`,
      `.framer-pOlB9 .framer-e86sae { height: 5px; left: 69px; position: absolute; top: 1px; width: 4px; }`,
      `.framer-pOlB9 .framer-188eiut { height: 6px; left: 77px; position: absolute; top: 0px; width: 5px; }`,
      `.framer-pOlB9 .framer-myerdc { flex: none; height: 810px; overflow: hidden; position: relative; width: 1200px; }`,
      `.framer-pOlB9 .framer-11ai8la { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 60px; height: min-content; justify-content: center; left: 0px; max-width: 1440px; overflow: visible; padding: 40px 0px 0px 0px; position: absolute; top: 0px; width: 1200px; z-index: 2; }`,
      `.framer-pOlB9 .framer-jetu0a { flex: none; height: 1px; overflow: hidden; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1m3393h { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: 726px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1ag7ox7 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 37px; height: 538px; justify-content: center; max-width: 800px; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-10g5zow { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-ine0je, .framer-pOlB9 .framer-1a0vd3e, .framer-pOlB9 .framer-1ywbped { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1k2xb9w { aspect-ratio: 0.9025 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 143px); overflow: visible; position: relative; width: 129px; }`,
      `.framer-pOlB9 .framer-x4puw1 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1btrok4 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-sjwugm { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-ryz8g3-container, .framer-pOlB9 .framer-1giq28c-container, .framer-pOlB9 .framer-kkkzdm-container { flex: none; height: auto; position: relative; width: auto; will-change: var(--framer-will-change-effect-override, transform); z-index: 4; }`,
      `.framer-pOlB9 .framer-16s785y { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; will-change: var(--framer-will-change-effect-override, transform); word-break: break-word; word-wrap: break-word; z-index: 1; }`,
      `.framer-pOlB9 .framer-1mrnzwg { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 16px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1o8x1zq, .framer-pOlB9 .framer-pwjdnb { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; z-index: 1; }`,
      `.framer-pOlB9 .framer-camxi5 { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 590px; word-break: break-word; word-wrap: break-word; z-index: 1; }`,
      `.framer-pOlB9 .framer-tz8ksx { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: wrap; gap: 12px; height: min-content; justify-content: center; max-width: 600px; overflow: hidden; padding: 0px; position: relative; width: 100%; will-change: var(--framer-will-change-effect-override, transform); }`,
      `.framer-pOlB9 .framer-c0ecf1-container, .framer-pOlB9 .framer-100qe0v-container, .framer-pOlB9 .framer-10uyuws-container, .framer-pOlB9 .framer-1k10fbh-container, .framer-pOlB9 .framer-st6c75-container, .framer-pOlB9 .framer-d4gk3j-container, .framer-pOlB9 .framer-tgu6r-container, .framer-pOlB9 .framer-1gyuk5z-container { flex: none; height: auto; position: relative; width: auto; }`,
      `.framer-pOlB9 .framer-17gjjei-container, .framer-pOlB9 .framer-1xxfnum-container { flex: none; height: auto; position: relative; width: auto; z-index: 0; }`,
      `.framer-pOlB9 .framer-lpn1zf { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: center; max-width: 440px; overflow: hidden; padding: 0px; position: relative; width: 440px; will-change: var(--framer-will-change-effect-override, transform); }`,
      `.framer-pOlB9 .framer-1l7zuay { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: hidden; padding: 40px 0px 0px 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1obgp8z-container { flex: none; height: auto; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-13rc8ge-container { flex: none; height: 828px; left: 0px; position: absolute; right: 0px; top: 0px; z-index: 0; }`,
      `.framer-pOlB9 .framer-1oiun7d { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: flex-start; overflow: visible; padding: 16px 0px 32px 0px; position: relative; scroll-margin-top: 20px; width: 100%; }`,
      `.framer-pOlB9 .framer-6aofif { background: linear-gradient(270deg, var(--token-4ba9d2af-bbc9-422d-912b-c0d857289d96, rgba(255, 255, 255, 0)) 0%, rgba(255, 255, 255, 0.18) 50%, var(--token-4ba9d2af-bbc9-422d-912b-c0d857289d96, rgba(255, 255, 255, 0)) 100%); flex: none; height: 1px; overflow: hidden; position: relative; width: 790px; }`,
      `.framer-pOlB9 .framer-w1lg9s { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: 110px; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; z-index: 1; }`,
      `.framer-pOlB9 .framer-baa3y5 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 48px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px 120px 80px 120px; position: relative; scroll-margin-top: 20px; width: 100%; }`,
      `.framer-pOlB9 .framer-1e3mst9-container { flex: none; height: auto; max-width: 1016px; position: sticky; top: 80px; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-s2u43q-container { flex: none; height: auto; max-width: 1016px; position: sticky; top: 110px; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-raaeud-container { flex: none; height: auto; max-width: 1016px; position: sticky; top: 140px; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-5bxk33-container { flex: none; height: auto; max-width: 1016px; position: sticky; top: 170px; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-15m3g4w { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 0px 100px 32px 100px; position: relative; scroll-margin-top: 100px; width: 100%; }`,
      `.framer-pOlB9 .framer-6kw8yk { --border-bottom-width: 1px; --border-color: rgba(204, 204, 204, 0.1); --border-left-width: 1px; --border-right-width: 1px; --border-style: solid; --border-top-width: 1px; align-content: flex-end; align-items: flex-end; background: linear-gradient(180deg, #040112 0%, rgb(3, 2, 10) 36.45129504504504%); border-bottom-left-radius: 24px; border-bottom-right-radius: 24px; border-top-left-radius: 24px; border-top-right-radius: 24px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 90px; height: 489px; justify-content: flex-start; max-width: 100%; overflow: hidden; padding: 20px 60px 20px 60px; position: relative; width: 959px; will-change: var(--framer-will-change-override, transform); }`,
      `.framer-pOlB9 .framer-2ommc0, .framer-pOlB9 .framer-j5nqza { -webkit-filter: blur(100px); background-color: #599cff; border-bottom-left-radius: 1000px; border-bottom-right-radius: 1000px; border-top-left-radius: 1000px; border-top-right-radius: 1000px; filter: blur(100px); flex: none; height: 401px; opacity: 0.1; overflow: hidden; position: absolute; right: -170px; top: -72px; width: 758px; will-change: var(--framer-will-change-override, transform); z-index: 0; }`,
      `.framer-pOlB9 .framer-1qosqal { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 505px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }`,
      `.framer-pOlB9 .framer-1a1qdib { aspect-ratio: 0.9448818897637795 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 187px); overflow: visible; position: relative; width: 177px; }`,
      `.framer-pOlB9 .framer-1jvo5ha { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: visible; padding: 0px 0px 20px 0px; position: relative; width: 1px; }`,
      `.framer-pOlB9 .framer-1gphbcs, .framer-pOlB9 .framer-1p2y6b5 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-de6uf, .framer-pOlB9 .framer-l1bvd3, .framer-pOlB9 .framer-16ngrb6, .framer-pOlB9 .framer-t3ckbj, .framer-pOlB9 .framer-ix7vm0 { --framer-paragraph-spacing: 0px; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }`,
      `.framer-pOlB9 .framer-7bccsa { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: wrap; gap: 12px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; will-change: var(--framer-will-change-effect-override, transform); z-index: 1; }`,
      `.framer-pOlB9 .framer-wfaiao, .framer-pOlB9 .framer-19x7ubt, .framer-pOlB9 .framer-ntpfr4, .framer-pOlB9 .framer-svm778, .framer-pOlB9 .framer-pv3e7d, .framer-pOlB9 .framer-19ywnvg, .framer-pOlB9 .framer-bhiht8, .framer-pOlB9 .framer-d3fgb7, .framer-pOlB9 .framer-29wsa5, .framer-pOlB9 .framer-11kice4, .framer-pOlB9 .framer-z5ode1, .framer-pOlB9 .framer-1vt85xo, .framer-pOlB9 .framer-fxtxur, .framer-pOlB9 .framer-1mrrhl2, .framer-pOlB9 .framer-fxfb4o, .framer-pOlB9 .framer-1famjec, .framer-pOlB9 .framer-1ld3hyh, .framer-pOlB9 .framer-1901631, .framer-pOlB9 .framer-11dbc0o, .framer-pOlB9 .framer-wqojqs, .framer-pOlB9 .framer-ngjgfq, .framer-pOlB9 .framer-10hmn1s, .framer-pOlB9 .framer-yh3vnt, .framer-pOlB9 .framer-1junq5a { --border-bottom-width: 1px; --border-color: rgba(255, 255, 255, 0.1); --border-left-width: 1px; --border-right-width: 1px; --border-style: solid; --border-top-width: 1px; align-content: center; align-items: center; background-color: #060c1c; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px; border-top-left-radius: 8px; border-top-right-radius: 8px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 6px 8px 6px 8px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
      `.framer-pOlB9 .framer-ihvust, .framer-pOlB9 .framer-5p2bg8, .framer-pOlB9 .framer-ie9667, .framer-pOlB9 .framer-3bcy2b, .framer-pOlB9 .framer-1b20c4o, .framer-pOlB9 .framer-1es5d79, .framer-pOlB9 .framer-1hwspbr, .framer-pOlB9 .framer-gxcewr, .framer-pOlB9 .framer-uowyc0, .framer-pOlB9 .framer-1g2p6fm, .framer-pOlB9 .framer-1r8u7px, .framer-pOlB9 .framer-brtkrg, .framer-pOlB9 .framer-rm5d2x, .framer-pOlB9 .framer-c118jl, .framer-pOlB9 .framer-1i6ogls, .framer-pOlB9 .framer-14gyu2y, .framer-pOlB9 .framer-vzy08p, .framer-pOlB9 .framer-1o8i9x, .framer-pOlB9 .framer-1wt0cgf, .framer-pOlB9 .framer-1o3nlvw, .framer-pOlB9 .framer-1r7vipd, .framer-pOlB9 .framer-j1qlf7, .framer-pOlB9 .framer-x70i7f, .framer-pOlB9 .framer-8v0jo5, .framer-pOlB9 .framer-8gcqit, .framer-pOlB9 .framer-q8ttth { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: auto; position: relative; white-space: pre; width: auto; }`,
      `.framer-pOlB9 .framer-1p8zp0c { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1hr09ao, .framer-pOlB9 .framer-1ifffu9, .framer-pOlB9 .framer-pyg707 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; will-change: var(--framer-will-change-effect-override, transform); }`,
      `.framer-pOlB9 .framer-1fn5ksr, .framer-pOlB9 .framer-1splrb3, .framer-pOlB9 .framer-1hxpol3, .framer-pOlB9 .framer-16nb5my, .framer-pOlB9 .framer-je9vi6, .framer-pOlB9 .framer-pjk76u, .framer-pOlB9 .framer-1kkkk7v, .framer-pOlB9 .framer-15cuzn6, .framer-pOlB9 .framer-filapd { --framer-paragraph-spacing: 0px; flex: 1 0 0px; height: auto; position: relative; white-space: pre-wrap; width: 1px; word-break: break-word; word-wrap: break-word; }`,
      `.framer-pOlB9 .framer-a4e6n0, .framer-pOlB9 .framer-1ft90qb, .framer-pOlB9 .framer-pw7y9j { --framer-paragraph-spacing: 0px; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 30%; word-break: break-word; word-wrap: break-word; }`,
      `.framer-pOlB9 .framer-1uk1trb, .framer-pOlB9 .framer-7drjao { background: linear-gradient(270deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.16) 50%, rgba(255, 255, 255, 0.1) 100%); flex: none; height: 1px; overflow: hidden; position: relative; width: 100%; will-change: var(--framer-will-change-effect-override, transform); }`,
      `.framer-pOlB9 .framer-1tli07g { --border-bottom-width: 1px; --border-color: rgba(204, 204, 204, 0.1); --border-left-width: 1px; --border-right-width: 1px; --border-style: solid; --border-top-width: 1px; align-content: flex-end; align-items: flex-end; border-bottom-left-radius: 24px; border-bottom-right-radius: 24px; border-top-left-radius: 24px; border-top-right-radius: 24px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 60px; height: 500px; justify-content: flex-start; max-width: 1100px; overflow: hidden; padding: 24px 40px 24px 40px; position: relative; width: 100%; will-change: var(--framer-will-change-override, transform); }`,
      `.framer-pOlB9 .framer-1j4ze6l { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 1px; }`,
      `.framer-pOlB9 .framer-cjqo7w, .framer-pOlB9 .framer-2eod1f { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: wrap; gap: 12px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; z-index: 1; }`,
      `.framer-pOlB9 .framer-1hfvgyb, .framer-pOlB9 .framer-16cebss { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 4px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-15brax8, .framer-pOlB9 .framer-1mc79iq { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 21px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1tgy434, .framer-pOlB9 .framer-1ydxxsi, .framer-pOlB9 .framer-awi7xc { --framer-paragraph-spacing: 0px; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 150px; word-break: break-word; word-wrap: break-word; }`,
      `.framer-pOlB9 .framer-18000xb, .framer-pOlB9 .framer-1svc1m7, .framer-pOlB9 .framer-jv8058, .framer-pOlB9 .framer-w2ijbu { background: linear-gradient(270deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.16) 50%, rgba(255, 255, 255, 0.1) 100%); flex: none; height: 1px; overflow: hidden; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-ysi25q, .framer-pOlB9 .framer-e9qko, .framer-pOlB9 .framer-1m7al0l, .framer-pOlB9 .framer-10j2496 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 28px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-308xc4 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 100%; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 20%; }`,
      `.framer-pOlB9 .framer-13fmz0s { aspect-ratio: 0.9448818897637795 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 212px); overflow: visible; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1uompjg { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 70px 120px 40px 120px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-v4gaf3 { --border-bottom-width: 1px; --border-color: var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)); --border-left-width: 1px; --border-right-width: 1px; --border-style: solid; --border-top-width: 1px; align-content: center; align-items: center; background-color: rgba(8, 8, 8, 0); border-bottom-left-radius: 20px; border-bottom-right-radius: 20px; border-top-left-radius: 20px; border-top-right-radius: 20px; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 60px; height: min-content; justify-content: center; overflow: hidden; padding: 56px 0px 40px 0px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }`,
      `.framer-pOlB9 .framer-hagj8c-container { flex: none; height: 53%; left: calc(50.00000000000002% - 99.81818181818181% / 2); opacity: 0.8; position: absolute; top: 0px; width: 100%; }`,
      `.framer-pOlB9 .framer-1ep1im7 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 26px; height: min-content; justify-content: center; overflow: hidden; padding: 0px 80px 0px 80px; position: relative; width: 1100px; }`,
      `.framer-pOlB9 .framer-t3gxy1 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px 120px 0px 120px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-rf1af9 { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: center; max-width: 630px; overflow: visible; padding: 0px; position: relative; width: 1px; }`,
      `.framer-pOlB9 .framer-153zs8o { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-4xb2f4-container { flex: none; height: 400px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1kekwq1-container, .framer-pOlB9 .framer-1sgi3pv-container, .framer-pOlB9 .framer-1wgahnv-container, .framer-pOlB9 .framer-1j17oj-container, .framer-pOlB9 .framer-j520vc-container, .framer-pOlB9 .framer-1d1ep79-container, .framer-pOlB9 .framer-1fjdm2c-container { height: auto; position: relative; width: auto; }`,
      `.framer-pOlB9 .framer-19l5wnw { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: center; max-width: 100%; overflow: visible; padding: 0px; position: relative; width: 960px; }`,
      `.framer-pOlB9 .framer-1gjwy52 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: min-content; }`,
      `.framer-pOlB9 .framer-iqojwl { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100px; }`,
      `.framer-pOlB9 .framer-b63goh { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; max-width: 520px; overflow: hidden; padding: 0px 32px 0px 32px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-16u2py6 { --framer-link-text-color: #0099ff; --framer-link-text-decoration: underline; flex: none; height: auto; position: relative; white-space: pre; width: auto; z-index: 1; }`,
      `.framer-pOlB9 .framer-v4ftl6 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: wrap; gap: 12px; height: min-content; justify-content: center; max-width: 600px; overflow: hidden; padding: 0px; position: relative; width: 318px; will-change: var(--framer-will-change-effect-override, transform); }`,
      `.framer-pOlB9 .framer-798q8m { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 114px; height: min-content; justify-content: center; overflow: visible; padding: 100px 80px 0px 80px; position: relative; width: 1199px; }`,
      `.framer-pOlB9 .framer-54d0ph { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: center; max-width: 630px; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1jsxo78 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1tmk44j { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-vmim1i-container { flex: none; height: 184px; position: relative; width: 326px; }`,
      `.framer-pOlB9 .framer-r7f9wx-container { height: 184px; position: relative; width: 184px; z-index: 0; }`,
      `.framer-pOlB9 .framer-lji8ao-container { height: 184px; position: relative; width: 184px; z-index: 1; }`,
      `.framer-pOlB9 .framer-15dqsjb-container { height: 184px; position: relative; width: 184px; z-index: 2; }`,
      `.framer-pOlB9 .framer-1kwm8ln-container { height: 184px; position: relative; width: 184px; z-index: 3; }`,
      `.framer-pOlB9 .framer-128re8f-container { height: 184px; position: relative; width: 184px; z-index: 4; }`,
      `.framer-pOlB9 .framer-t07jbq-container { height: 184px; position: relative; width: 184px; z-index: 5; }`,
      `.framer-pOlB9 .framer-1giz7ki-container { height: 184px; position: relative; width: 184px; z-index: 6; }`,
      `.framer-pOlB9 .framer-11mlbnu { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 60px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1jpxe6c { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 184px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 184px; }`,
      `.framer-pOlB9 .framer-tlfts5 { flex: none; height: 184px; overflow: visible; position: relative; width: 184px; z-index: 1; }`,
      `.framer-pOlB9 .framer-2gonrp-container { bottom: -16px; flex: none; height: 184px; left: -358px; position: absolute; width: 184px; z-index: 0; }`,
      `.framer-pOlB9 .framer-1qo2eb7-container { flex: none; height: 184px; left: -238px; position: absolute; top: -13px; width: 184px; z-index: 1; }`,
      `.framer-pOlB9 .framer-yc2dea-container { flex: none; height: 184px; left: -124px; position: absolute; top: calc(50.00000000000002% - 184px / 2); width: 184px; z-index: 2; }`,
      `.framer-pOlB9 .framer-h9v04p-container { flex: none; height: 184px; left: calc(45.6521739130435% - 184px / 2); position: absolute; top: calc(50.00000000000002% - 184px / 2); width: 184px; z-index: 3; }`,
      `.framer-pOlB9 .framer-3i4j5r-container { flex: none; height: 184px; position: absolute; right: -92px; top: calc(50.00000000000002% - 184px / 2); width: 184px; z-index: 4; }`,
      `.framer-pOlB9 .framer-4w8038-container { bottom: -7px; flex: none; height: 184px; position: absolute; right: -199px; width: 184px; z-index: 5; }`,
      `.framer-pOlB9 .framer-1pz3f5c-container { flex: none; height: 184px; left: calc(220.65217391304347% - 184px / 2); position: absolute; top: 8px; width: 184px; z-index: 6; }`,
      `.framer-pOlB9 .framer-1t2dwyv-container { flex: none; height: auto; position: absolute; right: -163px; top: -62px; width: auto; }`,
      `.framer-pOlB9 .framer-1swky20-container { flex: none; height: auto; left: -102px; position: absolute; top: -69px; width: auto; }`,
      `.framer-pOlB9 .framer-53i6k0 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 40px; height: min-content; justify-content: center; max-width: 800px; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-f5a4yz { background: linear-gradient(90.00000000000075deg, var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)) 0%, var(--token-d86f1591-0c16-44cd-be10-19334dfa9293, rgba(255, 255, 255, 0.1)) 50%, var(--token-30ee69d1-cae6-4a5c-9af2-db5c94a12e77, rgba(255, 255, 255, 0.05)) 100%); flex: none; height: 1px; max-width: 1300px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1uq1w8j { align-content: center; align-items: center; background-color: #000000; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 120px; justify-content: center; overflow: visible; padding: 40px 0px 80px 0px; position: relative; width: 1200px; }`,
      `.framer-pOlB9 .framer-10ayzux { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; height: min-content; justify-content: space-between; max-width: 1088px; overflow: visible; padding: 0px 32px 0px 32px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-1f0lz3i, .framer-pOlB9 .framer-sr11ea, .framer-pOlB9 .framer-1is15v9, .framer-pOlB9 .framer-1i1w11r, .framer-pOlB9 .framer-msyeuy, .framer-pOlB9 .framer-80rvna { flex: none; height: auto; position: relative; white-space: pre; width: auto; }`,
      `.framer-pOlB9 .framer-1u2prvw { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 32px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }`,
      `.framer-pOlB9 .framer-1a039k8 { -webkit-backdrop-filter: blur(0px); align-content: center; align-items: center; backdrop-filter: blur(0px); background-color: rgba(255, 255, 255, 0); bottom: 0px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; left: 50%; overflow: hidden; padding: 24px 0px 24px 0px; position: fixed; transform: translateX(-50%); width: 1200px; z-index: 3; }`,
      `.framer-pOlB9 .framer-10o9wam-container, .framer-pOlB9 .framer-1qm9zc8-container { flex: none; height: auto; position: relative; width: auto; z-index: 1; }`,
      `.framer-pOlB9 .framer-1b0lgr5 { -webkit-backdrop-filter: blur(0px); align-content: center; align-items: center; backdrop-filter: blur(0px); background-color: rgba(255, 255, 255, 0); bottom: 32px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; left: 50%; overflow: hidden; padding: 24px 0px 24px 0px; position: fixed; transform: translateX(-50%); width: 100%; z-index: 3; }`,
      `.framer-pOlB9 .framer-v8wvxm { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 24px; position: relative; scroll-margin-top: 100px; width: 100%; }`,
      `.framer-pOlB9 .framer-w2hvj6 { --border-bottom-width: 1px; --border-color: rgba(204, 204, 204, 0.1); --border-left-width: 1px; --border-right-width: 1px; --border-style: solid; --border-top-width: 1px; align-content: center; align-items: center; background: linear-gradient(180deg, #03000d 0%, rgb(5, 2, 20) 100%); border-bottom-left-radius: 24px; border-bottom-right-radius: 24px; border-top-left-radius: 24px; border-top-right-radius: 24px; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: flex-start; max-width: 1100px; overflow: hidden; padding: 24px 0px 0px 0px; position: relative; width: 100%; will-change: var(--framer-will-change-override, transform); }`,
      `.framer-pOlB9 .framer-h5h35y { -webkit-filter: blur(100px); background-color: #599cff; border-bottom-left-radius: 1000px; border-bottom-right-radius: 1000px; border-top-left-radius: 1000px; border-top-right-radius: 1000px; filter: blur(100px); flex: none; height: 273px; left: -24px; opacity: 0.1; overflow: hidden; position: absolute; right: -149px; top: -8px; will-change: var(--framer-will-change-override, transform); z-index: 0; }`,
      `.framer-pOlB9 .framer-8oghqd { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 26px; height: min-content; justify-content: center; overflow: visible; padding: 12px 16px 24px 16px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-185xfu4 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 100%; }`,
      `.framer-pOlB9 .framer-13as3wm { aspect-ratio: 0.9448818897637795 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 91px); overflow: visible; position: relative; width: 86px; }`,
      `.framer-pOlB9 .framer-q106rq, .framer-pOlB9 .framer-n5glwn, .framer-pOlB9 .framer-1e8v43r { --framer-paragraph-spacing: 0px; flex: none; height: auto; position: relative; white-space: pre-wrap; width: 130px; word-break: break-word; word-wrap: break-word; }`,
      `.framer-pOlB9 .framer-d30dk6, .framer-pOlB9 .framer-wqwgem { --border-bottom-width: 0px; --border-color: rgba(255, 255, 255, 0.06); --border-left-width: 0px; --border-right-width: 0px; --border-style: solid; --border-top-width: 1px; align-content: center; align-items: center; background-color: #242526; box-shadow: inset 0px 0.75px 1px 0px rgba(255, 255, 255, 0.24), inset 0px -2px 8px 0px rgba(0, 0, 0, 0.6), 0px 6px 10px -1px rgba(255, 255, 255, 0.09); display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; left: 0px; overflow: hidden; padding: 12px 8px 12px 8px; position: fixed; right: 0px; top: 0px; z-index: 1; }`,
      `.framer-pOlB9 .framer-ewfxou, .framer-pOlB9 .framer-78u7l9 { height: 16px; position: relative; width: 11px; }`,
      `.framer-pOlB9 .framer-slvk87, .framer-pOlB9 .framer-xgfepv { height: 16px; left: 0px; position: absolute; top: 0px; width: 11px; }`,
      `.framer-pOlB9 .framer-10jb0zj, .framer-pOlB9 .framer-epdygg { height: 2px; left: 5px; position: absolute; top: 6px; width: 2px; }`,
      `.framer-pOlB9 .framer-x56trj, .framer-pOlB9 .framer-t90yed { height: 3px; left: 3px; position: absolute; top: 6px; width: 2px; }`,
      `.framer-pOlB9 .framer-p0ynwy, .framer-pOlB9 .framer-1jaw5la { height: 2px; left: 4px; position: absolute; top: 8px; width: 2px; }`,
      `.framer-pOlB9 .framer-or0gqu, .framer-pOlB9 .framer-8hnl9 { height: 3px; left: 1px; position: absolute; top: 8px; width: 2px; }`,
      `.framer-pOlB9 .framer-l6acut, .framer-pOlB9 .framer-hyplre, .framer-pOlB9 .framer-oamzk7, .framer-pOlB9 .framer-1orhng2 { height: 1px; left: 2px; position: absolute; top: 10px; width: 1px; }`,
      `.framer-pOlB9 .framer-zdn5yu, .framer-pOlB9 .framer-l45c1f { height: 5px; left: 6px; position: absolute; top: 2px; width: 4px; }`,
      ...Ce,
      `.framer-pOlB9[data-border="true"]::after, .framer-pOlB9 [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }`,
      `@media (min-width: 810px) and (max-width: 1199.98px) { .framer-pOlB9.framer-72rtr7 { width: 810px; } .framer-pOlB9 .framer-1tq1nri { left: 50%; position: absolute; top: 48px; transform: translateX(-50%); } .framer-pOlB9 .framer-myerdc, .framer-pOlB9 .framer-v4gaf3, .framer-pOlB9 .framer-1ep1im7, .framer-pOlB9 .framer-798q8m, .framer-pOlB9 .framer-1uq1w8j { width: 100%; } .framer-pOlB9 .framer-11ai8la { gap: 80px; width: 100%; } .framer-pOlB9 .framer-1m3393h { height: 721px; } .framer-pOlB9 .framer-ine0je, .framer-pOlB9 .framer-1e3mst9-container, .framer-pOlB9 .framer-j5nqza, .framer-pOlB9 .framer-10uyuws-container, .framer-pOlB9 .framer-78u7l9 { order: 0; } .framer-pOlB9 .framer-x4puw1, .framer-pOlB9 .framer-raaeud-container, .framer-pOlB9 .framer-1j4ze6l { order: 2; } .framer-pOlB9 .framer-1giq28c-container, .framer-pOlB9 .framer-s2u43q-container, .framer-pOlB9 .framer-l1bvd3, .framer-pOlB9 .framer-308xc4, .framer-pOlB9 .framer-q8ttth { order: 1; } .framer-pOlB9 .framer-1oiun7d { gap: 38px; padding: 32px 0px 32px 0px; } .framer-pOlB9 .framer-1a0vd3e { gap: 12px; } .framer-pOlB9 .framer-6aofif { order: 0; width: 68%; } .framer-pOlB9 .framer-w1lg9s { height: 80px; order: 1; } .framer-pOlB9 .framer-baa3y5 { padding: 0px 32px 32px 32px; } .framer-pOlB9 .framer-5bxk33-container { order: 3; top: 160px; } .framer-pOlB9 .framer-15m3g4w { padding: 0px 32px 32px 32px; width: 100%; } .framer-pOlB9 .framer-1tli07g { background: linear-gradient(180deg, #040112 0%, rgb(3, 2, 10) 36.45129504504504%); padding: 0px 40px 24px 40px; } .framer-pOlB9 .framer-13fmz0s { height: var(--framer-aspect-ratio-supported, 144px); } .framer-pOlB9 .framer-1uompjg { padding: 70px 32px 40px 32px; } .framer-pOlB9 .framer-2gonrp-container { bottom: -32px; left: -222px; } .framer-pOlB9 .framer-1qo2eb7-container { left: -102px; top: -1px; } .framer-pOlB9 .framer-h9v04p-container { left: calc(50.00000000000002% - 184px / 2); } .framer-pOlB9 .framer-4w8038-container { bottom: 1px; right: -119px; } .framer-pOlB9 .framer-1pz3f5c-container { left: calc(172.82608695652175% - 184px / 2); top: 32px; } .framer-pOlB9 .framer-1u2prvw { gap: 24px; } .framer-pOlB9 .framer-1a039k8 { bottom: 32px; width: 100%; }}`,
      `@media (max-width: 809.98px) { .framer-pOlB9.framer-72rtr7 { width: 390px; } .framer-pOlB9 .framer-1tq1nri { left: 50%; order: 0; position: absolute; top: 48px; transform: translateX(-50%); } .framer-pOlB9 .framer-myerdc { order: 1; width: 100%; } .framer-pOlB9 .framer-11ai8la { gap: 80px; padding: 24px 0px 0px 0px; width: 100%; } .framer-pOlB9 .framer-1m3393h { padding: 0px 32px 0px 32px; } .framer-pOlB9 .framer-ine0je, .framer-pOlB9 .framer-iqojwl, .framer-pOlB9 .framer-54d0ph, .framer-pOlB9 .framer-w2hvj6, .framer-pOlB9 .framer-1ywbped, .framer-pOlB9 .framer-13as3wm, .framer-pOlB9 .framer-ewfxou { order: 0; } .framer-pOlB9 .framer-x4puw1, .framer-pOlB9 .framer-11mlbnu, .framer-pOlB9 .framer-ix7vm0 { order: 2; } .framer-pOlB9 .framer-1btrok4 { gap: 0px; } .framer-pOlB9 .framer-sjwugm { overflow: unset; will-change: var(--framer-will-change-effect-override, transform); z-index: 1; } .framer-pOlB9 .framer-16s785y { overflow: visible; will-change: unset; z-index: unset; } .framer-pOlB9 .framer-1mrnzwg { gap: 8px; } .framer-pOlB9 .framer-camxi5, .framer-pOlB9 .framer-lpn1zf, .framer-pOlB9 .framer-6aofif { width: 100%; } .framer-pOlB9 .framer-kkkzdm-container, .framer-pOlB9 .framer-19l5wnw, .framer-pOlB9 .framer-vmim1i-container, .framer-pOlB9 .framer-1gyuk5z-container, .framer-pOlB9 .framer-8gcqit { order: 1; } .framer-pOlB9 .framer-1l7zuay { gap: 16px; padding: 20px 0px 0px 0px; } .framer-pOlB9 .framer-13rc8ge-container { height: 835px; order: 7; } .framer-pOlB9 .framer-1oiun7d { gap: 16px; order: 2; padding: 24px 0px 40px 0px; } .framer-pOlB9 .framer-baa3y5 { padding: 0px 24px 0px 24px; } .framer-pOlB9 .framer-1e3mst9-container { height: 643px; order: 0; top: 40px; } .framer-pOlB9 .framer-s2u43q-container { height: 643px; order: 1; top: 65px; } .framer-pOlB9 .framer-raaeud-container { height: 643px; order: 2; top: 90px; } .framer-pOlB9 .framer-5bxk33-container { height: 644px; order: 3; top: 115px; } .framer-pOlB9 .framer-1uompjg { flex-direction: column; order: 5; padding: 48px 24px 40px 24px; } .framer-pOlB9 .framer-v4gaf3 { padding: 56px 0px 20px 0px; width: 100%; } .framer-pOlB9 .framer-hagj8c-container { left: calc(50.00000000000002% - 100% / 2); order: 0; width: 100%; } .framer-pOlB9 .framer-1ep1im7 { order: 2; width: 100%; } .framer-pOlB9 .framer-4xb2f4-container { width: 189%; } .framer-pOlB9 .framer-798q8m { gap: 24px; order: 6; padding: 32px 32px 0px 32px; width: 100%; } .framer-pOlB9 .framer-1uq1w8j { align-content: flex-start; align-items: flex-start; gap: 26px; order: 10; padding: 40px 16px 140px 16px; width: 100%; } .framer-pOlB9 .framer-10ayzux { flex-direction: column; gap: 10px; justify-content: center; order: 0; padding: 0px; } .framer-pOlB9 .framer-1u2prvw { gap: 22px; } .framer-pOlB9 .framer-1b0lgr5 { order: 9; } .framer-pOlB9 .framer-v8wvxm { order: 3; } .framer-pOlB9 .framer-d30dk6 { order: 11; }}`,
    ]),
    (Iy = K(Py, Fy, `framer-pOlB9`)),
    (Ly = Iy),
    (Iy.displayName = `Home`),
    (Iy.defaultProps = { height: 4959, width: 1200 }),
    B(
      Iy,
      [
        {
          explicitInter: !0,
          fonts: [
            {
              family: `Geist`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/geist/v4/gyBhhwUxId8gMGYQMKR3pzfaWI_RruM4mJPby1QNtA.woff2`,
              weight: `500`,
            },
            {
              family: `Geist`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/geist/v4/gyBhhwUxId8gMGYQMKR3pzfaWI_RnOM4mJPby1QNtA.woff2`,
              weight: `400`,
            },
            {
              family: `DM Sans`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/dmsans/v17/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwAopxhS2f3ZGMZpg.woff2`,
              weight: `400`,
            },
            {
              family: `DM Sans`,
              source: `google`,
              style: `normal`,
              url: `https://fonts.gstatic.com/s/dmsans/v17/rP2tp2ywxg089UriI5-g4vlH9VoD8CmcqZG40F9JadbnoEwAC5thS2f3ZGMZpg.woff2`,
              weight: `900`,
            },
            {
              family: `Satoshi`,
              source: `fontshare`,
              style: `normal`,
              url: `https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2`,
              weight: `500`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F`,
              url: `https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116`,
              url: `https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+1F00-1FFF`,
              url: `https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0370-03FF`,
              url: `https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF`,
              url: `https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD`,
              url: `https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2`,
              weight: `400`,
            },
            {
              family: `Inter`,
              source: `framer`,
              style: `normal`,
              unicodeRange: `U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB`,
              url: `https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2`,
              weight: `400`,
            },
          ],
        },
        ...Bv,
        ...Uv,
        ...Wv,
        ...Gv,
        ...Kv,
        ...Yv,
        ...Xv,
        ...Zv,
        ...Qv,
        ...$v,
        ...ey,
        ...ty,
        ...ry,
        ...W(Te),
      ],
      { supportsExplicitInterCodegen: !0 }
    ),
    (Ry = {
      exports: {
        Props: { type: `tsType`, annotations: { framerContractVersion: `1` } },
        default: {
          type: `reactComponent`,
          name: `FrameraugiA20Il`,
          slots: [],
          annotations: {
            framerImmutableVariables: `true`,
            framerAcceptsLayoutTemplate: `true`,
            framerComponentViewportWidth: `true`,
            framerIntrinsicHeight: `4959`,
            framerContractVersion: `1`,
            framerAutoSizeImages: `true`,
            framerIntrinsicWidth: `1200`,
            framerScrollSections: `{"BgNtyLH0x":{"pattern":":BgNtyLH0x","name":"home"},"OunIGDRQr":{"pattern":":OunIGDRQr","name":"home-mobile"},"V5V4Z4DQQ":{"pattern":":V5V4Z4DQQ","name":"work"},"Rd_hGxn1c":{"pattern":":Rd_hGxn1c","name":"case-study"},"dCDC69rMu":{"pattern":":dCDC69rMu","name":"card1"},"uqYhhRTT9":{"pattern":":uqYhhRTT9","name":"card-2"},"FTMlkB5I5":{"pattern":":FTMlkB5I5","name":"card-3"},"MLufM5z_P":{"pattern":":MLufM5z_P","name":"card-4"},"qiLmUSAi8":{"pattern":":qiLmUSAi8","name":"about-me"},"UDHvzrpMW":{"pattern":":UDHvzrpMW","name":"recommendation-mobile"},"k637go2MC":{"pattern":":k637go2MC","name":"contact-me"},"cF0GYYqyR":{"pattern":":cF0GYYqyR","name":"mobile-about-me"}}`,
            framerResponsiveScreen: ``,
            framerColorSyntax: `true`,
            framerDisplayContentsDiv: `false`,
            framerCanvasComponentVariantDetails: `{"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]},"Oc18Q6NWV":{"layout":["fixed","auto"]},"YDU0n2zno":{"layout":["fixed","auto"]}}}`,
          },
        },
        __FramerMetadata__: { type: `variable` },
      },
    });
})();
export { Ry as __FramerMetadata__, Ly as default };
//# sourceMappingURL=VMX0N7UPjyu7gd1d7LPBLGZ7mK9SzBYjpvqDL89Kvk8.D_o_M4ya.mjs.map
